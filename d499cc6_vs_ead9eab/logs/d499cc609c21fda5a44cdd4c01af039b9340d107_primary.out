cset: moving following pidspec: 9977
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.556258307 seconds)
loading group "string"... done (took 0.515980209 seconds)
loading group "linalg"... done (took 9.320312241 seconds)
loading group "parallel"... done (took 0.167947264 seconds)
loading group "find"... done (took 4.103693284 seconds)
loading group "tuple"... done (took 2.055811357 seconds)
loading group "dates"... done (took 1.388683435 seconds)
loading group "micro"... done (took 0.195000077 seconds)
loading group "io"... done (took 0.514207987 seconds)
loading group "scalar"... done (took 57.174834874 seconds)
loading group "sparse"... done (took 14.421945068 seconds)
loading group "broadcast"... done (took 1.75946166 seconds)
loading group "union"... done (took 10.538949751 seconds)
loading group "simd"... done (took 3.621841437 seconds)
loading group "random"... done (took 13.375886697 seconds)
loading group "problem"... done (took 2.2335415 seconds)
loading group "array"... done (took 24.402864848 seconds)
loading group "misc"... done (took 1.149585852 seconds)
loading group "sort"... done (took 3.812055849 seconds)
loading group "collection"... done (took 22.21833363 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.698835306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149202353 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.197303302 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.207262739 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278702899 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168464719 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15948753 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171615957 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.660829495 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208847159 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138047932 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439355451 seconds)
done (took 6.248853014 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.433966637 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061187111 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169681004 seconds)
  done (took 0.954771204 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095830622 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160950425 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110553583 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097489841 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094898171 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111459565 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.157629053 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110091025 seconds)
  done (took 1.558646249 seconds)
done (took 3.760648334 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502692905 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.950578282 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.652279734 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181889191 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312428207 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311982969 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267408028 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.225125206 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093135726 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086607801 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177246073 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.459564376 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.389489473 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.008575811 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070118064 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095445866 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153431732 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.916216859 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081658219 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.11059912 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530832936 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214687427 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117983719 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.109458542 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18820864 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136804757 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.144839577 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105898313 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.752491571 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137427322 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218856951 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085051807 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140252402 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167920586 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.218002792 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113589794 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.742200317 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203792954 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09811953 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103590827 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.75504832 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12582878 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.21021919 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10874665 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069308814 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.173023888 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116367452 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082048771 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094805003 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104310891 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172211215 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.522216617 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108643354 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195015372 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096978883 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.759411864 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099670845 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284583396 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1273648 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096232559 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093752285 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089334265 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171240071 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098603251 seconds)
  done (took 21.085947802 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169188763 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.188016786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080188899 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160374305 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123385103 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100912623 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087559388 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079962962 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129547479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180640429 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142670587 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193822692 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078242282 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092528596 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.178618943 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233282878 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128586533 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107135831 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089980716 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109646974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124334805 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11598514 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093981365 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096811054 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175179748 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210554568 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115184131 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12655932 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091714316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096888228 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145206454 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146521355 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095407104 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091222564 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172477799 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125737288 seconds)
  done (took 5.416789314 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.23767778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105383513 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.25142485 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201838167 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155691167 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108874599 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190691078 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179024791 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30121526 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.209105153 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183652963 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115484378 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116634315 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08307048 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083091572 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080050264 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.842544153 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179595534 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157847797 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.194530044 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121733846 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087756341 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.746870953 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088177624 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.10618557 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098127632 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065733498 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.229044908 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121211992 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.501311165 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08954777 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103729532 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13932065 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204781278 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14075463 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12772567 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11840556 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091929078 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226687067 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.180431673 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105249138 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081790359 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103731068 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122400691 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138733704 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.113510664 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090363027 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.141403037 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112700994 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087116106 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133653589 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.178519559 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200761913 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.165994084 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.090130596 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298611437 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131770248 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104238465 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.114214664 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.811702661 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141936555 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087971592 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098697677 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098703194 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082395883 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.823115845 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110640885 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.337243724 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084248144 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158711523 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100518299 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123393974 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08789728 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105419201 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115062188 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089033598 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098817734 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090451935 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081463851 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109839317 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115069451 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103542566 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084261204 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150009998 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116615877 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.1121086 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127843073 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092719891 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089883637 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131863067 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085274391 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.109874377 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170143843 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12031956 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113914416 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11920664 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146584004 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094228323 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.286406882 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.10195235 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127818349 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102397239 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117407458 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121095078 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083687597 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087033973 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099292585 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085656144 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150439102 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.105256262 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08416587 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091084837 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103160814 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09565099 seconds)
  done (took 28.722351915 seconds)
done (took 55.942136009 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414458361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082798239 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081976835 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104558268 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083314087 seconds)
  done (took 1.562178403 seconds)
done (took 2.33408131 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.307691083 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204181621 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090956888 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193736857 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088491141 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200756256 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185238709 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104525652 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211209959 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087469224 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196025556 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087826602 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10968378 seconds)
  done (took 2.861346265 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106593234 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109728479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105519005 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123757427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089674183 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104139569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123911777 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11135613 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10363783 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118009001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088842653 seconds)
  done (took 1.951989076 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104291684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107259031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096050133 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121421866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088935401 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101762103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121210595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110057361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102358547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117510893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089207364 seconds)
  done (took 1.931140196 seconds)
done (took 7.512151162 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.212802759 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.054979059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193579504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247462614 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.370504936 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.281494386 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.616628623 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20423938 seconds)
  done (took 16.081429 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.193034044 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.118120048 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100919328 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095841098 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117621522 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095461371 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094256259 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.119003331 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099121403 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094639479 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097157187 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111957254 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098174775 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094477098 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.117214347 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094590031 seconds)
  done (took 2.575218749 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139248364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119207617 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.120384163 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.102040769 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097853994 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120893167 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104065118 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.120682875 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097452546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096935371 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.124199313 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101890611 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099537938 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.114173737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102215513 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120219268 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.114596975 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102465544 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120376411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121357122 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10346183 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098762978 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119938576 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101302477 seconds)
  done (took 3.52053023 seconds)
done (took 22.949122092 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150028576 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105471303 seconds)
  done (took 1.032481016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167152821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.187333599 seconds)
  done (took 1.136237297 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114900994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093571536 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142294631 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107447742 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094407047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112914778 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119477065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.112980638 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096107683 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094754507 seconds)
  done (took 1.877154979 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098082305 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097989835 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126991847 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171019862 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122812336 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098083911 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097175765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11650015 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099519499 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093608273 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117923865 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112710492 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098839524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132103671 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0983616 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.117460956 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104299366 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097698038 seconds)
  done (took 2.787984282 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094090177 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096090152 seconds)
  done (took 0.978689119 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097021625 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092854336 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095849549 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113316784 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093285256 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092355599 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111054556 seconds)
  done (took 1.484421309 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531751768 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.242682117 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.378671268 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073065647 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125692171 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.327176731 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106274827 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073012148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093878698 seconds)
  done (took 2.7754968 seconds)
done (took 12.856488803 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095296895 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.444147401 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.627446618 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134139893 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09378525 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151624798 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.335466053 seconds)
done (took 2.67649273 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357581785 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167471157 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085996131 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095672641 seconds)
  done (took 1.492889424 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085481122 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103038662 seconds)
  done (took 0.983490638 seconds)
done (took 3.271240149 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092294209 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093198444 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091988583 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.110580612 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093904958 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091433834 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.13449776 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094341047 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092415523 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.112864981 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091674716 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09228017 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091086793 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11248679 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092524126 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091841288 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.215454074 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112821539 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091725491 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091865593 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.109863901 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093583059 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092067853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09109685 seconds)
  done (took 3.305085095 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115749845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095674596 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.114690283 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096705175 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096978255 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.115429692 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096971619 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095482323 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.116147032 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095476736 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097359448 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114672752 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094242291 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097683861 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112221813 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09738473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097302038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112501667 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09524186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097051308 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096904781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113047197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097188616 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095534006 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115586347 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098095854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094308362 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.113470016 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096780603 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096034978 seconds)
  done (took 3.86964327 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100235512 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089958227 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092987104 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11996302 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09050278 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093721974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107607608 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093797472 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094311295 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092006393 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.114270118 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093791885 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092337999 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113435096 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094250952 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09649586 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120413496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092982913 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093226311 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094682083 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115916836 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093246425 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093145224 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.112826848 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093655276 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08964031 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092620367 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.112829851 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093732729 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091720602 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.115011064 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097526577 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093492475 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.123050215 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096475746 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092578602 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09805821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10930552 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094158412 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090121307 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.108729888 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093553657 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093370183 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.117196258 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094527314 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093853485 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092878291 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.113436632 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094746755 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09528586 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10927898 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093072939 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095222165 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093831276 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.11454641 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08963158 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092366704 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.109391774 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09577852 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093154164 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.107336345 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091722768 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09880153 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093447149 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.128159593 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100187391 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092657663 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.114165285 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095061181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0988632 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.114097331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104050871 seconds)
  done (took 8.004540522 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118362817 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102852185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113398569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095051472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094128381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093144247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118055166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093735942 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094499797 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120168144 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093826387 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09380739 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113926289 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095187035 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094382812 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112694428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09962021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092989688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092178761 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113353381 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09438386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098704172 seconds)
  done (took 3.045231241 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.245169306 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101339144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143609114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127018946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111352498 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125147199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098670508 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100597918 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117442938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105007837 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103325849 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117187667 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112205888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121833858 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104978015 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105558884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117514385 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105524173 seconds)
  done (took 2.971104775 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107814339 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095654762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158670247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096044546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095452152 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.115436816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10233522 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115289731 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115964187 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096652305 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102702516 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114228282 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097098101 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095778311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115519788 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096146933 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097043415 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09486318 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122076837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101868331 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.119655649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103934376 seconds)
  done (took 3.169068985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10901044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094917447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131758235 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099454687 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095377352 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113594403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101424699 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095890616 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121142989 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097436133 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096159784 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094011256 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.129438457 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096489366 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100791937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1158266 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096563187 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095151485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114030981 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096585466 seconds)
  done (took 2.905596584 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198570293 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131394782 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111308498 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11972556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131997163 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112803241 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13858117 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112954587 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115409299 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141611304 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112044695 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111731387 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139880218 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117877211 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13103028 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120530272 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119178703 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139841876 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11258806 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130414559 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12473765 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111868137 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14103651 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112893826 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130509194 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112699387 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11098192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136036154 seconds)
  done (took 4.342758532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094783911 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094850469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09389958 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112850244 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094998533 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094734533 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093210177 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114646423 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094434425 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093990583 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.115010715 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095015155 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094930159 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093262838 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113867483 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095661257 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094477307 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.113231508 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095457949 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094908717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093518387 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114722549 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094872889 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094614755 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113205527 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09632447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095148832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095122781 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113509337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096084355 seconds)
  done (took 3.808216883 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109191399 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105465716 seconds)
  done (took 1.030403656 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103513303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10881698 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092883041 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114427261 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101826286 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094481009 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122465084 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10205355 seconds)
  done (took 1.657210669 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16950291 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.195317924 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100367512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12751852 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.173968771 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.186623872 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133928903 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.121321712 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.095031289 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087777503 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.187125193 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086152296 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.116719102 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093544298 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095658743 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.123939574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096740584 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103861811 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123125364 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098195797 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101449773 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12107671 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099067975 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10630884 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.111168327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09938233 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09834414 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.128375682 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093951752 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09610447 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11414573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096859384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099369969 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.12022681 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097122826 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.19531995 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104450713 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092018615 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.118177528 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101707627 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.130260838 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.118104055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09859501 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094667695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118540214 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101372179 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101039315 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.115331984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090239268 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090696729 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097376 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112169153 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095445029 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094773784 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116530671 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103630915 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097361333 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.112699806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092493745 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091930545 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114621908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092695447 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097066534 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118865953 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097628826 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095565784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115017 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096981956 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097829409 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.117520112 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096185695 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110566713 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117357801 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10159197 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10101927 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.117919744 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094671536 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101293816 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113915743 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097971048 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100141016 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145922816 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099170991 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091584551 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112352555 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104513151 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099185518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.118648049 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091330958 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105140186 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097868311 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.118870214 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089304513 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094319955 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.113388721 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101117887 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089399846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115755781 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096957441 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101494681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120446602 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096101676 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098018749 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12132723 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10296016 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094958025 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.182251388 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09318678 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.112563197 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100066775 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102715297 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088970252 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115746423 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095676762 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092534952 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11240794 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102879144 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095651549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117980086 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100680401 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097387664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117713223 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098698515 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095507467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.111657146 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101436502 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105167424 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.117793401 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098834356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097788343 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097513657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.117093521 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100855912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093164152 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122314158 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094916469 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095529816 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.118029954 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101779982 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096304844 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.112639953 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096555854 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097820331 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115756271 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100190115 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097628336 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110881418 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.090536234 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09732774 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111374918 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098285823 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105354459 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.112559634 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099823728 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093436044 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104251945 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.114526994 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100695487 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099045137 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123382869 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104081043 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088363961 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113480701 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099428565 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098219404 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.113248899 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097931308 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096033651 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122406627 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.091810698 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101750509 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088561332 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115097458 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103232122 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097492984 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.12045177 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.093216743 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135448929 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129982451 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102223754 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095427987 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.117512848 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101217899 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096193796 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.121104716 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103135182 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101532814 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114703343 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.096536229 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103205931 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.112614111 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101412616 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095922114 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117017255 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090353389 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097881721 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088023414 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122414869 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098716464 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.100018655 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.122287198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10032449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095939994 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125363777 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093993168 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100780553 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.109328009 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103212776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106704002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.123032405 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103876268 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098143067 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115177705 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100106655 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105743125 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099363194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.117865826 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098826534 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090051605 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111356898 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104991633 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099472775 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11587116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0982472 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098630629 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118496424 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095553701 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090284595 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.121029846 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1021639 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093364247 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118984055 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096101396 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09540934 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123572138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.091408132 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093844685 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.12019224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103289672 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09768854 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096099441 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.120723871 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104117011 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100040305 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.121471662 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095819448 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105155272 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115611001 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096604114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103149988 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098055765 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.112470168 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099194179 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096193098 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11525006 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095951238 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100682077 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123885306 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104185944 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094869187 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.123366107 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10351009 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102875233 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115117502 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103317747 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09291824 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109584326 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.095775727 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089680748 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099523969 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113856657 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102604319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094672653 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117653299 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101349829 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098849791 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.115904543 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102905614 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126842387 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.092632799 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090685205 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094965358 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118022969 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094403136 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092943593 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.119817821 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099847195 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.1117258 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120291065 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094385257 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097706908 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.123195345 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094975834 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103470001 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.124133522 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104818566 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.093098082 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101337817 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.116079775 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101923855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090742824 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119062068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096878381 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096511365 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.11537354 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095217974 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094233073 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111993781 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094374361 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10319776 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117487217 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102037836 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095805688 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115209623 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095485117 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094075371 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.124410373 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097426635 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103385214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.118501452 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.092404279 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.091029383 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101043785 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118949973 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103555557 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09270718 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.121786576 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104204731 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100019981 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.118601814 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106272243 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105505107 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.124316926 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104270452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090712094 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114956518 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103520846 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097588947 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100835099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.121709263 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.091809161 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099801239 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.124669135 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098501981 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095526183 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113048454 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098589702 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104649551 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.121551979 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.103170802 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100206318 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118131502 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.094271136 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100571169 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103674986 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.120513998 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105084033 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097087835 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.122804373 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.095688076 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10381858 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.119186595 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.092348964 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09165991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.115126232 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105272396 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091306234 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102043982 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.123843542 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094944686 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096264127 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.123700018 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.095201841 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099709607 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123099593 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.096190584 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108409456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.120078818 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.096286476 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10289849 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122769802 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.092644114 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095839352 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117227687 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105558884 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095890406 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102716693 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11909636 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102975734 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099661836 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.123756729 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104441564 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102908268 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.112927628 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106056783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10022741 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.122108964 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095967301 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09694927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.111890415 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097569531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104069798 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.115058137 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107121862 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103744477 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095748139 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116959985 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103866141 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097164591 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125759009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.094546171 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099264858 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.113090638 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10068515 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09657953 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.125039574 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095223771 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091535662 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12414323 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10492724 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102116687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120011071 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104393163 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.092468184 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091452621 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.122786563 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095076127 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106833837 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122498538 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095700089 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096343048 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.12196076 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100678865 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104156821 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111852771 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.096224038 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098712553 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119956246 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.097674781 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092926342 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.122899706 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099281549 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100498604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.118023877 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.094178038 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096876775 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105302497 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.119873484 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094980234 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095230197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126212279 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097775074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09460833 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.113245197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105545684 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099330439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126287149 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095088768 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098415657 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.116159324 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101670611 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104719951 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.117594004 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098716115 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097363639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12454412 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10589524 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091982158 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095132139 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.131114299 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103486274 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099452661 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.123495174 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09750821 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105969831 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128496508 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102683868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091695948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.114633362 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098258305 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091811536 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.122078094 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104637957 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096470299 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.116344614 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103324243 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103587893 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101259245 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.122361719 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092931999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104647595 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.116419204 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.102322439 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0924869 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.113475883 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101176623 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104404967 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117408575 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.099498268 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100017328 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100792286 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11646055 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.096017029 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10079962 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12530085 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103927252 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099837696 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118175014 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102101182 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10965319 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.120912583 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.098883873 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10538491 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.125705231 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100983651 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098324305 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123060063 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106839633 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101308344 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.125773466 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.097548298 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098521118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125707327 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106455507 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107049158 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119117243 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094079771 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103499334 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095574933 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115393445 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103081544 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105971576 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.127483739 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.098849581 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095471707 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129480851 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104750821 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098840711 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.118353738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.096805048 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103934655 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118540144 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103822421 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096203993 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.126580343 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106838726 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105515304 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108523437 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.116123705 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103969227 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100250598 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.13041407 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100823435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09356092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116028581 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102368674 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107237799 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.126138456 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104190135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102939487 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101400953 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.121268843 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099357048 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095543575 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128471993 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104036414 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099865074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.122679916 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09821654 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099643118 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.122974437 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105622579 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106686402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.123309256 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110834346 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105300332 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.118664182 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.097582661 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099965645 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.123334888 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.100396985 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104634465 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095640515 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.115629089 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105282313 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105802071 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121228126 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107706015 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106764205 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.119942697 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102319297 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10760286 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.126463358 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102616052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.100381131 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122653307 seconds)
  done (took 64.340878545 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151329021 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107833266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124008717 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101738846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118585052 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125886539 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102161525 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104137404 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124722075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111401038 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10191289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123374698 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116954608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142461552 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120150614 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110634041 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122549313 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10276621 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101837671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123671173 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11760057 seconds)
  done (took 3.322319479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119024424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115172467 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135023386 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116484854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109547799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135286686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112054193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133783004 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11619208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109300282 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137057583 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112998378 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.130505841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111100162 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110575304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132052966 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117297039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109561348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.135886693 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112396835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129716076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113394378 seconds)
  done (took 3.525794516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.133512439 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105378764 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100629696 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.124047688 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104920674 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101434198 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.126283587 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101689537 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110880371 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118534836 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093432482 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.097223606 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101334115 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123249611 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097126108 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100946147 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.132901327 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106294243 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105892656 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.12325045 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.094257797 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101668724 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102426991 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.114760543 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106617329 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106396142 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124413028 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106247659 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093047378 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103970554 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.124924895 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095346412 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092217872 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114635667 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09308572 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.1056443 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125442279 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104157309 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103208725 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092735745 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.125719269 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105717773 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092536558 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123807713 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103821792 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095469682 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10535858 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.125712006 seconds)
  done (took 6.06704889 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13290007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161299911 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106118033 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129664743 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.140016339 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111705546 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104141874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133127055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103546477 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.128306749 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.118009979 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115756201 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130756013 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109245387 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106165665 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130320483 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108712497 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103772414 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.132765486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105437919 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109502962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.13065614 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115108492 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.136620027 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109286104 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104271639 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126502749 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10936265 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114113254 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.132997639 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109641456 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108648802 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137750478 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108556961 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126595009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108087977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116419274 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.127523339 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.363270637 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104652274 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126707803 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111230835 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106781037 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138118541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107693723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10875531 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128727193 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10458823 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113905965 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.128861149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114290092 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136986414 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109841552 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106332655 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129628076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116668258 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105448395 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.12675278 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109397571 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113491039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.125351066 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109711927 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115564067 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.130140851 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111589609 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115132308 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129432591 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107886974 seconds)
  done (took 9.31470189 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13705025 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110007146 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13890251 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117900328 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108130301 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.132280578 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109493043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108868034 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132607855 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114243717 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130391162 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.229062648 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129711537 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113807978 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131578464 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11031326 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109615824 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131923061 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111167558 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108237018 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.131280381 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118479033 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107968618 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140084504 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120369217 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127656527 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11116686 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10814378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140338307 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110694104 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11876629 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.131867886 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112090162 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138332884 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12136278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108731006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125570786 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110843984 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110256898 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13188842 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106763158 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116536607 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131363563 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106020116 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108585666 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132039207 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119179052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141061932 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115610442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114749438 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132800756 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118360861 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130707543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110718619 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117480302 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1480242 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117063979 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140673824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110764155 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116450772 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139634306 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123660418 seconds)
  done (took 8.52546277 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103930256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102615004 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101671867 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124721936 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103579722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101277684 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101835506 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12699918 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103120166 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.1030219 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125765015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10279289 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102297786 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100924496 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.124800927 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102208598 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102266845 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.124481751 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102901703 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102244846 seconds)
  done (took 3.051204836 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112435666 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117799966 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.126927174 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111438612 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104500161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13105682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104877792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105248719 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10343969 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127207308 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114671845 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133565658 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106045329 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110131952 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134121874 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110812904 seconds)
  done (took 2.743697295 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121521808 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119057459 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.214031547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106826503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128629206 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112267698 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105178947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131178483 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104464471 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108924815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.131898965 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108397444 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104734617 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.127664908 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106147018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106998453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10194802 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.13135141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104808439 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.219663129 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108487888 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.129334045 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107727875 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10866745 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106035132 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.133597506 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110539126 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104454973 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.130245194 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106811487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105446579 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134112375 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105440014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107842694 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128276229 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107314135 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105355646 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.127354882 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108622263 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104160872 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.129313372 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108345971 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104981785 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.129658876 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105596669 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105592967 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103199366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.133982332 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106034014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105882459 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.130126394 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110799145 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108380332 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135446553 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111300815 seconds)
  done (took 7.39601244 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117687801 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106130745 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137903221 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104824852 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105356065 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106575424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129722851 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107450815 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10645816 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126060234 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107572409 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10833759 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129091555 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107734021 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106681094 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128370864 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104842313 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106442306 seconds)
  done (took 2.942183081 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111045965 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105811989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108838631 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.128064609 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104868713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10428875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12666946 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104507633 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103507716 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.127107993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106507608 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10500162 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103591525 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127951187 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106525278 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105692491 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.127629777 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104692084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106101621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126355454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10698637 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104244541 seconds)
  done (took 3.352807644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117851578 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.217172169 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111727755 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.225934317 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.102300928 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.126118692 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112691704 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102630789 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141899819 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.103156135 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100317296 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12450899 seconds)
  done (took 2.484397143 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132777988 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141884453 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129002858 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107113761 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113439844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133725594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11088526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110208148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142367126 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120792246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133396991 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118591128 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11815909 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141479933 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114897223 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137345957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111811425 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110552745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129187797 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126204666 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109782117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142159349 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110843076 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131843232 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111955228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116932467 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140835507 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121453783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109301609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140453615 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114234848 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132320109 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119256785 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120452328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130804553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117636397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132113029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125865028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114427471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141462333 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106606922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136879208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1196861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114861883 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141178637 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110710796 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114047115 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134623125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110181748 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1535733 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115551286 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117245985 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137513716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118529877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14042498 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132621264 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145203451 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120774995 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114147197 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145037019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117435464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138053519 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119027706 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143868225 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115447642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118230119 seconds)
  done (took 9.149710309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146247997 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106805133 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134617607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121810462 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141235907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112879089 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110571463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133206884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11149679 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107033863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17794693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111522771 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14100131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120377877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110754168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13256176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111328333 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118395852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131850775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132466566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134143595 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119554798 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119005287 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142205095 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121527675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138100732 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111662733 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111215679 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133940985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111278885 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115266753 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134329233 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119251896 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.130155029 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118891445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110047933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133966128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116445604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110768625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138200815 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11933829 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149652411 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111791939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11026018 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144458245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114199229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110459857 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131284223 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111689692 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107160625 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145235508 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12106316 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145271686 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120156272 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132501906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111962632 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111411514 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134260998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112259038 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115714016 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141734993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111542048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15331384 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111632352 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111093317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141766073 seconds)
  done (took 9.125025396 seconds)
done (took 174.24501964 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176807121 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.218347878 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199622662 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.19178619 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096506406 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.17167651 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13228414 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201252198 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097478457 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096650768 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095579961 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.124314482 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.203337519 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096531689 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.121189992 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100444965 seconds)
  done (took 3.224628635 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185462342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.345731674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111325749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12619859 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104377799 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101738706 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125871663 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104823176 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102166553 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133444483 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103811805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097331512 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.13263614 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100021309 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10250661 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125726253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109598155 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101517239 seconds)
  done (took 3.22828706 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123403891 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.2421618 seconds)
  done (took 1.281353585 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.136318802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.22245259 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300467399 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176206276 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124032811 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.146118581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151979452 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138971024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192284229 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139070478 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115220029 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099100381 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.152130798 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107936631 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.141194282 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101597486 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129708394 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.14021385 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116529623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103556395 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.150243827 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107581767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10699971 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.14030185 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182797966 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138715824 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106081926 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104626224 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12772972 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117189762 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108535938 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.143375704 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113270829 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183151573 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105127824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179628149 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131767106 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.104695227 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117025077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124656355 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108273755 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106135285 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140778237 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10150341 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105338605 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132635512 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108027075 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105901176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.134232852 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109989894 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132017486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111093456 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177132791 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110299501 seconds)
  done (took 8.130698744 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.88643954 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144574111 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101503131 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.027105472 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149140754 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117354239 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.872370293 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.151974564 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254331713 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.899894742 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1175257 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110077057 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263542173 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259255804 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.289378768 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362226579 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.736983942 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116341471 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132869201 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16643562 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110740409 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148719052 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123820145 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.525233621 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103501849 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102135055 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134661748 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110483253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18146756 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103288973 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128060489 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175031894 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294173791 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211568803 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102232553 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12604899 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101533372 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185709231 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278287763 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222839161 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174125146 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12350111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102485728 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108850364 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.146391521 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099554769 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18133521 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192532095 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16717056 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131461131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11239013 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135733741 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110029565 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178827978 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099996654 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362035843 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362015728 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125833669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11071359 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113484613 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292656629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10484804 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237777863 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128706731 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216044862 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.126308729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84357075 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187255586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103583354 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106401101 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132809487 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109469507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108730237 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.193189581 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.481450819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1374943 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106873576 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124922799 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214557801 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126661009 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102664732 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183488906 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103704668 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133342724 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115579781 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112964645 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190540571 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272930657 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111770568 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133950065 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108803989 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115571749 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.127697942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211846632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251997478 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153602075 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23191336 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108895831 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182557223 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188869618 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106628643 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190741784 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109310968 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138430103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109157806 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227720997 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159057377 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103964268 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130270546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113610118 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1374943 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131143352 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19180386 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.563582353 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18651464 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102642731 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107819018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111049667 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183757166 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133315556 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264974128 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113526867 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187164094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110126224 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100074318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.135552852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181004651 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112150924 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11114926 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132667988 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112995444 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282596202 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225689873 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112176974 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256215682 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.204009113 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108298409 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194784756 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111072016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192420488 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111906689 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134751842 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104257112 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835662831 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139090383 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113489152 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107654682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210392188 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104224567 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104956224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127792228 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103844071 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8373532 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105002947 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125672615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105977234 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107520865 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.135040427 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111710574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107654961 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180653419 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244659185 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136335074 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109363977 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101796884 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181575115 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126753758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105236008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103935633 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103551716 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.137710528 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10785799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105677335 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192318241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178675864 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232270319 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657045983 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102113963 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128456768 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245078722 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102723817 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3279255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136548788 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238311381 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185010538 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100796198 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367103945 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188266748 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185563471 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.131556534 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190682698 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102970357 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112072911 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183365706 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104059323 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132602337 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154714996 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139291317 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113697838 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284428278 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.128002032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230285429 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126020914 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166409709 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128640102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108973984 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32782828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.127101219 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121046957 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180362461 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108683583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105212751 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.688062009 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127689561 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117825807 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107337742 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256681104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163899753 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135942986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11451547 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111893838 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181755375 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234504821 seconds)
  done (took 48.41831849 seconds)
done (took 65.192864541 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266963348 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173883844 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.284628723 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18288422 seconds)
  done (took 1.91896225 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.273559648 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170204117 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.239802003 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.125303434 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.243617293 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.125606196 seconds)
  done (took 2.120398271 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.183124334 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174146378 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150639966 seconds)
  done (took 1.446324983 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207759241 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208094898 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346784392 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264658655 seconds)
  done (took 2.055535763 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.292284724 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121271218 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128122927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.241392638 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259124571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.216689357 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128449156 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183126849 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133945036 seconds)
  done (took 2.686836643 seconds)
done (took 11.168860719 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.432807412 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.397079895 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.262254579 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.251411021 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.245811356 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107111945 seconds)
    (7/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.309189667 seconds)
    (8/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116810175 seconds)
    (9/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.319860367 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114373133 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11286526 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.320468406 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.372085025 seconds)
    (14/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.329022078 seconds)
    (15/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.209032796 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.136243443 seconds)
    (17/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217016074 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.266759761 seconds)
    (19/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.211304244 seconds)
    (20/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.137552687 seconds)
    (21/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122758558 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131899734 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.155945739 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.283003097 seconds)
    (25/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.304393666 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.138038085 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079807425 seconds)
    (28/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132637886 seconds)
    (29/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.270345202 seconds)
    (30/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.28101744 seconds)
    (31/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.218750094 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.161706318 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.260975295 seconds)
    (34/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130830674 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132715341 seconds)
    (36/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.269006554 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118873776 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114769483 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083091083 seconds)
    (40/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.146090575 seconds)
    (41/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.168303455 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10809112 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.140421488 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08763789 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.287970279 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108058574 seconds)
    (47/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112440834 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.243940308 seconds)
    (49/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.15704965 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.157233053 seconds)
    (51/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088626075 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104442821 seconds)
    (53/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182236582 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197828649 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108792745 seconds)
    (56/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.203785342 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102856026 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149611274 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.205749209 seconds)
    (60/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.143017837 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191634216 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.192443676 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.154391211 seconds)
    (64/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157957168 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086656899 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082328835 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.257944114 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105961659 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113418264 seconds)
    (70/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.20428778 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08738318 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.13444475 seconds)
    (73/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.1135562 seconds)
    (74/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.105672935 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123309745 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166896643 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.151370785 seconds)
    (78/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114985991 seconds)
    (79/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.1098646 seconds)
    (80/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161371429 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104598496 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114779889 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082980105 seconds)
    (84/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.11500827 seconds)
    (85/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155806056 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112799819 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150203598 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099688095 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110390994 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.158302184 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083357388 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081550943 seconds)
    (93/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112232918 seconds)
    (94/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.140591482 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131457918 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087830024 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106984415 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.11193714 seconds)
    (99/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.141131494 seconds)
    (100/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086096353 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102574217 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138315424 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186254551 seconds)
    (104/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.140776771 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.131666674 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104223309 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129720407 seconds)
    (108/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.16360614 seconds)
    (109/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.088328062 seconds)
    (110/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080371743 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.088062595 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.150024175 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084233128 seconds)
    (114/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083136829 seconds)
    (115/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.08562241 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.136958827 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082452175 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.174617596 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105906414 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.105356623 seconds)
    (121/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087737275 seconds)
    (122/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080914689 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.112924696 seconds)
    (124/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.088591643 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131342819 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107388656 seconds)
    (127/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102793519 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221933669 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.137522935 seconds)
    (130/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088402163 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.113671439 seconds)
    (132/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089901935 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08879963 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103786243 seconds)
    (135/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.1096314 seconds)
    (136/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083532829 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127033892 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127348387 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.109740421 seconds)
    (140/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087071059 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117247731 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114553394 seconds)
    (143/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.113842759 seconds)
    (144/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083209813 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115569236 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110580682 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105971436 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082453991 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10698651 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112774955 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.105884554 seconds)
    (152/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081277095 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.134938668 seconds)
    (154/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149622867 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.108539222 seconds)
    (156/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087894138 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106334611 seconds)
    (158/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087449458 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.130774731 seconds)
    (160/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114467419 seconds)
    (161/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08579422 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137785818 seconds)
    (163/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08685462 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128927498 seconds)
    (165/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087032995 seconds)
    (166/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.131200762 seconds)
    (167/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116651287 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082362848 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103802656 seconds)
    (170/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.22472285 seconds)
    (171/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.084323433 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107262173 seconds)
    (173/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.173094358 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082552537 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089256532 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108337311 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107049367 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109038098 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.088710932 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083442594 seconds)
    (181/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08140274 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.133882039 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127073143 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106289145 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.109005202 seconds)
    (186/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082818423 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085196099 seconds)
    (188/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082526067 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087555268 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.114380397 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090009211 seconds)
    (192/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083775527 seconds)
  done (took 27.852722194 seconds)
done (took 28.805342566 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231716896 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134087093 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11489841 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114026442 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.237852174 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122005319 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.156620056 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115653464 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123524925 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.141311336 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104952522 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127305435 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.140546993 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206609025 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.143994218 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.107169075 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.105135227 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.152018214 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130437606 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130797568 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.238337012 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107627793 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.151441674 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106187805 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238464612 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107797228 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113033299 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143199914 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127523828 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115846366 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.14163512 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106482256 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130371746 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.156324139 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106999431 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115455395 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130611861 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088884348 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114631826 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115884988 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.152160271 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116141515 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113980556 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.132922419 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11551441 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113821877 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131121353 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11903483 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10395903 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.141385297 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109271228 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.131008 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.139745495 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1046675 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103160465 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.131641601 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126651859 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105301868 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.152294646 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106985043 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106758338 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105073697 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142305317 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106444611 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114340099 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.130836819 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115869832 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116479477 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.138695779 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109065126 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105114205 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.138150529 seconds)
done (took 10.367853412 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110523832 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150536321 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.238676162 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239321844 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.134365131 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149183566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119843731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129266438 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.145801851 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125302178 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143265844 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16541454 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.244931566 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123222163 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121163313 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144395876 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117324137 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114553464 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240744371 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129669003 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158333612 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122337345 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159425511 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124008297 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109254047 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.169948148 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114020505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.1169486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134737805 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119576588 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130747213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.134465772 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114064645 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152912392 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127778819 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120822138 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146471978 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118808893 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110787063 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.1351623 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121862913 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125192457 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.135518001 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123310443 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117793122 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150366537 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11824716 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121597446 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.137888135 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119164735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112419044 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161101142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121711916 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126783929 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.147146087 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122950062 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122489878 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148838411 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112915336 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121867453 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13660075 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.111400619 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110834765 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157359466 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112975749 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121636697 seconds)
  done (took 10.008975233 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130060604 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139626275 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145607203 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121281204 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114488511 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129480572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104728681 seconds)
  done (took 1.884779063 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105395247 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248085319 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220615066 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246479109 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245227553 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.25965355 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128407669 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104594656 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169449342 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116185096 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249765211 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.278415153 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116774557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14887354 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224444952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131899035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223604762 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.134105251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121491217 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250614412 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122751155 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.164878299 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121055408 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106243259 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.244259483 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106759037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296740109 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15232761 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115626714 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120151103 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148498353 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186752938 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245654702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119633649 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141545374 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.247539229 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.220436621 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.148263268 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.232684407 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.139313177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.244325623 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.121819751 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121542481 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147062905 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121889523 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.236720116 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126006247 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123026609 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.146855826 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.226603816 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.145267635 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.246100639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118354716 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121045001 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.144558606 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122336576 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127578863 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.147264676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.227874369 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.15082302 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.220659903 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.2498229 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.249143624 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250650101 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130080298 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.250155764 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.236314478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120695166 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115502468 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.149756823 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.224389987 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.148751039 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118069623 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.242492778 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123768811 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.254034958 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.253339338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118112645 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118768664 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.138992186 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118693236 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106636675 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.242992283 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119735966 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147638049 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125090279 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147741134 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121462583 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111718606 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.158043631 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121318221 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118509973 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.152421757 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121161497 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123057478 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253557942 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.14595159 seconds)
  done (took 17.425426725 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108979361 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.108046631 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112141704 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134672992 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109677285 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.109489901 seconds)
  done (took 1.705208253 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146749248 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12280591 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155966481 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122981631 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.17018051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.255190202 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.264187017 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115029991 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167935112 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133913258 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.259496966 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259702159 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.259406591 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12600499 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.263007189 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124696793 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265495633 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12091398 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.158050965 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119688963 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120894773 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.153738265 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120409795 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24800556 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122132431 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122930856 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142923761 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130408623 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129166076 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.145046587 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124786119 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.122454608 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.140593926 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115738392 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263080242 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113109146 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145645615 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124730526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123741155 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.151957522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.262274344 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119863915 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127928069 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151801287 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115972849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113234721 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.153688817 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115439052 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263661042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124009205 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124316856 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.151315332 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143493667 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152319579 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114958822 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116594645 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150551897 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.237395342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.153191687 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113994174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121299713 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.150422759 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116123705 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.154320043 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.124910996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124400037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.140378536 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124489364 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119236113 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.148714861 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126600806 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122523402 seconds)
  done (took 12.080112143 seconds)
done (took 44.089510546 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.672540761 seconds)
  done (took 2.692841248 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.153371668 seconds)
  done (took 2.176230511 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.785029438 seconds)
  done (took 19.840065696 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.449869218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482124787 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.148858525 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151146804 seconds)
  done (took 3.250974443 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.843613423 seconds)
  done (took 1.891512531 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.332253145 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244579147 seconds)
  done (took 1.607998685 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.798570335 seconds)
  done (took 1.842558261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.586938674 seconds)
  done (took 2.621487901 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293882553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246121033 seconds)
  done (took 1.585073004 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.654786897 seconds)
  done (took 1.699529668 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.513312273 seconds)
  done (took 20.561306016 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2648063 seconds)
  done (took 1.312741516 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286694488 seconds)
  done (took 1.335623057 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.79289573 seconds)
  done (took 4.84057449 seconds)
done (took 68.293183443 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118522683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11975217 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12002476 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145985114 seconds)
  done (took 1.540412646 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127275263 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122055186 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.151288023 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123318685 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127976889 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120894634 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147973007 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.124703707 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122055884 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150234677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122623764 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121067002 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151233757 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120612824 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118927414 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.152453115 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125352742 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121493522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.15089335 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123670964 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121741598 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.151093516 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125889472 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124633726 seconds)
  done (took 4.199075595 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118573109 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112725089 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113987539 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.138504205 seconds)
  done (took 1.53714582 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130508216 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133032001 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15856786 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129252889 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133145353 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.159903015 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121548138 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117536944 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.148313483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130785905 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137493602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.162971493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133474934 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123318126 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.161307104 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11660114 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122979605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.161334273 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129832292 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15777146 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124040774 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128265124 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.15370537 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134554401 seconds)
  done (took 4.358046788 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19843962 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133540236 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.18114629 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167680122 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.184393699 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119868176 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.151326576 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.157121727 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.131116744 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.151533096 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.126426971 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168618929 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15725205 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124391657 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121219675 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155799491 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134784179 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.154470411 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.170322287 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.129746178 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.156751218 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13384621 seconds)
  done (took 4.365282555 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12507198 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111708968 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.13435682 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113892207 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124793873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.142826962 seconds)
  done (took 1.810535893 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112322733 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10678865 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107121513 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134105391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111091152 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106886567 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.133767639 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108054104 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106960389 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1075275 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133568452 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108048237 seconds)
  done (took 2.428652135 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208999901 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152418196 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263110414 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.405352455 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191983003 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194300057 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290524305 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195277346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209956308 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141386695 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219190373 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165464337 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185056005 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1921912 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172696612 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160976267 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19957035 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210658283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173549165 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242583432 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160734127 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210488848 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193658286 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181791693 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143921374 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195810375 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123243396 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131648166 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199796077 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197023449 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179909051 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181711026 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144888537 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227593327 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266420332 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211752277 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27545535 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137257049 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20612684 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193064146 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265907208 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172370663 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223493295 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156283351 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13224922 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214788278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184641148 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186781085 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16395807 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148414265 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217637243 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182610163 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202336834 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13871764 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347551529 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165793918 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145364505 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211888188 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191827746 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232661779 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210247546 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125724507 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206141367 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220825358 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217556297 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.17359065 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167184318 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156367021 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168805684 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237283246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21524462 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162228451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240909196 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162120406 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174744428 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202170961 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158249524 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239007558 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201862052 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124527288 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153563732 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164900648 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128396146 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219645459 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125986202 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248083573 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134942299 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.3454917 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212204498 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158870552 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193685314 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163531061 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196087855 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149900417 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131928229 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146952905 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.191576666 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162301854 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130846039 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186752449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143425222 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.157094558 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155028304 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152927617 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173987139 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135308617 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195932597 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20076345 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134684446 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21084881 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151374068 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191640711 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17198025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224529809 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133549316 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164594814 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252405352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173483095 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139622853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208620384 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227962299 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151208405 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167176287 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168165589 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227409784 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145666079 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232643481 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140785291 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167461798 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141323069 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203825361 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190727746 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164648731 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129983568 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.197424337 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225927054 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129222158 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14011705 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215603604 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164403518 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129110622 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140798211 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166993093 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147290378 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15129361 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.170654383 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154896793 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199370674 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165822344 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190117682 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136086998 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203537265 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160624057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17132451 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179577235 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121931777 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175465399 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227845105 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158908196 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18405511 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.195296274 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213546569 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175933755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130930127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214488518 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128740742 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.153259084 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165834985 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200805075 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165204178 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219881592 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210538645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196682972 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166524458 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182428575 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172862904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.215973693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159501986 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.176184415 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174014656 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202262522 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122088151 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.15638944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131668909 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138702763 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160986463 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14185065 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216022372 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194667771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179603915 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197209785 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139462846 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22362299 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127316749 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194354813 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176783095 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170246928 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190303041 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222444628 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209553254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143752568 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195525772 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123154069 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127636832 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165468389 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164058642 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168339423 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138419487 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173490149 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194322477 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204767031 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15091968 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222921713 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197866223 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232786585 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123472335 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161866254 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20219345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168741919 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.216362709 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13534682 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.194034381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193551499 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173589253 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223558736 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170483341 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210259629 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198070998 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195923309 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132353702 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179367851 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163991594 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171184059 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166647379 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179796258 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133531086 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184574938 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140195551 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142532651 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219123744 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176103819 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180551102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.190654272 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204539977 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129365613 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144330365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205588224 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147438023 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135523728 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173822174 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229741226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151543642 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187866278 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204879755 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134148973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322180146 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219110055 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210713318 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139353755 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169463449 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174815526 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193288686 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166288604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217564677 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143874092 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240852975 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200800954 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145862822 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132056178 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180863991 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15323017 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171701094 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153650056 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.196892915 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14596074 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220171224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138454409 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20276105 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208311336 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148707598 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151225166 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171319341 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257278247 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171113101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207003488 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166235734 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19799522 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186145249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156792076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1283856 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.164589505 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18807664 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130697905 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209203698 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195941049 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211378626 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177437648 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195558946 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143739298 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157867911 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169686033 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151444049 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216172322 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167104909 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139836637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223297809 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129540216 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162057689 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162389225 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323973391 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150159598 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206869463 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107575761 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316838545 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132278204 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162775099 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165688807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202926923 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135981398 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189381554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203157609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143450365 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197178496 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137400643 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211099749 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215976836 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170745316 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207782708 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147800848 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194564058 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194789784 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178670137 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177878835 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15014556 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19090626 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19962755 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210037324 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133976045 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201839145 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172366053 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202811964 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178192563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172804796 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18445104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160570908 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167923728 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170803424 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127060571 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193534108 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168672427 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16266454 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178977159 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202498306 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132796426 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160921442 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151008379 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198113182 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14217618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.160162057 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190761898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.161959632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184589465 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242601171 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13235873 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198736166 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14805954 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162252197 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144529552 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145044702 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164413645 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178137457 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216008125 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133249556 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211010772 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167837195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197788979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160764717 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176252511 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26778559 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.161795854 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192941016 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183783357 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228840274 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152520233 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207204771 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171552122 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181915382 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167286775 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180279978 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222299149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198664998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168691354 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164100547 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145550282 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140380561 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166879602 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154763116 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201573608 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144796835 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.170299799 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16915091 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177151089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151107624 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173441818 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204102351 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184856328 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190814069 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220113465 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139715672 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208665571 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210419077 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131240921 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196927836 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175408828 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177636136 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155133834 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.166526902 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140522618 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248453732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128109168 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162103085 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205915012 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199768909 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175531889 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.165450719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180765794 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172713723 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178934696 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129267276 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185258614 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170885837 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168316725 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12882574 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202398155 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163061238 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197327676 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144396715 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.206777691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197358128 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.154829396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13765745 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318875536 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165397639 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228690884 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138288815 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170535932 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150375547 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192746438 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167256884 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206023755 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134688217 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131733651 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.177875972 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161009721 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172091087 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171096897 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215138462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164669683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218872874 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136468053 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.288718209 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145129698 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204465735 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118071998 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130637283 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174596505 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138833576 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175374466 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212255972 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220698596 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.198068902 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150804442 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168467023 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130094407 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133061613 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198277099 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153180792 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202163208 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149290982 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.134106369 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144430727 seconds)
  done (took 87.347040362 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250255776 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.18444664 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.20716999 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.244495687 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253607809 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.335847666 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.254929416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267885741 seconds)
  done (took 3.142267743 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12332979 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164350369 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14568347 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148406721 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112512212 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.496369964 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16488207 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124384952 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163177943 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156841244 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140898923 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.580387771 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.1203197 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.150824976 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126213187 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139628091 seconds)
  done (took 4.199567417 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.505157325 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561160466 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.465467222 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285053008 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.27453533 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.210915648 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816808199 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.207918129 seconds)
  done (took 13.465769076 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.170737425 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167071664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.464056987 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.315525738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186846037 seconds)
  done (took 2.456812769 seconds)
done (took 131.88860602 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128676838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127594647 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.128447619 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158911758 seconds)
  done (took 1.683722071 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.19858063 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09346838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.126118901 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.092342818 seconds)
  done (took 1.662778137 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.471563388 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093066932 seconds)
  done (took 1.747917315 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154506938 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146851984 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171231062 seconds)
  done (took 1.639375649 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139252555 seconds)
  done (took 1.29303468 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122339649 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135885436 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.283866475 seconds)
  done (took 1.700431458 seconds)
done (took 10.887555883 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124100767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.93957388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.439423267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138032147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.717250008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.433832543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.435202619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181286252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17848408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142919012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135882223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.695581959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.451190058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.889204836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.401871285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.914812142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702314379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115353775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151196391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116057007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.412241389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143203546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115855026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115221845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725586682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427432357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113181921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.927682145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113082606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116388334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434531374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114668353 seconds)
  done (took 21.204386466 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116868074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172620205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151302691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115890645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118026811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144320308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126512946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125503669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210086213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113911063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166529976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113937044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119258252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14388799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139685849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113757622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147202029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117798709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122180202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144607216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13719042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113058441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144654358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118404652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113725216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165408325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114744898 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126579714 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143431089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119344087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118257287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143106536 seconds)
  done (took 5.44253309 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166239645 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182635305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.154372773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153498151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194670286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117749541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.23234009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155024392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212664613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115228689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137173728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.143554428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156361015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115257324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.171171907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115409578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116294328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146966664 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122641504 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116663299 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.167189557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114086086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115575102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145879863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115216887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136727303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145302486 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127028025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141827323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120317884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120575319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142851685 seconds)
  done (took 5.776429321 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130051524 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130434813 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136091748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168962758 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124913092 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127839511 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159230304 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124183808 seconds)
  done (took 2.260402387 seconds)
done (took 35.841520351 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140660206 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132774985 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136171087 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160418445 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.26223607 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123304157 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131957981 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.121501275 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.16046405 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135909741 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114998982 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.154780227 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134535963 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.126228762 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.26141362 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.130153702 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.26731905 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.26496456 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122760304 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128551054 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.155719523 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23542498 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.161475353 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122403694 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.260580483 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.118377414 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.257607269 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12618092 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124238984 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145902074 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232465525 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.160514616 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12273984 seconds)
  done (took 6.587141983 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.246543572 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156934342 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.125157046 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122831123 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124418126 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154133707 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.249320112 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155126151 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.123893408 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12241843 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.154936602 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230202528 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162619422 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119861401 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124849117 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111984911 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.285350043 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.157857365 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.117467801 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095376235 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118553902 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.154643967 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.263791297 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.152254627 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.124437612 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122823719 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12527864 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.161296489 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.126332405 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123973307 seconds)
  done (took 5.791048149 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129713562 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138052332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.172491907 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194033194 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153410291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167682357 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143903285 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138312142 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176915724 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117643731 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132535988 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18534445 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13410148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126691739 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148164861 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13791251 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.141266498 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150571522 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127408171 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13371428 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.170502059 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134890198 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139834821 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157177599 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116133343 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123416811 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.158892273 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127410197 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125289326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.163753086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120012329 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120369147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.150441477 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.153631478 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118045528 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162461022 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143494086 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129493422 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.162176629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150037026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.120482919 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150554131 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144135298 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17248618 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150335807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131314464 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128462774 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.164597398 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115424245 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136704395 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190698482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117893553 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.138058129 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14689794 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115411395 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126183784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.149717921 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121423262 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134280135 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149981992 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.143406086 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123946558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157908069 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119360709 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128060209 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116454334 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.147701184 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121493732 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143561272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156562926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15490252 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116707438 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.158947936 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130032178 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127569784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.160191949 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117110143 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12740447 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.159074838 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124603276 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129750369 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.151075147 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121146621 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134790325 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.167910738 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132551144 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128828324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.160817448 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121556798 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119681769 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164422305 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118919173 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12119509 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.130413721 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.148780162 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121784271 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129919105 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.159290368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114371318 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141706498 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.152972735 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117737039 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142687139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.151319172 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124026037 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127691308 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.190968768 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118640785 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128280768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.161799416 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117795147 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.126736648 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.151839072 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11725255 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135407861 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132380382 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.157897383 seconds)
  done (took 17.576824959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.363158681 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.349123306 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190726558 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.439199846 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130680236 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.28092008 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.347713351 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.350945745 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117052804 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183917382 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178498537 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316562114 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150974785 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147402893 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.351882876 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.408511096 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181804334 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153068907 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.186538456 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132331772 seconds)
  done (took 6.154407834 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137438008 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153475453 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171626923 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14636114 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127947486 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.166054287 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118508785 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138379608 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.16002468 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127476755 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119401147 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.164685327 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131823606 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133346216 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.164079315 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150352569 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123881326 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153688887 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140731374 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121958945 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13527663 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145100854 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126587117 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171466148 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13730957 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129251702 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.148220106 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122410468 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123502646 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.158709708 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123906748 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134967233 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155860811 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.1073691 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127953981 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.163090502 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125110882 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120325846 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122630748 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.153832411 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132700395 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129686603 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.157242621 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102326559 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136888217 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111855496 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.164476642 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130076248 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108133514 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16808555 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130112775 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13163329 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155126012 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139907596 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.125056615 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163973366 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131761308 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131466229 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.152301001 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118483363 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115885337 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120192799 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.157607682 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.1323236 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129768109 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.169612561 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13393861 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117256112 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.153618767 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121885123 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120894214 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.163592311 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138483882 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12568344 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.155998469 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129270769 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125327181 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096726336 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.157931605 seconds)
  done (took 12.080785832 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143276459 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127530603 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164692312 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154070919 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130988375 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.123707212 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15850186 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138381075 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131181975 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168262598 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132906566 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13173875 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171275132 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127889377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127220507 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165270248 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132217372 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.186466659 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138373462 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144419692 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163451092 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124475466 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130088819 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.128347746 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179675223 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.132651715 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175881095 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132626502 seconds)
  done (took 5.270342828 seconds)
done (took 54.627145744 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.342515483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.61612842 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.306429609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.300533818 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.329458027 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.347371199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.30184865 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.302278662 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.890150067 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.273383927 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.302135977 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.300982548 seconds)
done (took 29.81301477 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.297281449 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.526887322 seconds)
    (2/2) benchmarking "String"...
    done (took 1.680091722 seconds)
  done (took 4.410526296 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.288538787 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.294250477 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.635243001 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.294327023 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.296449848 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.293565753 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.308978886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299130497 seconds)
  done (took 16.610854146 seconds)
done (took 26.799641561 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.324634649 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.573310684 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.554325729 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.273583603 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.313665026 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.301834123 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.296312261 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.355195658 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.300546948 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.275398289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.822260777 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.56812916 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.312543446 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.687888872 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.274501317 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.312011604 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.310849236 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.652897481 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.297644135 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.33712234 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.273807933 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.273280283 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.322120013 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.303049221 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.309094124 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.300652688 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.275797851 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.308795413 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.572419579 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.324929239 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.279921769 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.315154532 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.277319833 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.295877429 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.3226624 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.307935108 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.579203613 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.311925629 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.281076386 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.320802387 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.58356527 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.312066709 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.305287705 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.302840815 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.278362213 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.309247426 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.278235312 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.504021426 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.338598993 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.301969895 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.370810353 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.712886744 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.305689502 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.302980568 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.298550954 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.616446058 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.301243196 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.411607998 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.333711919 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.303156707 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.304976283 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.3059454 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.331286262 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.316229389 seconds)
  done (took 150.623893657 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.296647291 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.298314122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.296319176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.317193269 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.301150726 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.298233944 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.297531342 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.297908554 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.299627767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.303699095 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.301213304 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.298650617 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.302752955 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.30876622 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.307143458 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.318990355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.301057348 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.319419809 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.309221305 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.30010604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.305263609 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.30147898 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.30165512 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.300006935 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.309015064 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.387793308 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.307819312 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.32352459 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.310126797 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.298119894 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.309408271 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.305733431 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.068835918 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.259310769 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.313647497 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.347611244 seconds)
  done (took 84.019925371 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.300090046 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.302041831 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.300795792 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.337375723 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.30186164 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.299966358 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.943893424 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.948770511 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.367778403 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.451915918 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.897574894 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.591091018 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.301548123 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397730885 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.31222015 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.304553673 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.398310567 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.328956357 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.304673799 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.301583462 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947434866 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.319699663 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.34244683 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.490934496 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.318853327 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338186092 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.695385775 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303320555 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337878441 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.648535963 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.356108553 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30344627 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743695131 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.512658419 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.4190924 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.304313837 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338410352 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.302454523 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.594479158 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.302610967 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.301337411 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.30340206 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.306624885 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.035794426 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.306265342 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.948371507 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.306264086 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.317775675 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303799596 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.302423863 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302874758 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.408305134 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.166739081 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.307022492 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.303389069 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.305559108 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.303347863 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303499838 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.340160575 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.456666242 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.222978495 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.305363692 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.309143851 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343112626 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.304128269 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.311818633 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.307160569 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.709119296 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.3659971 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.403665159 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.953852721 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.309269635 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403670606 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429824491 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.306336441 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.306599813 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.306321775 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.304613667 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.420003619 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.304649564 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.049559655 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.492552999 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.326081061 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.904217778 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.410633712 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.305990867 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.73791311 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311080061 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.307625362 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.085659148 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404915597 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.305443171 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.307031571 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307383991 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.052775427 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.956457102 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.670769097 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.308773972 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.097483067 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.308475959 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.236139457 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.92109667 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.057417846 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.311626709 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422003943 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.494561354 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.327336039 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.307395235 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.90791748 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.311811369 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.364324332 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.308076677 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.306072861 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.711580502 seconds)
  done (took 390.710754289 seconds)
done (took 626.548300118 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.287260063 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.288121625 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.287473707 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.286824463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.291105733 seconds)
  done (took 12.643915892 seconds)
done (took 13.846833805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.59147731 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.593225787 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.406094518 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593160345 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.37425269 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609763574 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.572902462 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.355490597 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.493528891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.428455253 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.504664455 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.395627614 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.374711407 seconds)
  done (took 20.495903565 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.701253281 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.321380882 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.43979615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.669725389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.385663149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.697287273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.749635132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.322219607 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.561370549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.38102464 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358739335 seconds)
  done (took 19.792165331 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.695680086 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.321706412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.440046252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.674791885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.38592694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.702008824 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.737815263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.322715759 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.560196377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360278497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358384052 seconds)
  done (took 19.763952875 seconds)
done (took 61.257032477 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.371600396 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.442331878 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.368100651 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.350606945 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.346502234 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.347536233 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.351622228 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.348762227 seconds)
  done (took 12.133354738 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.347219852 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.346085141 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.345321706 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.346809535 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.348919929 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.346502373 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.347885161 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.347215033 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.348065212 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.349049205 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.346043865 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.348177516 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.348899326 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.348861402 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.349287643 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.348882285 seconds)
  done (took 22.767652158 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.351902012 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.350139288 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.347535954 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.346500976 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.346516551 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.348068494 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.348822501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.349199714 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.347791434 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.349443669 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.351142139 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.348638329 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.349175478 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.34821984 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.350568254 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.350830857 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.348498647 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.349351967 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.351954254 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.348099154 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.358207562 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.348666963 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.34990078 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.347819789 seconds)
  done (took 33.593893331 seconds)
done (took 69.700149441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.31266029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.337895692 seconds)
  done (took 5.857322918 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.465301488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.446902711 seconds)
  done (took 4.12186431 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.350403916 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.35107118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.3524884 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.350886101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.350804317 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.351604349 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.35222866 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.352780266 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.35057412 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.350696692 seconds)
  done (took 14.721253171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.349951694 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.351303402 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.35254993 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.350553657 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.351803536 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.352278526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.352247936 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.350281974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.351210374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.350369904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.350759549 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.351693116 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.350360615 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.350268284 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.353868324 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.351110222 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.350585714 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.351967314 seconds)
  done (took 25.53031248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.371074562 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.382359935 seconds)
  done (took 3.963116119 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.533045997 seconds)
    (2/7) benchmarking "second"...
    done (took 1.434681324 seconds)
    (3/7) benchmarking "month"...
    done (took 1.519178381 seconds)
    (4/7) benchmarking "year"...
    done (took 1.505474055 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.433436682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.382154043 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.431461989 seconds)
  done (took 11.449437809 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.347731999 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.705820831 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.891784773 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.556335201 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.339196556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.365321526 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.295019499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.366159691 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.368994688 seconds)
  done (took 15.447048959 seconds)
done (took 82.300018112 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.314821668 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.388773181 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.340202898 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.337204683 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.713908871 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.315744341 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.318125999 seconds)
done (took 16.940263354 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.305626295 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300268421 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.307053292 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.328927792 seconds)
  done (took 10.452736483 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.335339501 seconds)
    (2/2) benchmarking "read"...
    done (took 1.730538709 seconds)
  done (took 5.279708404 seconds)
done (took 16.945108035 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353482101 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.357911086 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.354623587 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.354275219 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.354480902 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.354940247 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.356717569 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.355068406 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.356192921 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.356692217 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.35604353 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.354075961 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354407708 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353622831 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354664724 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354249587 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.355320743 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353761327 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.353997251 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355914813 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.355321232 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356633759 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.355661499 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.356014407 seconds)
  done (took 33.735795594 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.357990845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.355562534 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.354959594 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.355666318 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.355630908 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.357242496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.355886597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.356555048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.357383017 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.355122324 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359318318 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.356238178 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.358038826 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.357818896 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358225861 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.356078731 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.359974896 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35585419 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356826241 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.356332184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.357203455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356761429 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.356489397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356274426 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.358413315 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355984794 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.35773802 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.357709314 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358058451 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.357310451 seconds)
  done (took 41.922218532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.364276631 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.366355177 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.357820013 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.359927474 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.357303747 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.358269512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.35823962 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.356414457 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.358172642 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.357390909 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.358093232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.360366846 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.356416413 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.36049256 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.358708604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.359408833 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.359125137 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.358806591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.360068833 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.357880077 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.358175645 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.358211473 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.358976864 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.359928941 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.359718789 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.357013835 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.358479176 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.358830966 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.360154459 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.35931783 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.35971362 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.356672382 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.359167391 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.35940541 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.358981613 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.359160127 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.365016808 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.367349438 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.35749141 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360026928 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.361039976 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.360387239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.361605411 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.358592877 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.360823329 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.360265226 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.358761473 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.358658597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.360421881 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.36619517 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.360140909 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.360521753 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.360751112 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.361221424 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.35904035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.359843245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.36133296 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.359840662 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.361237906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.360250071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.365992002 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.360462039 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.361809906 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.361465519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.361597519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.361921443 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.361872973 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.361703608 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.363047005 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.361633907 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.360896941 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.360911607 seconds)
  done (took 99.147049219 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.362390008 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.361016509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.363443074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.361008128 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36142522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.361118687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.362187329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36176863 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360306712 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36273663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361690268 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362092903 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363329932 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.362965221 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361547652 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.363366389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.363718179 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.36164089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.363500344 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.361481862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36250762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.363136053 seconds)
  done (took 31.185711885 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362363608 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363371487 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.362792294 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.363334402 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.365171437 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363282649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.363008313 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363612091 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362462712 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362811989 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362177201 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36281157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.366560999 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363279576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363133049 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364982028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364914561 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.366446739 seconds)
  done (took 25.766235288 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.363303462 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.36584771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.364943265 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.365252942 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.363996148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364706434 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364788777 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365040066 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.363942649 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.365809507 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.365279202 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362986941 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.364006624 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36548712 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364814409 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.364956465 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.365092306 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364181436 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365006052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365967487 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.365326625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364289481 seconds)
  done (took 31.246213363 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365318942 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36501646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.366851189 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.365922231 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.365318383 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366017843 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.36621724 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.36670571 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.368507406 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.365903723 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367233152 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.366251882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.369178301 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366313132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.369432384 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.367641234 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366900427 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.367541641 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366633774 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.366602345 seconds)
  done (took 28.558242149 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367283368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366672256 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366954346 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367947977 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366940517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.370812378 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367241253 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.368893768 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.366470974 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367759895 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.368900402 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36759032 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368469412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368152053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368975342 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368220148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37055606 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369109298 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368410746 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370086587 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370335432 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369926441 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.369615159 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368973038 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.371783731 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368079419 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36809618 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368451603 seconds)
  done (took 39.544181003 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370404295 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.36971105 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.370901425 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.368494695 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.370986353 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.369482809 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.369349202 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.368620409 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.369354161 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.370672136 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.367937082 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.369534212 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.370338365 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.370714321 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370737578 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.370045102 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371428308 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.372795801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370353311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371557166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.369208054 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371879762 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.37578857 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.371665279 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370752035 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.372453788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.370756155 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.369812321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371301197 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.370594403 seconds)
  done (took 42.343306157 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.396744307 seconds)
    (2/2) benchmarking "in"...
    done (took 1.397436364 seconds)
  done (took 4.019618626 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.371667514 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372719534 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.370884175 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.371706277 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.370143717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.371779609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.374205337 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.370846391 seconds)
  done (took 12.199770865 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.367095564 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.373213102 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.373048626 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.373162467 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.374105324 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.367050727 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383096202 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.376895204 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.368108193 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.369219577 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.376380264 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.373225115 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.372263261 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369221045 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.3685366 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372474112 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.376068493 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.374289915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.376114379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.375280474 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.374224404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374198283 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374966677 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.37821744 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.369683813 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.387846667 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.382480272 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.378365782 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371508346 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.382321174 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.372155426 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.378650735 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.375835992 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.377629026 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.377685668 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.375475611 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38537659 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.376174023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.385223219 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.380579472 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.376001166 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.376579871 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.375597343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.377100468 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.37742523 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.380181796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.376476785 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.377962449 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.371268441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.380024932 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.384805358 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.371971673 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.384392317 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.385421289 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.380517243 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.390011258 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.38227012 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.375217686 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.38052765 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.388017359 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.397182631 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.387302184 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381886062 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.382757682 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.389998476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.39734557 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390260522 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.384829593 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.377787776 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.378365992 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.388569525 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.397510395 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.397013824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.384190825 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380643586 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.379036608 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375430493 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382814253 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.388297492 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.38868546 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.385341879 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380651339 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.390474305 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.395202281 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.374460468 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.383284146 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.378255085 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.379193821 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.372777851 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393843379 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.387542368 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.380898926 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.372765699 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.37587168 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.379701427 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.383184901 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.373537794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379072785 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.384855574 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.379941262 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.381045662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381846463 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.392324541 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38644614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.380829294 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.390396991 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.387144832 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.376220538 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.393667868 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.387015835 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.379964869 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.377065477 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.389514826 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.382955123 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379554272 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.387347162 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.384771765 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.386790527 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.388444509 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.380521643 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.394181062 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.408190386 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.386078914 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.382223605 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.385277486 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.392043081 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.382173948 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.385351797 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.388472724 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.38102024 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.382473707 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.385144856 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.386981054 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.378778474 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.386287949 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378573141 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.386371968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.381757415 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.382368247 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.389435346 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.384562101 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.383105561 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.389871017 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.395159468 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.391047283 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.387540273 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.399318308 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.383472577 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.390217011 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.387707333 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.390394686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383881009 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.379710576 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.387726889 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.378136005 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.385895162 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.378012246 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.387165575 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.383695231 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.383882545 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384857321 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.377184208 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.385057764 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.388052489 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.392028134 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.384521663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.386703086 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.383943238 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.384311301 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.376720531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.386746317 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.378885751 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.386425606 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.390562654 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.385729149 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.384529486 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.392463385 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389947493 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.38496334 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.384314724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.384041365 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.391577588 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.390300819 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.397551672 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.396700447 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.386602653 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.386996489 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.384803124 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.38397264 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.3876032 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.386764616 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.393703836 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.399936193 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401078726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.385750241 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.390202274 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.37951111 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.391236623 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.397155462 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.394333315 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.387147416 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.38544259 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.38117445 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391238229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.387036159 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.391814769 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.379664481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.389270591 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.387280533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.387796801 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.385807581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.38365591 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387859308 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.391749119 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387507727 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.386911562 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.381399129 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.39085487 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.38070323 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.38395099 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.390863671 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.388172127 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.397765945 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.395044859 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.392537138 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.398762021 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.390301448 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.384942876 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.390157226 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.394234769 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.388915238 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.401871007 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.392822719 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.38721607 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404132467 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.394126237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.38587847 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.397810783 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.397129621 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.389412928 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.387032667 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.396507265 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.389092147 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.3900804 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.388678546 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384659739 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392701125 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.401634803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.399109063 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.382831713 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.39417743 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.387401918 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.394512668 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.394737627 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.397905349 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.393800566 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403127031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.398486288 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.389637886 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390285175 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.393682325 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.391381823 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.391125297 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.388412172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.402588066 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.401241527 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.394429767 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.397420929 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.390867163 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.394164719 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.391317848 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.397210776 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.39169569 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.411174424 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.412007002 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404162429 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.397072212 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.395861513 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.401409495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.397225304 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.388647537 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.390356553 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.390339931 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.388630007 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.388517981 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.3966811 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388760191 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.395177557 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400426548 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.397335443 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.395203539 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.391697575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.387850857 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.395568389 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.393049913 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.392282566 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.386002228 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.394308941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.39548856 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404071286 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.397107341 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.390699264 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.412061548 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.40017987 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.393678903 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.392536858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.39088141 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.388881366 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.395652339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.398312453 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.392805817 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.402251431 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.392924059 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.399415037 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.394530268 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409399966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.403482524 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.394440802 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.40218578 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.39324477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.387304279 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.389975569 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.39782091 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.406413274 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.407143185 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.39045028 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.397783126 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395794396 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.395077405 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.394273043 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.394910065 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395650313 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.394412166 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.409852678 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.402763298 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.395954611 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406852855 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.407122791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3970771 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.393972096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.38783675 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.405142721 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.408217274 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.39587143 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.397947113 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.393445633 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.398481818 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.395874923 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.397994187 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.396715043 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.397476732 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.409479445 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.404630924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.398281793 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.395869824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.410527065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.40978563 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.410657109 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.410178418 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.397657761 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.403616619 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.397840046 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.397176764 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.396460192 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.398502211 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.399917406 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.391976732 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.402248917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.39697164 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.402939787 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.408809318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.404818728 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.393164103 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412134252 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.419046025 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.392828515 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.403214334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.399373273 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.394634541 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.401811571 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.400671133 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.394393799 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.400915648 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404738619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.405020848 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.395642421 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.401412917 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.396622294 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.403375038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.397405144 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.401758073 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.399824097 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.403386003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.393818446 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.400805158 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407567121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.411944913 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.399477196 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.40755469 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.399547387 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.416817459 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.412560773 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.405331013 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.405501635 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.399146498 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.399204326 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404276061 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.407079769 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.397761825 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.405196918 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.394361252 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401838111 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.401107292 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.411469223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.406465096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.404864473 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.393788623 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.397153088 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.403996207 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.401364028 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.401579279 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.40639281 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.407717699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.395427659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.397020249 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.403309877 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.401215686 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.408802824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.399740777 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.404357077 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.404593978 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.405460499 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.402566835 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402469825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.395826872 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.399673031 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.41711198 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414473587 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.408874551 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.404135819 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.405789102 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.403087082 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405927039 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.403260499 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.401046111 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.401415082 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.40744441 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.401573972 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.39977032 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.402387413 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.404957781 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.418989105 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.410955401 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.401293419 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.420573943 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.422011487 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.412085852 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.399741616 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.403332575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.401138371 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.405869979 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.404382079 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.403831521 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.430403126 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.420993899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.407002175 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412710234 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.408986646 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.399498288 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.408349693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.403082962 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.4105689 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.411185319 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.408097915 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.412519986 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403784658 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.405375712 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.398797361 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.401167983 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.408006143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.40630062 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.407185649 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.414822513 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.412584519 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.410191687 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.413603783 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.407078023 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.406907401 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.405271788 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.400381012 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.408755261 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.404225217 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.416455263 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.410632456 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.403749737 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.410158582 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.406085579 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.404592791 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.409637217 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.414892494 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.405318582 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.401675381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.40841695 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.421523086 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.417346367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.406790347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405705222 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.408783408 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.410945135 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.407828188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.406704302 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.406734194 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.429554834 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.419874692 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.404014156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.408599865 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.421848267 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.418825117 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.407005458 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.407970246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.412318075 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.414106222 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.416189936 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.407886646 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.421125829 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.41626718 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.407982608 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.413101904 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.409780741 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.409404925 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.419832508 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.421250775 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.409633725 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.415226965 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.432325578 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.419226425 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420382857 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.444576786 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.421421327 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.41726193 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.416183022 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.404533217 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.411983605 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.415526583 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.421269632 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.411165205 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.412539961 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.410609617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.404108022 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.422693975 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.427158859 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.419513054 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.410197274 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.403610403 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.40758528 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.411327377 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.411091313 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.413193046 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.411702075 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.411863966 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.411676373 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.407949642 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.432170808 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.438160328 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.419078152 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.411185947 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.41227638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.42049628 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.424586464 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.417883028 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.420680102 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.411867179 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.410475173 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.418697168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.423294052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.414484831 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.408002023 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.410728627 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.409544747 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.416345682 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.429216872 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.437214048 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.425147709 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.418671955 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414023529 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.41228951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.407697236 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.416947505 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.413532615 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.410452754 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.412235312 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.418115949 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.413800665 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.411979414 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.41407591 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.419913384 seconds)
  done (took 833.574625747 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.412344684 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.412025719 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414667954 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.412607917 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.412512932 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415063326 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.414404513 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.413072082 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.413497066 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.412907955 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.413107212 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.414221948 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.413435046 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.414317142 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.413982183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.414958913 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.413232228 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.412743478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.415395142 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.413343554 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.412867586 seconds)
  done (took 30.945085965 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.416276958 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.414857853 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413970171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.417541574 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.414680736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.414979656 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.415494037 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.415691269 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.416514698 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416459523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.416149009 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416337231 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.415437746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.416555346 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41572598 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.423368084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.415722348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413930082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.423738032 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.421960502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.417690755 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.415248475 seconds)
  done (took 32.431771108 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.416521752 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.417905866 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.411142436 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.41969995 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.415873415 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.415568349 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.415797498 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.415789536 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.416453168 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.410500874 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.411955808 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.41362683 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.420321537 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.42535402 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.42252447 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.423186915 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.417071053 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.418132222 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.417524184 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.418469066 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.43038811 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.432335914 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.41811993 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.412692424 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.420682686 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.418175035 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.417580057 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.416582653 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.413247523 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.421138191 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.418914304 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.414360513 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.431304916 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.42485661 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.415824387 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.423521735 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.418774902 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.418849282 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.41914981 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.430537082 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.439287775 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.41915407 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.43150131 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.434343781 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.419559778 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.420470578 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.426825646 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.419496571 seconds)
  done (took 69.436560475 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.418552666 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.420907715 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.420060121 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.419680184 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.416895822 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.420076254 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.420105728 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.421036013 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.42058428 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.421036921 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.42009993 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.420241429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.41822148 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.420715163 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.421728839 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.421205029 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.41939607 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.418688159 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.419920857 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.420271809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.421316077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.422921868 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.421695315 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.420936279 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.421814325 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.420743797 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.421651315 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.421307207 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.420739048 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.42064609 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.421510514 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.42116054 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.422207392 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.41962033 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.420628279 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.420314483 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.42041687 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.422169187 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.422097461 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.421932706 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.421245886 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.424603157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.421735753 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.423078871 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.423548973 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.423254102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.423090255 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.421937455 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.421232337 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.423157442 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.422576922 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.422825766 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.422614566 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.42332541 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.423694452 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.427517704 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.422033486 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.424167347 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.422735531 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.423784268 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.424922471 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.424432394 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.424629836 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.424483728 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.423591087 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.424545608 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.424086611 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.4242895 seconds)
  done (took 97.951555993 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425370433 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.42482609 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.425632687 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.428846643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.425271468 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.424045823 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.425018293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.424633398 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.426525608 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.426324675 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.426754478 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.424660846 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.425277893 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425662649 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.425067392 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.426204827 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.426581551 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.425815532 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.427417412 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.426943678 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.426521557 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.425687023 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.425880694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.426615075 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.425793741 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.426457303 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.426890319 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.426990681 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.42621244 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.427490954 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.426551659 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.425610897 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.425115582 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.428834491 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.427207678 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.428841615 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.428718135 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.426389487 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.427368173 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.427342472 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.426472877 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.427007792 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.427656199 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.428816052 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.428436186 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427425862 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.428147322 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.428539341 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.428648084 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.427359303 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.428486541 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.428309633 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.426922027 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.427311742 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.429114484 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.428646129 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.428051849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.431759514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.429586541 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.431823139 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.430416815 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.429538561 seconds)
  done (took 89.754371002 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.435669508 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.438064365 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.435859895 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.429645907 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.42900197 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.429605329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.430084161 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.43022084 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.430042606 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.430011806 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.430627247 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.430047494 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.431468554 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.430066561 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.430704492 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.432254897 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.430648898 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.430780968 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.431339837 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.429889863 seconds)
  done (took 29.903976407 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.430466961 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.431134923 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.430214694 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.430169995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.429825608 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.430530936 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.430412694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.428954687 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.431725292 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.43111858 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.431265596 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.43150131 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.431710136 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.433567215 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.432396885 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.432233247 seconds)
  done (took 24.174060962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.431528758 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.431949412 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.430978898 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.431914352 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.431901781 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.43130813 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.431300935 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.432039647 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.43092945 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.433232816 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.430816726 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.433512879 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.431643367 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.432253152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.430751914 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.432175139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.431161462 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.430820288 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.432785831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.432788904 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.432278644 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.432288352 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.432935292 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.432068421 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.433644251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.433353152 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.433293857 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.433741609 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.434187546 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.432866848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.433717235 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.433989825 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.433506663 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.434373114 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.43432674 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.433018403 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.434546879 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.434114981 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.43605147 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.43312533 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.435952924 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.43279079 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.435241451 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.43590592 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.434863121 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.434263044 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.434548555 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.43512265 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.437978391 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.433702987 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.436529114 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.435625228 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.434688307 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.435738441 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.435399361 seconds)
  done (took 80.114583079 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.435050644 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.43508319 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.435772524 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.436973096 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.43454681 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.434244327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.43707234 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.438801051 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.434642143 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.436446842 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.43580039 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.437500677 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.435577388 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.436719083 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.434887216 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.43747728 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.435546797 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.436633178 seconds)
  done (took 27.129585125 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.436011591 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.436820074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.437856728 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.43650034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.435573966 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.437981604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.437087146 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.437923776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.437690855 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.43705488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.436442232 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.43746841 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438156137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.436242695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.438418112 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.437242264 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.43727949 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.4373054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.437960651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.436587851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.438432709 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.440547502 seconds)
  done (took 32.90364962 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.428554776 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.430294733 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.428162688 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.458389786 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.449620374 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.429824002 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.431751063 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.429698846 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.460524624 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.478134754 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.476868183 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.448221454 seconds)
  done (took 18.632908557 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440156321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439379756 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.439528099 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439272131 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438955051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439811724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439996874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439471389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439641522 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439606461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438272004 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439676721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439139292 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438734842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440882671 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4411693 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440022785 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437802251 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439547166 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441343414 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44108535 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43901728 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441389509 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439948683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439275972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441116639 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440254519 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441669992 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439607439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44243182 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439499324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442085128 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441192627 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44054003 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440891401 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440617274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441513826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441827484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441858214 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.440596322 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.441417655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441733547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444289249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441413884 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.441785858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441965141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.440998328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441547839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.441835864 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442248068 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443525744 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441575846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442425395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441155052 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442882785 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441796195 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442122004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441814424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442899548 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441794239 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.442008932 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443484747 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441177052 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442933351 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.442020804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442999909 seconds)
  done (took 96.389820523 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443162011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.442853452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.443631066 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447861491 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443131351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443395839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443116475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444127706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443462049 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444573643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443237789 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442377484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445916552 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441949497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443239954 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44453565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446788031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.443665706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444357903 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444939053 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444186233 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4436157 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44338285 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444345192 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444000386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445384291 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444552341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44449982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443616468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443680164 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444508411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445727352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445305021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.444989967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444701383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444285128 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446017961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446507897 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444897428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445608621 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447235015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44476389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445696621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446280495 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446445669 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445709263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445902932 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445874437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445839027 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445297478 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446030113 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447557402 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447575142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445902793 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446033116 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44761132 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445919275 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446782234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446799764 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446659173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445484653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448401015 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448020311 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448101955 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447267142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447471078 seconds)
  done (took 96.6731143 seconds)
done (took 1950.896917459 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.668401268 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.628316283 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.441192906 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.489431303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.44045189 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.457043315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.417051149 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.440596252 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.439916137 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.440761846 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.439846924 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.701605001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.420437403 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.438698454 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.442123192 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.594683375 seconds)
  done (took 29.191125423 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.482737085 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.45627087 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.592972752 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.450470482 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.481931327 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.708381911 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.522814179 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.446852704 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.653945798 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.477103828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.430669641 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.482859657 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.447931054 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.429117627 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.476487268 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.71139647 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.835494165 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.420297022 seconds)
  done (took 31.799411295 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.04593552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.438845261 seconds)
  done (took 5.775651778 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.473086626 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.447271612 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.448628349 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.445061555 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.41518485 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.438008562 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.445185383 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.418025644 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.425200859 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.611399885 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.454490687 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.468228537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.447032475 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.447862329 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.45272007 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.507968856 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.660280194 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.454718299 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.452912832 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.462494079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.447515917 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.612707104 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.505604588 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.45706741 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.607046119 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.436961711 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.45621842 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.462507698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.632876429 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.454677582 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.447780266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.448575967 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.45113586 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.433006809 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102528192 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.438733934 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.484382477 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.465540555 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.455799023 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.66990991 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.451445048 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.462389386 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.422679448 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.096303168 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.643496844 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.627568282 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.421215436 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.450129517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.453313651 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.530693533 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.451766597 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.452445943 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.552624116 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.404685121 seconds)
  done (took 92.573876681 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.474513275 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.418046387 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.690118834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.440215547 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.418885181 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.421265791 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.419363664 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831919688 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.451574464 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422570356 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.854716791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.207831317 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.431447952 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.495726307 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.460011221 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.479524247 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420423295 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.438050119 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.44887838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.431884111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.118303871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421080223 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.424741094 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.514004958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.494188053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.144245717 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.436359401 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.424124115 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.42966176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.421709143 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.179700506 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.430945025 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.471982366 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.421908471 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.826609096 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.986366981 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925082233 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.431406466 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45943489 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.420566959 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.44913372 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121929332 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945645742 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.425582401 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.437086797 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119018137 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.422061004 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.435117133 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.427911468 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.783903177 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.423632223 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.422279327 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.42754543 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.426039093 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.423243766 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.478787281 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.483246997 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.123954939 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.437294575 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.423509303 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431843952 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.425533582 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.426708941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424873093 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.424486522 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94618331 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679387861 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.424418636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944530586 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.152283471 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.424703169 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.236312104 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.424995176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.446538837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.473672594 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.423521735 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423587944 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114840162 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.44304356 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.426237093 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92455074 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.427005836 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.849120618 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.44915586 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.425588407 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.155395459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.436208543 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.469932594 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.423848801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.428911037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.429485062 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42814851 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.832210017 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.479887631 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.425758541 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.426463658 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.458724465 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.425590642 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.426921188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.429332249 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.238215349 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.434694873 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.425203372 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.447953123 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.442005859 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.431030022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.429798859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428838891 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.806427829 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.427744897 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.432547812 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.428967818 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.425506903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.433385349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.522341284 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.433056745 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.879842612 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.431468764 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428475297 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.428155215 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426049011 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.44258142 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429141722 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.453385378 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.432789044 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.839890394 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.450118761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.42784505 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429374015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428511754 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428213323 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433959165 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.485967943 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.431199107 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.382955891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.470797369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.431038053 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.42709216 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.430961926 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428244193 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.452898375 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42863698 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836366622 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.838712031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.686846701 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.438486417 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.429245018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.397626053 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.433940029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.703764355 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.449312794 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430488053 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.821801781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660785286 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.431157831 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.428860612 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.430221329 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.812157189 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.430961158 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863058354 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.190420654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.429489044 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.435783349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.377987522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.368924289 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.434257387 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.432983273 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.844755608 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.450628463 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429271069 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.430167062 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.431009488 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.429962218 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434710587 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.434355304 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.430271754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.428973824 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.776582344 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.713163524 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.452224616 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438079731 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123753027 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.462090606 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.436830759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.437689597 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.435371355 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.432383267 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486005518 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.432233526 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.433398619 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.433204949 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.441585623 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.157593644 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.431851215 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.433815851 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.715891036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.337839679 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.431160205 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.433172543 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.431497469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.49275037 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.160390228 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.4729269 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.885383959 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.432410434 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.507340424 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.431918961 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448477073 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156815123 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.432719273 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.454312591 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.337441374 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.432779336 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.922652595 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.433039635 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433975997 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.263508928 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.434403984 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.438856436 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.434376676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.438303921 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.846515818 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.434677482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.453090927 seconds)
  done (took 527.629536354 seconds)
done (took 688.260165643 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.433617222 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.43692295 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.438296309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.435863178 seconds)
  done (took 11.054687401 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.460263487 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.468930302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.449479365 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.462905024 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.455174363 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.464242276 seconds)
  done (took 10.070730573 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.435222454 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.440018734 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.439626016 seconds)
  done (took 8.624483603 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.765502024 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.459656566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.95258154 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.443385224 seconds)
  done (took 9.931927028 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.473035922 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.472690067 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.472953509 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.471757058 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.473641027 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.474427299 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.473633135 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.473119103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.47628396 seconds)
  done (took 14.569471579 seconds)
done (took 55.561123452 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.412966412 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.851827876 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.71330621 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.577485866 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.793392442 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.793500487 seconds)
    (7/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.699891445 seconds)
    (8/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.498841997 seconds)
    (9/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.624328834 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.501732727 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.508756316 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.690209348 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.416083218 seconds)
    (14/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.651919493 seconds)
    (15/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.417192159 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.661965813 seconds)
    (17/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.416209142 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.414805123 seconds)
    (19/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.568413134 seconds)
    (20/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.501267445 seconds)
    (21/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.436830689 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.616558642 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.469781178 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.74718489 seconds)
    (25/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.598608245 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.637820913 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.415484539 seconds)
    (28/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.695758168 seconds)
    (29/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.711012064 seconds)
    (30/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.524551691 seconds)
    (31/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.417483955 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.601494366 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.847916554 seconds)
    (34/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.597905362 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.483189447 seconds)
    (36/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.617899735 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.627307495 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.572309929 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.713538572 seconds)
    (40/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.465135266 seconds)
    (41/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.583285067 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.538118081 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.506083629 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.796031465 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.418305428 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.476121021 seconds)
    (47/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.501900766 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.684685322 seconds)
    (49/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.7070888 seconds)
    (50/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.57790233 seconds)
    (51/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.418086476 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.681896769 seconds)
    (53/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.473527185 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.967082895 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.648957525 seconds)
    (56/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.644879283 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.853236155 seconds)
    (58/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.448667251 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.868017784 seconds)
    (60/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.523971868 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.946218161 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.424251506 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.778364972 seconds)
    (64/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.696550169 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.695705578 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.846581817 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.898467745 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.683951989 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.509905065 seconds)
    (70/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.4191804 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.942746421 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.766090227 seconds)
    (73/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.611760057 seconds)
    (74/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.602003439 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.649585397 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.418887765 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.617644394 seconds)
    (78/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.502032067 seconds)
    (79/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.735765002 seconds)
    (80/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.461981793 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.740688743 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.596998753 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.760569483 seconds)
    (84/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.425892426 seconds)
    (85/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.819066238 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.508728939 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602852081 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.421778007 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.644621638 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603540017 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.720041424 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.421696362 seconds)
    (93/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.514007543 seconds)
    (94/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.518568667 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.685854185 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.945994738 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.462851666 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.78823173 seconds)
    (99/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.606418665 seconds)
    (100/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.650847919 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.648065372 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.504282353 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.88570027 seconds)
    (104/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.580557835 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.664656588 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.657198587 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.597481565 seconds)
    (108/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.693122359 seconds)
    (109/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.421272985 seconds)
    (110/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.430908428 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.42601437 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.451580261 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.773975866 seconds)
    (114/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.854032835 seconds)
    (115/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.766509274 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.505223744 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422610655 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.041159424 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.449276686 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.59486112 seconds)
    (121/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.946149926 seconds)
    (122/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.511767803 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.512661352 seconds)
    (124/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.699641064 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.628796441 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.61886522 seconds)
    (127/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.586370725 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.695839534 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.482878515 seconds)
    (130/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.728581057 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.810350116 seconds)
    (132/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.426579456 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.441358499 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.639286393 seconds)
    (135/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.423964878 seconds)
    (136/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.430086256 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.679701239 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.607609878 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.728105299 seconds)
    (140/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.654500478 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.676811696 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.637111815 seconds)
    (143/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.423659042 seconds)
    (144/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429452028 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.582296883 seconds)
    (146/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.608016215 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.426474903 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.431927971 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.667197064 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.515863644 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.425188147 seconds)
    (152/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.426417843 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.619722383 seconds)
    (154/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.806482026 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.627392981 seconds)
    (156/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.680627474 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.635499179 seconds)
    (158/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.856973152 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.592187107 seconds)
    (160/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.507986106 seconds)
    (161/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.773590343 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.521664173 seconds)
    (163/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.712730089 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.638588329 seconds)
    (165/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.652930307 seconds)
    (166/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.464337958 seconds)
    (167/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.580277282 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.427147754 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.610972317 seconds)
    (170/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.892959363 seconds)
    (171/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.441511103 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.701971179 seconds)
    (173/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.776418076 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.675971086 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.810465143 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.80318866 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.43055957 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.473705769 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.147789464 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.813271506 seconds)
    (181/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.637446075 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.636109452 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.732376094 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.63272627 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.649414426 seconds)
    (186/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.606662272 seconds)
    (187/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.625372751 seconds)
    (188/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.42828477 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.776200172 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.446746685 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.146383838 seconds)
    (192/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.640577619 seconds)
  done (took 360.308278527 seconds)
done (took 361.620359553 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.507752069 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.627892206 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.479145428 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.478611561 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.479841326 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448933415 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.508709802 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.479039619 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.502074112 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.503433153 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.447988463 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.489312852 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.502573756 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.49121491 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.521857982 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.480815332 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.479064551 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.491232998 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.506345255 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.505351065 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.481701688 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482902889 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.515433073 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.478600037 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.497854441 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.49692206 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.493956878 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.461061913 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.489359576 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.504734017 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.448889555 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.49732665 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.504557319 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.492417647 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482825924 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.491490503 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48138887 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.629082231 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.509751973 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.490742503 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.490340566 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.506119598 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.495714295 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.495176098 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.491486103 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.51941228 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.499812581 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.504899401 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.450647251 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.451067277 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.53129347 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.502401248 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.492488186 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.469795565 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.47039662 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.505484182 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.492760218 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511103542 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.49066917 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.489190979 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.523569373 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.510036506 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.502082981 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.498609984 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.491559157 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.505503877 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.492593506 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.507988551 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.490649405 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.492591062 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488564502 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.492800935 seconds)
done (took 117.046859733 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.667070652 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.456173023 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.703003643 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.491928897 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.714567474 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.662588448 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.490896434 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.492965411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.492032262 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.355566026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.496179018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.493007246 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.460685398 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.494675336 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.660221667 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.492237735 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.489944147 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.243929413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.492751977 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.676236134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.457308084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.492356815 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.494790784 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.348389065 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.456701233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.464482809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.675798578 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.493484961 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.24695382 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.465063679 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.457768757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.247644131 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.678463512 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.512013365 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.503541198 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.504249318 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.715278668 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.497384898 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.666982163 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.667809782 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.707174984 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.53244655 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.465472809 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.460303297 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.496717704 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.496723501 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.496395037 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.523058484 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.458333563 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.495554288 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.248647262 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.505675966 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.503462976 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.49508705 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.496537234 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.516192597 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.496570898 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.498245552 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.678328508 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.497310866 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.667936614 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.351524031 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.350984787 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.49766105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.459819018 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.497393489 seconds)
  done (took 119.797019862 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.611895549 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.619720008 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.670900259 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.490729023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.581489028 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.669748716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.491532967 seconds)
  done (took 12.466095095 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.500116111 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.496725456 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.580668184 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.582671651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.495858587 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.721435946 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498252117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.508893066 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.498494048 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.582178222 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498560048 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.497413533 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.506367185 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.462689983 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.580548825 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.507483738 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.664674607 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.493339691 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.497647082 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.702130977 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.497917787 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.506637471 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.583237575 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.509291161 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498752181 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.504977134 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.337257902 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.499120593 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.498071857 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.500175267 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.49754658 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.608595269 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.498786682 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.466393387 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.499211457 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.666144905 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.498982657 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.499362523 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.500524333 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.469197863 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.501235737 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.499182054 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.498779418 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.500472232 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.499392276 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.524524453 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.499250429 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.499698949 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.499899883 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.49970705 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.584435354 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.499994936 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.500415171 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.501360264 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.585738102 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.508619358 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.501096613 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.498562352 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.500857896 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.499590974 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.705326914 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.582794013 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.500751527 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.584108146 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501321293 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.500212981 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.501443305 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.502459007 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.643361562 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.502409629 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.586495531 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.501914803 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.736718545 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.525967583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501931426 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.499462536 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.500058143 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501496454 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.467653324 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.507944411 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.502519211 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.497803527 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.508973732 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.501599959 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.501730283 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.715262464 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.668620709 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.502520956 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.518469003 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.509099237 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.502207788 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.588084839 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.50205749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.503831807 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.588061023 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.669923599 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.58964265 seconds)
  done (took 154.779466094 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.51568101 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.516411898 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.507326177 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.53340568 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.49742373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.496632078 seconds)
  done (took 10.403379578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.499637489 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.507983173 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.505296379 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.504925451 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.505055077 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.505444513 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.504223477 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.500817807 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.513636964 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.506907338 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.504081769 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.506636424 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.505369363 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.507924576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.503406264 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.504801554 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.504371401 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.50451262 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.505250354 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.506416074 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.47155389 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.507453218 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.506047103 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.501154302 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.51117932 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.506813192 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.530938746 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.505503598 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.505829757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.514996635 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.509718939 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.50624643 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.503098543 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.507186004 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.509331809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.501767927 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.511628958 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.50749184 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.50600876 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.506722188 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.507672589 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.508758551 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.507226792 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.507146405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.501721133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.503194715 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.512557916 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.532576803 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.507332322 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.507730418 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.508670551 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.505485788 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.507157789 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.507190335 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.503035058 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.506265008 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.512363478 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.507336722 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.51010991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.503269026 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.510577288 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.508113916 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.503249261 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.512066374 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.507019992 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.509736608 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.503092747 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.512514755 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.510039301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.508465148 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.511166888 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.508735712 seconds)
  done (took 110.850107268 seconds)
done (took 409.623420838 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.041038459 seconds)
  done (took 4.383178894 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.737909339 seconds)
  done (took 4.082275616 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.6608186 seconds)
  done (took 27.015085508 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.540619795 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.506023287 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.481531555 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.476050062 seconds)
  done (took 11.346786767 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.833777257 seconds)
  done (took 4.176208301 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.481720546 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.490945951 seconds)
  done (took 6.318742698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.88526446 seconds)
  done (took 4.227207175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.905359473 seconds)
  done (took 4.255469149 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.485097301 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.501537171 seconds)
  done (took 6.337537197 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.452912832 seconds)
  done (took 3.795875858 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.583206008 seconds)
  done (took 22.92825631 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.483479638 seconds)
  done (took 3.829919992 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.521708801 seconds)
  done (took 3.865558742 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.779837506 seconds)
  done (took 7.12369883 seconds)
done (took 115.028392719 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.475152532 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.473875344 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.476068919 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.475567319 seconds)
  done (took 11.244523553 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.629876955 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.628744549 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.632147217 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.609132628 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.627942841 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.638635263 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.545343231 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.544362799 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.608558952 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.605263211 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.636027249 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.619862135 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.633797915 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.542994958 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.605565205 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.634199852 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.607661561 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.634335204 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.5646614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.606783446 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.513545123 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.621379157 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.607231478 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.513693187 seconds)
  done (took 39.75753956 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.091771446 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.631902981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.717573093 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.599590283 seconds)
  done (took 8.386455009 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.679254533 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.681788794 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.695309718 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.73228495 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.760254918 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.690051158 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.54848993 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.544002767 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.531091768 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.683054318 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.767547535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.675502869 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.899506424 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.515234095 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.899787257 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.513908787 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.515393403 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.679227295 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.728740994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.759056162 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.515414775 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.67636506 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.683666966 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.675015307 seconds)
  done (took 41.396010066 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.529979127 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.53973798 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.515777949 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.53810076 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.514854718 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.515800857 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.518922623 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.530014257 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.515707689 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.515059422 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.516344012 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.53695683 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.515550965 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.515432235 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.532224245 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.516695384 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.518346922 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.529982549 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.531880835 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.517212838 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.516154673 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.530425482 seconds)
  done (took 34.85790756 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.479569364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.479391129 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.91720267 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.823823127 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.479145987 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.480998456 seconds)
  done (took 15.008842535 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.612952318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.811490833 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.51006144 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.961597841 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.092842533 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.509932793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.508972754 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.85832123 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.242092867 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.218005167 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.59575886 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.609518292 seconds)
  done (took 22.882591984 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647245855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489479004 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505834645 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56030505 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489010788 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489630559 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484924654 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355685105 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.518660718 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84625524 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508712665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648180121 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828830188 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490992954 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491137875 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.461213049 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83188819 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1480726 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493275717 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501381006 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552783493 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503942157 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511736164 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784508421 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493523303 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489956858 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.838500482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491507824 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927699605 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885143914 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891220874 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500507572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851605501 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308203927 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67060958 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778849252 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502819668 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493240097 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.48082993 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.507577954 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508780062 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497813514 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87954411 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498681152 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491775735 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495838542 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368607349 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.524715608 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.492480224 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492588269 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890998779 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663081457 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.519406413 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493266288 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514584711 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515600273 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.519825671 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710211962 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218968488 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509830406 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49637604 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.499766067 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48674346 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499508702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327427601 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.52515484 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.522689582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524600579 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493021005 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494541799 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553748629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495242796 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.542857161 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494560167 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501831483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497163152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496633406 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207979869 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49675912 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.495765418 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810087162 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49499898 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494889329 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.494282339 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494498846 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.456016229 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526125704 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.465945775 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604103287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361444497 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.792885813 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549684566 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558717627 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.801145802 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.466224162 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495508333 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.497346834 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499303787 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548102241 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363738504 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49503837 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.524238592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834385085 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.795337941 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495978015 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.470878105 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151271261 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497836003 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.555946745 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495709476 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.791081044 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.309700836 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905763995 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512667847 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562275343 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498275514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.513767847 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497820778 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.529886587 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498872587 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896536005 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.467975431 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498923292 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649299608 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500632588 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499054105 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504293039 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503807223 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498823559 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.792200671 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505625191 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896412386 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.506193001 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499183381 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.49869519 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503493286 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.500749711 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.807623023 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501098987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858143622 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500433121 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500258308 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565708391 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.808881772 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.500761933 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.533780727 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931441701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509210075 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507374995 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899366672 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569150099 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696924239 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560985793 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.50192067 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845704611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.527418466 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.526219501 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504400665 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507356208 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507023624 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.532133031 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50188128 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332668072 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506961465 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500673375 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500988219 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.546622724 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656205862 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531987692 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796418036 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.507165681 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516954845 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.531039527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.500532924 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831405377 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89030309 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.508089122 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780211856 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.132555683 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336014098 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55332162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.502342931 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.501076359 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.501283717 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502216727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502031369 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503062575 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797940576 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911981335 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.519218401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350452596 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511294348 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500411679 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.536222728 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89719426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.541847116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505871452 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.518855924 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510373701 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522417761 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900529181 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813342465 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.549586508 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503775794 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.109727292 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534873185 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503841934 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504597407 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558557691 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5024134 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520602585 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936410978 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512637047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90837515 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.52979293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.557011964 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.503543992 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509975326 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51228819 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.518918014 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539695026 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.804025568 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522587056 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51061151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236258186 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524223855 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264112845 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512802292 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.520272934 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511749573 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379059306 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50602636 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505490119 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879332631 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37675189 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507156462 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13910477 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506274017 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.511920266 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910199823 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825536823 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509322519 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.508822106 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910229436 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.810706166 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563447838 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506317808 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510637631 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.476804558 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229036109 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510662564 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768244271 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379800741 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508227129 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513950762 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.591386796 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.523582643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061329796 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507046043 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507244462 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514231593 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.530923241 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521875862 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518521664 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509394246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345462297 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512189155 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.146403883 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5079845 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808001074 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910599316 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.893341186 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.514251009 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.51364793 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.849950123 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907843239 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514885168 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511021968 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265052141 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.455997652 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.537087083 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509109014 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508946913 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531513679 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994768818 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.514388596 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.523298878 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515827118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508821058 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508503351 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.512161638 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511151034 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511784914 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195713784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.51015838 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53116985 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513517257 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516501994 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.851019183 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.557099475 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346119293 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834753568 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511253911 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580090736 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.538511636 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509681225 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.486137239 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511271231 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51142565 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516735892 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81985754 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512009523 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.504230322 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.595737419 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817008644 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511241618 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.527576237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857563591 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.517180152 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.529950282 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535091159 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574194177 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519189976 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518605194 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509836132 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617914751 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666185344 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810262743 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915238523 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916992587 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07527717 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51607659 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52027468 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.556773386 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673197967 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514209244 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.549718787 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.519068591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339755705 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537760214 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363191925 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924096283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519744724 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515725847 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512068678 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841312782 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512626291 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87568901 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513923244 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.523318783 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571887319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53124933 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528471882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819710384 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866881745 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513869746 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516414762 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519288941 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.51392087 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923678353 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.819976479 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194050514 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242849388 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5177048 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527382428 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39917178 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874143423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51657421 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518892941 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516392902 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.54047243 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543677866 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.545171072 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536751496 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833370849 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910890833 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342991452 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906524426 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.559518986 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.516599701 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514394883 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858197261 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441447617 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815917304 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374183128 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506208786 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860899072 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670463891 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818856644 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.523664916 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840478179 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.526637011 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520671728 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517741816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515756298 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.516823055 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909758915 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368106517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867685479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.546019225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.531439857 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584192375 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.818747552 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.829385078 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.478103117 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824170867 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926912144 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.535600372 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519386299 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367362497 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928514093 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526259031 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.546885955 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865812196 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525090935 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58587597 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.476726894 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.518085435 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241307222 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.821120409 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569991757 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536133261 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507520964 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385418844 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.527659838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210131679 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526597272 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524915284 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882327495 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.551860819 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52709084 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893913465 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.547794381 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52339931 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825459229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.34506057 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.535339305 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.55341863 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527523996 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.523770097 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52192049 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517726032 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526674027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524603583 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.088059173 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521910642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522008001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564836213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.530464314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528505405 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.526084358 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522016941 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.554938586 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.496624955 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.494074211 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.557143964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744414985 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254516584 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528911044 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.224100006 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.945940123 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857082664 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527843031 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.498531063 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.549994451 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522179462 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522139373 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523609741 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52921646 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251393631 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.529030543 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.924828918 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558205132 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.822845209 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823065629 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537993902 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831187401 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538099153 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579208152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.493666687 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52521176 seconds)
  done (took 1070.645119005 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.601002963 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.568201166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.569161344 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.548110273 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.579636279 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.593731996 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.5903463 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.602988969 seconds)
  done (took 22.032871429 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.527625824 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.554023245 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.528202853 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.55370896 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.530961095 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.20884681 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.537156576 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.550419924 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.569370798 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.535382817 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.534640544 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.378257598 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.555556681 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.529590111 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.537970785 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.554980072 seconds)
  done (took 35.576110622 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.959714919 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.767988024 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.511655078 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.543078697 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.573824996 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.55704011 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.957143852 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.53658695 seconds)
  done (took 29.786629642 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.561876968 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.563292581 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.563142073 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.564616841 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.563061266 seconds)
  done (took 9.197033994 seconds)
done (took 1342.116898979 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.555004306 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.55545604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.555484255 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.556182459 seconds)
  done (took 7.603075224 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.498154758 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.499052289 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.50414763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.538898766 seconds)
  done (took 10.421900928 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.497299063 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.292192953 seconds)
  done (took 6.169947659 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.187213402 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170118282 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.172078796 seconds)
  done (took 7.91389771 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.919844346 seconds)
  done (took 3.303399336 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.519858985 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.546840908 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.541777554 seconds)
  done (took 8.992384507 seconds)
done (took 45.786955521 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.522220948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.296921487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.682551252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.539126937 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.683734922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.705963377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.799606989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.53700963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.525623614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.54038003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.539780513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.684000948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.786816396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.294440515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.786877507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.292987746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.68423778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.520146452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.527313006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.534643477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.802914183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521235905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.531338936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.531008587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.687618377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.673853847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.540738107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.295986941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.526473304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.530113711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.674460139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.531543571 seconds)
  done (took 87.717600683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.522347151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.522942617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.525036808 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.524993297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.539181344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.523942326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.526456542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.524143188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523035297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.523109049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52483818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.524726294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.52679639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.525393627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.526010465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.524233074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.537755046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522708929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.5232935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.525681653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.524911513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.532179057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.524353272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529706816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.53480076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.524781538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.525739341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.544699435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.525213228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.541465993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.524715329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.525736967 seconds)
  done (took 82.26012952 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.525419189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.523621823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526428884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.524935119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.547430229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.524293977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.524732999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.525862263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.540421027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.544910704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.526392218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525831392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.528576015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.543738139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.529345247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.533989483 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.525813863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.525625221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.526059354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.534003032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.526595316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.526821811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.525131024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.547795777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.526476028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.529063437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.526537138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.52765851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.560701609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.527647754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.527216834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527705653 seconds)
  done (took 82.373607219 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.854327006 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.564047565 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.56662869 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.534790143 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.566828715 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.564161337 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.536226499 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.855565083 seconds)
  done (took 16.430518783 seconds)
done (took 270.167055119 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.5391877 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.219181573 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.594363152 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.534952873 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.612059955 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.592896206 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.844325944 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.591930789 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.839277257 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.550911467 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.586167766 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.536764556 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.55135042 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.767540691 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.537357159 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.540625732 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.536604341 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.537174734 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.320741206 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.886278276 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.600653337 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.538332424 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528004015 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.54011177 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.531439508 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.647197245 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.644534895 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.782164687 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.747033753 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.644077504 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.232964681 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.544339891 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.542372672 seconds)
  done (took 71.632594273 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.558889088 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.566037762 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.566357496 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.567465458 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.567546613 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.569477516 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.558670135 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.565279006 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.567323051 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.567808518 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.567888347 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.569322817 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.568389458 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.566476995 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.569821344 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.540428849 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.558929247 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.568255083 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.559833202 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.542398652 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.568093541 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.568792931 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.56853836 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.56741182 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.567355947 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.568810042 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.567699496 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.56970876 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.567133153 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.567896309 seconds)
  done (took 48.340563909 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.568810251 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.340553013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.537988595 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.57855339 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.563355996 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.566444448 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.985864614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.574319751 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.57013514 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.569935884 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.231550116 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.57887906 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.607648431 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.541704151 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.576862952 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.570461579 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.572662418 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.565687857 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.356174902 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.586698281 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.987972773 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.576211263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.985224727 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.586761836 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.568458043 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.566367623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.578810336 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.535788665 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.593046225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.231335842 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.542821751 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.975919983 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.520405424 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.5611678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.554555646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.578609612 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.573490596 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.237261596 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.574743758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.566428245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.966174051 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.567058143 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.546463206 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.378311027 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.593037145 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.571054741 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.537420575 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.24057333 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899682075 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.584092503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.545182038 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.576151339 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.574486183 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.569654702 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.896110742 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.574778049 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.566823477 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.545491225 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.586360598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970357473 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.577533637 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.568392531 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.355542279 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.57449212 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.351061193 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.57468516 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.583717595 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.575924285 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.551372629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576075491 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.377409236 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.595073647 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.574260805 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.234350262 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.356237969 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.555365246 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.568823451 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.362476611 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.542635345 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.000878114 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.58015066 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.539743426 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.986753972 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.578898406 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.577389834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.576907371 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.577428107 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.692273577 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.970983322 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.303310638 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.381802672 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.567009743 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989051611 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.591271627 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.57121789 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.544408405 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.577177726 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.576088622 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.543149237 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.385766653 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.596618606 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.584807118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.369572764 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.599372658 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.980591107 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.587066624 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.549091613 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.576131434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.694337317 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.577433276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.584950712 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.574276031 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.98525881 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.577909872 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.578127917 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.371152645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.254256983 seconds)
  done (took 224.235439093 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.542130043 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.543179199 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.543333897 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.541255491 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.542581008 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.570291585 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.541615872 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.542229916 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.568680137 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.542920856 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.541820856 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.574647167 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.57222598 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.543242336 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.542273358 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.563847749 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.541633123 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.550527759 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.564038346 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.544444583 seconds)
  done (took 48.418071461 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.579373536 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.383011346 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.333869761 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.58420355 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.578967688 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.57364285 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.655016396 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.584088312 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.581597283 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.013282555 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.818420764 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.584650953 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.58077092 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.581252057 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.328225607 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.560263215 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.017898575 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.388001924 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.586357525 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.382024278 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.563150664 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.582165302 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.573318576 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.381624297 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.030440882 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.984759585 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.659717203 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.385456838 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.584976414 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.580360603 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.380772443 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.585890287 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.574077332 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.362482268 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.584759696 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.604004252 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.58228047 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.657403082 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.661349323 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.021620417 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.392077303 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.996856443 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.605920278 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.818408263 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.585440578 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.554078909 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.385162736 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.586515157 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.554495512 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.584261169 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.59587333 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.337431666 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.580628933 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.337652156 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.587105805 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.582610261 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.369582054 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.347644977 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.339002607 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.819985698 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.577090773 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.969518471 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.584911461 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.344123369 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.583043277 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.583597188 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.583467004 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.818776187 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.378161776 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.985496689 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.00117948 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.998894482 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.584418941 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.66950909 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.59006051 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.998742717 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.667082735 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.090992228 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.005454116 seconds)
  done (took 147.415842619 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.960145491 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.728999337 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.122442456 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.339006238 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.258454724 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.781109316 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.721907653 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.915509368 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.578769758 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.742953835 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.475285439 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.710236407 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.530954739 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.676199955 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.712704458 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.774588654 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.136972935 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.56149745 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.399574974 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.45384668 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.558453628 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.734761103 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.178924079 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.870768902 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.554594897 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.312044569 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.578634197 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.302660624 seconds)
  done (took 61.078403058 seconds)
done (took 602.510270351 seconds)
SAVING RESULT...
DONE!
