cset: moving following pidspec: 15078
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.567995783 seconds)
loading group "string"... done (took 0.516768812 seconds)
loading group "linalg"... done (took 8.684033026 seconds)
loading group "parallel"... done (took 0.177582636 seconds)
loading group "find"... done (took 1.402580161 seconds)
loading group "tuple"... done (took 2.073565226 seconds)
loading group "dates"... done (took 1.354668757 seconds)
loading group "micro"... done (took 0.21323219 seconds)
loading group "io"... done (took 0.602354089 seconds)
loading group "scalar"... done (took 42.95377997 seconds)
loading group "sparse"... done (took 13.584815283 seconds)
loading group "broadcast"... done (took 1.117371711 seconds)
loading group "union"... done (took 15.114255587 seconds)
loading group "simd"... done (took 5.357241282 seconds)
loading group "random"... done (took 10.710834224 seconds)
loading group "problem"... done (took 2.20597323 seconds)
loading group "array"... done (took 26.781382317 seconds)
loading group "misc"... done (took 1.169717911 seconds)
loading group "sort"... done (took 4.093695123 seconds)
loading group "collection"... done (took 22.957710368 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60978954 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139587941 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150110613 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.17801844 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211047615 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141505444 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161126346 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.555787792 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.052451256 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217219138 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145957492 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.549329967 seconds)
done (took 5.844620555 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229622962 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.075214701 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131206873 seconds)
  done (took 0.883718151 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076651627 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17380546 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094788364 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112654985 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112816083 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112799777 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096696581 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11223921 seconds)
  done (took 1.496785191 seconds)
done (took 3.37489946 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.825388244 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.862178117 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.493046068 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129860632 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159167084 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.13239335 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317155227 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.163304295 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.111625956 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.124045794 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176745683 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.374788039 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.431062046 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.969778577 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096651087 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132148545 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082656913 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.743253614 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083507112 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131573517 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521143215 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114657153 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12027046 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126892455 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217585835 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132141368 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.194311782 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103989712 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.686552635 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102315385 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184269519 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100650333 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164086019 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.216737429 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082137967 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10891444 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.719725526 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189443448 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114589029 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097936051 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680413696 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079498515 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194046808 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109590443 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112374106 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197976384 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.1202738 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079966135 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10637024 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107055009 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161864168 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456178719 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106657469 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148096848 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.115466488 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692037239 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095318262 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157913642 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127755225 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111949365 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099288908 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.119388246 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.168344126 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.126605785 seconds)
  done (took 20.033482975 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115634588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141825066 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095729391 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141876594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140746772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09869188 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085117285 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095901092 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.11083848 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18486717 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139306358 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144785102 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075520961 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.098548031 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119072701 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233195852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121596263 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121698135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083348045 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108783317 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126211822 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115603047 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110379172 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095261727 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170670691 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209063825 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.123444252 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125254163 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09598311 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100743778 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144039945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164063401 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076892899 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096017757 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183403536 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122422283 seconds)
  done (took 5.209709992 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203602536 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117054578 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193508942 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179973862 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152919819 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16833244 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120888662 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269284036 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.167890566 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16629931 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13193989 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114183578 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07997274 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097714921 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.163851038 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078679149 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.760849917 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.187098854 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154072983 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12640366 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087955028 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099859171 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375056204 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100957625 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082961819 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103870951 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072924715 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176135226 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105080875 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.207666541 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122431087 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109568082 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133719867 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197572621 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130455985 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125103757 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105037189 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081904268 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.233191215 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092276393 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097128441 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104446516 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137673109 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133795765 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099931439 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095288015 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247741888 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082426628 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121446959 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.056950487 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083694424 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200841215 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.112241953 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079790919 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.357855857 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101220416 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105862623 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081845462 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312062609 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133782522 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083831144 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078026758 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105794012 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099517521 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079362285 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391735388 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108895931 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.097425578 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082455296 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160397244 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101945856 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107502712 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086305683 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104175861 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101965151 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099852057 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07971709 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098935193 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079941053 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103743117 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117183776 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08597302 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097129874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148189492 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118995841 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101016155 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128198592 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085805547 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098963645 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129127052 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082855359 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10101877 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082940228 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.144792268 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087108892 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118981782 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103120193 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143823166 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082043903 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197364579 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082388337 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126142979 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101476574 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113770594 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121005922 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098411063 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085191577 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096492597 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081637415 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161536737 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082106461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079848521 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10216255 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112580065 seconds)
  done (took 23.900525923 seconds)
done (took 49.821617367 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.432158231 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115623009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114355474 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113417811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110852089 seconds)
  done (took 1.639999618 seconds)
done (took 2.369363259 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334530216 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203039561 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102443337 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197437399 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088085771 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.204196235 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.169300202 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100692161 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213912873 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082792543 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192988314 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084004694 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.1066492 seconds)
  done (took 2.833375475 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09169074 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119387006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081272282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10911268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075886378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091221245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109873831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.137617304 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091308589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085518938 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094109126 seconds)
  done (took 1.811703333 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090837434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117025181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081122352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091024121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094008213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090862226 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109292694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10182355 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109565941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08599331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094158718 seconds)
  done (took 1.793361307 seconds)
done (took 7.157674168 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.154005346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.82263334 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.125577071 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.178116225 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34741304 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.223806744 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.656557169 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139508638 seconds)
  done (took 16.557096467 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.130751265 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101736208 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079561311 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101371383 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081881024 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098582194 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08107556 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099238359 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083244687 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098528809 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081123487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100769403 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080271661 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096939528 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082701058 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098931115 seconds)
  done (took 2.289171532 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117135224 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115919488 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106215793 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090427092 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.103902361 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103211958 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087552623 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103910576 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083310907 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102265393 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090441052 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106870531 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105362599 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083658327 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103815674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091725616 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101361719 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087531821 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105863318 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088583498 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107515051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102901272 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089049892 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107263547 seconds)
  done (took 3.224131001 seconds)
done (took 22.801035907 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167251642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086087414 seconds)
  done (took 0.985080361 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100281232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121681289 seconds)
  done (took 0.960577197 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106894679 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100191622 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139810589 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118555441 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083716728 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081878495 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134935556 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099943104 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082550106 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100476359 seconds)
  done (took 1.787966393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084531778 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103560952 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091722641 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121424222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112324883 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0851915 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105785355 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086626409 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106143967 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08110945 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108470269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101941214 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106950969 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120585461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087681503 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106520086 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.23249449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.086257647 seconds)
  done (took 2.667978229 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080071482 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084477497 seconds)
  done (took 0.907917834 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082577597 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097505202 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084496645 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101782732 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080604625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098019729 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080453165 seconds)
  done (took 1.36894927 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488205999 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.25746606 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316525189 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116793573 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.134627411 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.36107619 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.138055669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.096319906 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114194175 seconds)
  done (took 2.827206161 seconds)
done (took 12.243029047 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090624126 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.136461102 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.489326568 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118062295 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.07939525 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160281085 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268309748 seconds)
done (took 2.084060125 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339774692 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124733161 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090105399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081448782 seconds)
  done (took 1.374275419 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077936735 seconds)
    (2/2) benchmarking "read"...
    done (took 0.086593893 seconds)
  done (took 0.91073661 seconds)
done (took 3.031205946 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078284419 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131812133 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078903386 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096683973 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079653957 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.076190422 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096589061 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078963917 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098390309 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.078673341 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097167955 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080035316 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076570696 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093987535 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078425299 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094598674 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080662696 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094196118 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076588854 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07639363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094703985 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079375087 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094916397 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07650419 seconds)
  done (took 2.865846683 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104094115 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099285673 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085349301 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104549793 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085560384 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103636066 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103165455 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081029187 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104478505 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082274634 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102539603 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084634433 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100801645 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085013203 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100010478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084793242 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103281783 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080903473 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100410602 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.083913451 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104179139 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080204684 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102716953 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103788095 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084241187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101951698 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0827435 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099361302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085866404 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102134102 seconds)
  done (took 3.575949743 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086384368 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076932962 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096786806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089362541 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09563303 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081560303 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095269478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080815469 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100548801 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07716763 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082323677 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095188004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079936798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100386893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082714051 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102186855 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095271411 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099031227 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080879296 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.100680837 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082940357 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097934274 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081050981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077029828 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095685118 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077292565 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096290777 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077158313 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097061593 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077935944 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10088424 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085268269 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077376162 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108825636 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084715582 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09560803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086186395 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095947256 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082494459 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095982606 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07824261 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095667912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081412906 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089967964 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099186431 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07891364 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098914569 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083245987 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100367607 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0848482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095552251 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08102936 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101202389 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083339809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08400721 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095417931 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07862305 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09514648 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081742024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095339942 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077732863 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077240538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10258988 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078343175 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119007807 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106740709 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080370414 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083034938 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099673553 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086016601 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100790471 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096919002 seconds)
  done (took 7.213010857 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080938658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107829771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080175356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098031016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075994704 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078610917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103403911 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078279666 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097274748 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097374328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096977585 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080258632 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09767521 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082473017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096642117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079787653 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106978269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07664119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096517121 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082190061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096959029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085911938 seconds)
  done (took 2.734776445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223904156 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105656222 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143610506 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114948704 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098928477 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115383092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085370997 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10609502 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103704088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089909279 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107332905 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085582809 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116504481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106592191 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08898858 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108468222 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08565793 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107169192 seconds)
  done (took 2.753322048 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092219977 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100292822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106640813 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100211265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081661325 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102392057 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088264796 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115113185 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087655203 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100076441 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109921131 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084123046 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102057283 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081799586 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10183263 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081643156 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101268358 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082029053 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110426142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088972832 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106145608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110366672 seconds)
  done (took 2.893761505 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096306379 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102084448 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104153291 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103800095 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080261247 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100992398 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089290583 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100110998 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091466759 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10278649 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081830214 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100542286 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089653464 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100094571 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109109347 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082949081 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101165984 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082014444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101464095 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081216041 seconds)
  done (took 2.660075527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121775087 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114788606 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096742713 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126098699 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115034353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096176342 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127085191 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096050613 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114355426 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129151398 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097301134 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115048883 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127159014 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10340922 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115205052 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109183495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125813976 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127431421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096788886 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115936424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128505788 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09674773 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126823485 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097168165 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114931104 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114705834 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097122041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123911081 seconds)
  done (took 3.932651466 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07939972 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081327301 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096618554 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078679233 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097317022 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078510089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078245044 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097209013 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081212963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096878036 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081043818 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099597069 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081290501 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081109847 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099890792 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081238184 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099543546 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078259765 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096944482 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078575633 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081120424 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099613924 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080951885 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097519758 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079050161 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099523709 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078668905 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078986841 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099871489 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078771201 seconds)
  done (took 3.379473368 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088224513 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111523027 seconds)
  done (took 0.965039601 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077639294 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116766439 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079059323 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104511143 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088365156 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10143191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092551097 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106441972 seconds)
  done (took 1.531913901 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103668995 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.12255268 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089094765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114225952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101818502 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11978509 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168415416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089277509 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109275351 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083289222 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121141713 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082824273 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111739016 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087301372 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109826547 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116427584 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083334573 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09288839 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109478507 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085138481 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10871424 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118105914 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093787664 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109340319 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085019895 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113946118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097021618 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113132078 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087990785 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113599262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089948412 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095337968 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087693166 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107109575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083719506 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.120594774 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119659641 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088499131 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111456206 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090426682 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112013373 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080834541 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113714181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090139133 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115217005 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088854924 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109465064 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081266212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102631097 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086904837 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100358974 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087459477 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095763828 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092875475 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110970079 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101972746 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104181779 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08779395 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10688954 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086257012 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109283442 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086782826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112850945 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08685412 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111731405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092624308 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110100229 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081641042 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095074644 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084726494 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111085891 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108585019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113463704 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108222695 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089925202 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.10267156 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088720612 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109379483 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091718923 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11456889 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088471758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110194435 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094904672 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10611184 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087448684 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109079277 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086478692 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105880966 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08449682 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123056923 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087249434 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103164727 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084294136 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113936238 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088804392 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107302167 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084808261 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112008086 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077456224 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108755912 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089897016 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109651961 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096806059 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108988921 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089934718 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111899992 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09491273 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108172888 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087167245 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099013201 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090800122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104161151 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092182337 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095796577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089357976 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106858641 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.090159206 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113550703 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085253045 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.107066609 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095210171 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114998013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104735231 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080952645 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088409267 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.107551238 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112434519 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096015511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105320015 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081710323 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082594828 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112878034 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10696238 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09097773 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108613802 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089657437 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095645362 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085168345 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089266702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114896151 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106287156 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091426334 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11360058 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091399026 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107701988 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0941022 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106078071 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084831554 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113864323 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087991783 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101358576 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095092144 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107203847 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087293378 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107343536 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094338922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107819963 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090227695 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105340801 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089312146 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109392696 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083772578 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10892074 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086601852 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115241768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088242697 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101555201 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081385276 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110088561 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085265711 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106772224 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084126163 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107916121 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090938588 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103452166 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087486779 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106497596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101153283 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126262916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090024098 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111918474 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095386059 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108108655 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091366043 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107843297 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090823035 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.109303894 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093483239 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110527877 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089789959 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108002227 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079928526 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11008317 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094659873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103416283 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085193136 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103430491 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089336836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115040712 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088667515 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109106278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086497713 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109789314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095269936 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108327553 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088279332 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103253158 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089399074 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112635696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091033776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109598433 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095537327 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109684709 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083703141 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113263091 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086120989 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112924955 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08298284 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104811489 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085502683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109491154 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087573128 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106845621 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078577054 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112994074 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095079033 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108654746 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084870915 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10828083 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098882597 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107329928 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095862148 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108131538 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091924049 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122567735 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08511671 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107325779 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096954814 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110086214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078459237 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11171124 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087311959 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10308315 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088289116 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.106309619 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090375987 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111499328 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091275952 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097838223 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088956015 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107936728 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085801898 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102433617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094962454 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109451402 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089381256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118337496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091993893 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109418767 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091879766 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.109422235 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091062198 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109989549 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091116094 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110988739 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088299821 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104423961 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089496292 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104045952 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08575251 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1076845 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090354945 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109685303 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091934013 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108052909 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095046965 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10925648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090977435 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126563986 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.1059163 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085109423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110148673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092419428 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108505806 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089731839 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102854403 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094712346 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10872955 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095647683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108247289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081730557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10957923 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08921119 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110542516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091958861 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110985829 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088779055 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108615141 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090374081 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11944088 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086508765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116040651 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092537995 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111938862 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089275034 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109891835 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088479207 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104667498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089569425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111551497 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090556647 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108455274 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092865804 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110332678 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089768451 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107486228 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091582046 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110659556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.092672208 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099306812 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084864051 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105131944 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090979946 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113181475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091769172 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107750838 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088352331 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111717223 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088991321 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101124389 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094775752 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112717105 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092814628 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119179417 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085393604 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109662185 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100631638 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098656549 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08773679 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105510894 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087144 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11612355 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092132308 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115630976 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091014495 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105835503 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082031489 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.111337461 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08853805 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079951101 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107464186 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092700951 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108266232 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089555915 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.11095236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091925092 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111196424 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094034236 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109885758 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089529662 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.112327804 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082204348 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105290271 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086282107 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109493716 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091463619 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10599669 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083071763 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10997442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090811005 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110582996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090684365 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108622127 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096054822 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110152255 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091183331 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116659771 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080072401 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110753796 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089705193 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10987653 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086833734 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111934527 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092413089 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112910018 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095764322 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110832674 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092985508 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111101834 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08768727 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1103536 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0908338 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111225854 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086143113 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112199956 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098092218 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106783967 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091174634 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111003798 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088632757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112583131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092764819 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111220543 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095519398 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11080462 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091035386 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114702288 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090926048 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112340553 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09391811 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110154664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096721321 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106272201 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097366136 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111885045 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092299692 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109435137 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087569182 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111224671 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090365846 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108506606 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09690411 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112061287 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086433694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106109222 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.088033214 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.111091055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096705566 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117510492 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091102001 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112256575 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085010464 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103413542 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092512425 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106717627 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090238505 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113446777 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096020131 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111228161 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088160867 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109855845 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09691136 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115564021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093157136 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107658126 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093906877 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112727913 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091217327 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109056407 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090940142 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113245772 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094002683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11066284 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087237636 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121372743 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095936254 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115116643 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089833463 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114968955 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090925773 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.105440412 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.092625904 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112475784 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113515781 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09139645 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091372213 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121927002 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106566518 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090417921 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116383605 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091635785 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116939666 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085707246 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112174214 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094095671 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113591052 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085106634 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106900864 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088892212 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111237129 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088440914 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085583905 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12399151 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116172038 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09158226 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109951186 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089928325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104881746 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086297918 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086467067 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115305459 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089723827 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121054853 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106461397 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086879563 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085209552 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111543885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092004225 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113929589 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084232516 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106212923 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087255325 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112306512 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098847151 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110041733 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091731241 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113591162 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091452226 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.108477375 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096918836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103719525 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092879116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123531981 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093020736 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114505601 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114451975 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098406027 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113628788 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085892833 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113555185 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092455631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112516279 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.093795271 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.113764987 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106616907 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113270652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087064202 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111273375 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091200036 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107983551 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09967491 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11439043 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09324294 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114426398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090030166 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114854399 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099294372 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114139393 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094694946 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112743334 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089711716 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113698666 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090177407 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110394919 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094593927 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114209704 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091662304 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115500294 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08785962 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122933804 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119331605 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093545277 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083462206 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109156288 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087724235 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10686037 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093812577 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106614498 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09044998 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.110795424 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090939517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114417517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09511913 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112562204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095268182 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112986513 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082387586 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115665807 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093473211 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115839981 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084941345 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.112974589 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.0949143 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116673217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098176996 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109901861 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092705661 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111500558 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095237759 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106657366 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095232752 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111539834 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091191601 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108450985 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092869062 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11399582 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093894285 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113238823 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095406179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112060437 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096204776 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115456592 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085808842 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104787541 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096217014 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108493524 seconds)
  done (took 60.675199439 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14750362 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090231946 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082644932 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105491484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13133344 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088216973 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103600848 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088267893 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107894633 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097803718 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103317313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082959719 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125336658 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13296519 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129928641 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098482978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103235085 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087055281 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103351983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088002194 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124516695 seconds)
  done (took 3.034144396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104538639 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121069544 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121524339 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106343434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114312179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.1222218 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100570387 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122042249 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.125981159 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095045931 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126473897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122690214 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095632647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.118767404 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115393577 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099488219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126494251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114845421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.103761628 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120773719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119610459 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101107104 seconds)
  done (took 3.31120927 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092601438 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.091115781 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.117164446 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086343472 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.11247092 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.085712705 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117316422 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088273816 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118581009 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092073253 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109744724 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092230403 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.117884182 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086415847 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.110369142 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08868807 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11751435 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092724142 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113762841 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086458403 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.133760454 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.086645558 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.107141483 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090007077 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122290702 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09495871 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112248442 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092906533 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110216807 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093149987 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108951528 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094629494 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115805808 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090520184 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110071415 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092949086 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112748866 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087946384 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088270742 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117106302 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.087952173 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114740818 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099681729 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.110227826 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088705204 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.11539883 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092694948 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.106950098 seconds)
  done (took 5.71313586 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.119114943 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163158112 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091138732 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154422404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128487429 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.101957951 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115339656 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153643842 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085746891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113173594 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.132459932 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106704309 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117019637 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.120038482 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093344784 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11283882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094141136 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109213993 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.097998571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113271345 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119015166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096466776 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127760521 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125729279 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.098054874 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111859138 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089446712 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.119810176 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124600254 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099506781 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.119050937 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100026731 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12916613 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11466171 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092275467 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.116495674 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130606902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.0944546 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116649807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087588102 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.116176574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.099022513 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117262455 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131721764 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09452501 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115867892 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093965873 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10714473 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125489219 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096183669 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124314956 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126984991 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098393898 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114596386 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099225565 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129802994 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.114059798 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.091635815 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119453582 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104585243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.109569547 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097983227 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127129102 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115549287 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.102621003 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129169905 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115159618 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09806391 seconds)
  done (took 8.618866876 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116143096 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117568715 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131752858 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112002755 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119649129 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.097932343 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121636909 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118458875 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099316285 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127091252 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098342394 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170618569 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117101305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126521454 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099113183 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119421907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.098961016 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120053704 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117969149 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099186655 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119623882 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109955695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122118661 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130739321 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132778757 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096549708 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119323986 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098867441 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132645478 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120003203 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112540337 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121849168 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118609458 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111419326 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.1326969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119639241 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093029639 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120572791 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.098850676 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120339917 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095717283 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131820315 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119801976 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096556747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119882097 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119555238 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111614399 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133918805 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125940482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107217655 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119629653 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131447285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098990071 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119920987 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131158991 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140993037 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111424432 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134047455 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120307259 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131527062 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110764913 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141484734 seconds)
  done (took 8.142178158 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084832759 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084688904 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106361705 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.08740529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111175 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087965599 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089545363 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.112037583 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089828738 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.111293543 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089794862 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108273557 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088380291 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090035576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108736866 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08721876 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109314366 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087750989 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111032899 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088751903 seconds)
  done (took 2.763436695 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094056321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128657105 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091124579 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11948352 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094000703 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.119883884 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092649359 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114803609 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093651776 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115671329 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125059947 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104433823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111660592 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098547834 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125292376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119252497 seconds)
  done (took 2.579770734 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106008867 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129731383 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.13788547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.096456952 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110644215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.098791566 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114743372 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086815244 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107028249 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100387166 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.117920413 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097580907 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.115108848 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089556127 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.090958813 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.119273234 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.086496816 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.116532564 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092725282 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.139663361 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117054617 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.094570277 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115923784 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092702489 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.115106781 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096438766 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.119935601 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08830796 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110927884 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.09488367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.116316456 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099629776 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10947695 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.095560178 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113439259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088131272 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115567595 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094367548 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.118942253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.094029561 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110599134 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.093583061 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.115296023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096512711 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10880577 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094495453 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.109012605 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097831966 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.114532146 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09446443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.114926546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099683886 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119894493 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102786139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124132535 seconds)
  done (took 6.674710872 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100578445 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11011444 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096109865 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110724887 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094621404 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.121325352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096918218 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115935059 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094171055 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110567073 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094072669 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117229394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093778824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116713598 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094380263 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116682729 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08724295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114248429 seconds)
  done (took 2.724523377 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091867898 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088978994 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.12190059 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091404767 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.114749353 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093085138 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109157863 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090176499 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110843005 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09139469 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112308719 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094189231 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110920204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.094576421 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112619285 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092344651 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114220891 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090357488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091040869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110982929 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093303133 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111666171 seconds)
  done (took 3.068508948 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102763926 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.145073547 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10555394 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.155816479 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11804833 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096361649 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126781133 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09682327 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136674697 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.095154521 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.11672432 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095652218 seconds)
  done (took 2.228070627 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111518508 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151724068 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092412446 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117383359 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12822812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09762421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118213644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097300757 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133356359 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132818608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097165688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133028482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132492093 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130696365 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106099699 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127498372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11835804 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098250232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113918626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142737178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097872477 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132659586 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098018758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119989932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118903732 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109997997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133321044 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132630244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096938551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133307396 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128438892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097794223 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133823809 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133241333 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094651225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134975475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119316544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14256525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107066819 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131247781 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115696027 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107218789 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133092818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125676503 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112261862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121467614 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126689394 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097760877 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119568464 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148554518 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128239917 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109864048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127948124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133772095 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132771499 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148697191 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111802343 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13060561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128071024 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133055891 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109703376 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128291808 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130661702 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133285889 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107235642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131814141 seconds)
  done (took 8.85497905 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126776319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115551303 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097419964 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134118924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131103356 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119400077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098542206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119636532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097943447 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116492506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.405887358 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092709235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131951553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131035081 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097439819 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120802707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11908812 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10932426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115957114 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149736707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098103964 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132392325 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131032142 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131261869 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132373409 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106820521 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11916256 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096991802 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119811531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11881663 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105943692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11947608 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130822254 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094113911 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130853616 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097628822 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119636075 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12650079 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098177479 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128532641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131398693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142881166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099077977 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119225935 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133593421 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098738202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119120949 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094861817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118846542 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094797271 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134212329 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13285864 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13329718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109918726 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121852697 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118626527 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098765558 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119778517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0978718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129227155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131326979 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098004488 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148059137 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120158374 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097785039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134141907 seconds)
  done (took 8.894864391 seconds)
done (took 162.535924695 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103457287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147788305 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.106984032 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178463887 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085874408 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144042261 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11992821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.122019065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088309567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114375189 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093148351 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.117802735 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160020238 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106530321 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088408078 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116784998 seconds)
  done (took 2.736697884 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181225773 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.298472122 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114418049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121777197 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099334539 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118745957 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09777873 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.121844928 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094351536 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129074102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.094990241 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.119457226 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128059176 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095781795 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115664954 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096071723 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.127976163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095962839 seconds)
  done (took 3.099940532 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117921121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153672094 seconds)
  done (took 1.129999217 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120855455 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189933532 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313533574 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.148386754 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.147217204 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138610134 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.172211631 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113960996 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.220699044 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.118034136 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.139536387 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122379529 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124316146 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.129587978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125029995 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100850743 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149505246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.10246971 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.124114732 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101816987 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147128073 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125593152 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105254864 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.124362366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194293696 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137842049 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1016586 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123890488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100425598 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.124041692 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106903626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138653693 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.137537786 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183369252 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128871969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176937547 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.1306459 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099834774 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124462251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099422811 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127408982 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.126602908 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.117614261 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122901576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102074412 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131403133 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102135773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124184758 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13057113 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11058463 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13157527 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128331866 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176992178 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131407771 seconds)
  done (took 8.12805969 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807842808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166608373 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100195137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.919714201 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153908329 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113458001 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.823755175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137908941 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248111123 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.836093188 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110227739 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130353538 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.246738467 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269230678 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.159431962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346682154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694480489 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113831888 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15422843 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168148281 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131146675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129485886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143050848 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424683557 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.123154559 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099320914 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128579675 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113377585 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.202547765 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100577033 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123448227 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196589878 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282790311 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215158367 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100881241 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123861051 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098912015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.208112641 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26681009 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241181727 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189321245 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118126417 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098883694 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135445155 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120490636 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119168491 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181947817 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.213947299 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189747266 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10057375 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136890747 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132019113 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1112196 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.202652042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097803853 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36608104 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361704998 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100050447 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133781081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142314209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263105221 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123849715 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.246539625 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126642532 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.234059457 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122196269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790725606 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18406885 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123165001 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132505993 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107470418 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126528753 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111963915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182483466 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3940965 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1417629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128262577 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101640191 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242990457 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099945616 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121526459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183908829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101334214 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132262758 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139990333 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114342055 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.211356513 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269592921 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139628749 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109227854 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129215978 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135161246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102575823 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229315427 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.240861367 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177073145 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.256781451 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113929341 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.205228096 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185958908 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13674862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190462113 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107490915 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.144577835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136670237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236954999 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158733877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100699301 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128892602 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108744201 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162282255 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126101933 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109090321 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187239944 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48376255 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185104839 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119282376 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105083738 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128840063 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179542727 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130998319 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263072375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132601699 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189072417 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131521895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097282406 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131862084 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184341984 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139357034 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109893684 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139421005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1319523 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270413481 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240218312 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117253297 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260212776 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193766172 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133919791 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192694755 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131900834 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189424195 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111495914 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136748164 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12561216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778890362 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131213484 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129774302 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10648445 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203753385 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119283111 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10111514 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123194403 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097424089 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82503369 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101743777 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121033658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102709298 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128500142 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10483464 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130685934 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105465558 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.203112133 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255229858 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114678744 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132691773 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09997915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.202980125 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10234179 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124069895 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095876487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.098851876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.135771386 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128092528 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102098134 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188618904 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.201170011 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218052975 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568844735 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123350732 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100229703 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255902968 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100388543 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328600862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132230756 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224573093 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.210619107 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096538876 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358837485 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189125893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20201104 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127764352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18044663 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111482351 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099422802 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171595697 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.118573383 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106645225 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.200698771 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117775406 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139298794 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.168009922 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09172693 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261329497 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091023776 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.184542616 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118134391 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128515134 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299218794 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114504853 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135018001 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170893717 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097146904 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11801645 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.61146597 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116166218 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102667614 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126016114 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.242997368 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185423402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133483788 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108462286 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138454785 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179920512 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.251539565 seconds)
  done (took 46.928770453 seconds)
done (took 62.87408144 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313567784 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271648134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.300281975 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201261001 seconds)
  done (took 2.038397541 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179333011 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157926297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128734746 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116010891 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15874926 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.093197691 seconds)
  done (took 1.713025721 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.486903171 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.382407403 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352419714 seconds)
  done (took 2.107085346 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261080421 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.296016481 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.337232345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.452123458 seconds)
  done (took 2.334216962 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214574306 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141271449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111481296 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154171076 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.18868793 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.194267792 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15814931 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.167385255 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.143570622 seconds)
  done (took 2.398360309 seconds)
done (took 11.479020508 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.273555766 seconds)
    (2/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.177181311 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.326568576 seconds)
    (4/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.243751785 seconds)
    (5/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111270792 seconds)
    (6/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.290744286 seconds)
    (7/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.29894015 seconds)
    (8/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245719049 seconds)
    (9/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.248008998 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104225191 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.139959928 seconds)
    (12/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.137033364 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101427944 seconds)
    (14/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.207897702 seconds)
    (15/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.113437786 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184627385 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.175021863 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.139304037 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.295216929 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.217683075 seconds)
    (21/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.200169062 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.142249034 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.163267575 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130893411 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.30382438 seconds)
    (26/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.22978338 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.2258805 seconds)
    (28/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.113380449 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.132377941 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218848414 seconds)
    (31/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099041942 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.138164203 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139190926 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.131581722 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.219625253 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.236230997 seconds)
    (37/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.217627361 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.111958998 seconds)
    (39/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.118434032 seconds)
    (40/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.266463714 seconds)
    (41/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.215590084 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114899119 seconds)
    (43/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.253069691 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.139417728 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104291983 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.20298422 seconds)
    (47/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.15364939 seconds)
    (48/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106146053 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 0.241540022 seconds)
    (50/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.113297811 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.105607662 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.112884467 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087007422 seconds)
    (54/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.24515855 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136029349 seconds)
    (56/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.185609477 seconds)
    (57/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09828829 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.126061858 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098523711 seconds)
    (60/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.16259482 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.20283952 seconds)
    (62/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.147246474 seconds)
    (63/286) benchmarking ("sort", Float32, false)...
    done (took 0.187893771 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13164691 seconds)
    (65/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123151306 seconds)
    (66/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128391114 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.087572633 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125568753 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.127228483 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129053231 seconds)
    (71/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110650874 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.129861013 seconds)
    (73/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.162180856 seconds)
    (74/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104376029 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.199502315 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106629442 seconds)
    (77/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.17357037 seconds)
    (78/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173860794 seconds)
    (79/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089158319 seconds)
    (80/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.111805459 seconds)
    (81/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.258790205 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.201148167 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089136664 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.126771806 seconds)
    (85/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.16742737 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102541546 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.090216481 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107247095 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078662997 seconds)
    (90/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.104455041 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106258792 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.144380888 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196259959 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103278087 seconds)
    (95/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113531064 seconds)
    (96/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.139804664 seconds)
    (97/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107634647 seconds)
    (98/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.181653526 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090883367 seconds)
    (100/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.193303231 seconds)
    (101/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.131184689 seconds)
    (102/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183919078 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.200866389 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139495955 seconds)
    (105/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190949263 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082601762 seconds)
    (107/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.126248661 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103637152 seconds)
    (109/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.105313892 seconds)
    (110/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196934406 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120199972 seconds)
    (112/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.121252662 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101919321 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121908865 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113483619 seconds)
    (116/286) benchmarking ("sort", Float64, true)...
    done (took 0.230852374 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139279498 seconds)
    (118/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077509879 seconds)
    (119/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187782068 seconds)
    (120/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119515008 seconds)
    (121/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.187122389 seconds)
    (122/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.137545624 seconds)
    (123/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.129189449 seconds)
    (124/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.089284696 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.195102977 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.136281802 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.085474424 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121553899 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102684294 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104480933 seconds)
    (131/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092059293 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122652827 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104336665 seconds)
    (134/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.116532607 seconds)
    (135/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078825075 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.152948248 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.187214931 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102118304 seconds)
    (139/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.126338402 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175318315 seconds)
    (141/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.088038146 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0987176 seconds)
    (143/286) benchmarking ("sort", BigInt, true)...
    done (took 0.288972207 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107543389 seconds)
    (145/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207059456 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102790792 seconds)
    (147/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.107839022 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.163086215 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101517848 seconds)
    (150/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249426269 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.122780157 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.172033712 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126965812 seconds)
    (154/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078378094 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13743782 seconds)
    (156/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120978039 seconds)
    (157/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103291063 seconds)
    (158/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.130477254 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105845023 seconds)
    (160/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12076899 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08364619 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.11527621 seconds)
    (163/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.10971874 seconds)
    (164/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203261875 seconds)
    (165/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138377991 seconds)
    (166/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.146119169 seconds)
    (167/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120541677 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100543709 seconds)
    (169/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.112876598 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.12881601 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.134960618 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.161555942 seconds)
    (173/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081602523 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121357849 seconds)
    (175/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090316894 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.081265098 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127075766 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.131701479 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102532334 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.131558849 seconds)
    (181/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09512268 seconds)
    (182/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.14135954 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089246496 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.115750224 seconds)
    (185/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.086558909 seconds)
    (186/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.147433407 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.234642785 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.105483073 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.129611043 seconds)
    (190/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08867576 seconds)
    (191/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.113224611 seconds)
    (192/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211783464 seconds)
    (193/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.137085368 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128636892 seconds)
    (195/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.108624007 seconds)
    (196/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125286726 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084141249 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132479798 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.110835669 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13592876 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123342959 seconds)
    (202/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.087851658 seconds)
    (203/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.191366751 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090010392 seconds)
    (205/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.132975645 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097820256 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135995096 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10323632 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120594773 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087624256 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.122258594 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100360028 seconds)
    (213/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.12127114 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097391587 seconds)
    (215/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.131808171 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.094179129 seconds)
    (217/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.105200767 seconds)
    (218/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11700008 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.131061974 seconds)
    (220/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122909638 seconds)
    (221/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081791828 seconds)
    (222/286) benchmarking ("sort", Float64, false)...
    done (took 0.180785494 seconds)
    (223/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080442973 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133481133 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083931638 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.122076264 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.102474076 seconds)
    (228/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.16450472 seconds)
    (229/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08989019 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131136182 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10300695 seconds)
    (232/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130845634 seconds)
    (233/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.129872153 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147485416 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093720242 seconds)
    (236/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117962949 seconds)
    (237/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.086520206 seconds)
    (238/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.117339046 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107408386 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.126489574 seconds)
    (241/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096318818 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128944693 seconds)
    (243/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091286662 seconds)
    (244/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18091344 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091136041 seconds)
    (246/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12908141 seconds)
    (247/286) benchmarking ("sort", Int8, false)...
    done (took 0.200678803 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110772308 seconds)
    (249/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093018822 seconds)
    (250/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104858785 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100997285 seconds)
    (252/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.104191125 seconds)
    (253/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096334445 seconds)
    (254/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11954921 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.182865843 seconds)
    (256/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.105606828 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.137267615 seconds)
    (258/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.103463096 seconds)
    (259/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.090826604 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.122912476 seconds)
    (261/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.156381037 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094949529 seconds)
    (263/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.10623106 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.109833492 seconds)
    (265/286) benchmarking ("sort", Int8, true)...
    done (took 0.22288807 seconds)
    (266/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.149190151 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101556122 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129565186 seconds)
    (269/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099318647 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118915647 seconds)
    (271/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094469261 seconds)
    (272/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.103491653 seconds)
    (273/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09846519 seconds)
    (274/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134170654 seconds)
    (275/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093898971 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.142892563 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082292906 seconds)
    (278/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121414812 seconds)
    (279/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08704293 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105890181 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084976448 seconds)
    (282/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103830081 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09702939 seconds)
    (284/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.112650386 seconds)
    (285/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087631555 seconds)
    (286/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106985535 seconds)
  done (took 40.296029371 seconds)
done (took 41.188968055 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105318084 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155670898 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103700846 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.15213123 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.138870676 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1136025 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.128467863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.110534179 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.138389217 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.117222215 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.140184102 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095726755 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.137901889 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.132517378 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.112873523 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157191896 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115297114 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.133845041 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.104276601 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129199684 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.10404697 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.130516593 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.106779131 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.120920446 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.112377673 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.135902317 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.107707149 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.136924994 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.103342308 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.129456033 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100195057 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.130959748 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093561819 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132026316 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09921483 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.125034311 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106703263 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.129964693 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.102799945 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.129975803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.108836013 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.130592819 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.103798068 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.13464913 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.103028852 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128129404 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103240266 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.141959472 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.158487182 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105343712 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.108102278 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.135965673 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.130983303 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.102395693 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12435343 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103211868 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.13268763 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134191127 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.129309975 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105041149 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.151384299 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100843194 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117166385 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09497706 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11765744 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101198562 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126059569 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093763262 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125289724 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096981361 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113376994 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094216006 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116102983 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092341659 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.125391739 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101844298 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113137513 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095309974 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.1210941 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095917825 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117661032 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092649528 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122762248 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099684327 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09431979 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111152395 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092996649 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.123046795 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093788006 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122107971 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097050604 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122376739 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096806513 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128262283 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094451764 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.122938485 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118602416 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094893675 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120675251 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095346483 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.115652176 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096261099 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100816665 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115724961 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095732012 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12779996 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092793489 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121738867 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094198966 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118081157 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.132007352 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101247538 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119096198 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095054023 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091073014 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122677268 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116646345 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092353966 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115822299 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095709092 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120124919 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09564383 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092609762 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121051967 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129803174 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089649784 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116952003 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092769703 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094737686 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122571058 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095054566 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.115969055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094560924 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.114578512 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093331099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116578624 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098899683 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117476432 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094896496 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118679366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095307893 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.119819655 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096087229 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119707699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092745421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.114272824 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097420571 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12315041 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.100740282 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.123143762 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097616302 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.121951504 seconds)
done (took 18.182827559 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100521211 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188379311 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151367717 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154659013 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130026344 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136923466 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128370731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149488807 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.103272904 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146409787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150852656 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11654878 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.154455266 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130205713 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114057658 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125340663 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.1000706 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136285814 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.158136897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145413598 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127014501 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126781261 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148059888 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144041222 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101166798 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154758628 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103807858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125188186 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129102222 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110131354 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1434085 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104107635 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126977171 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136345697 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108007706 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123471681 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113856994 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120796488 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100990704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125783732 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140046164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113080568 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122347764 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132254755 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.101834366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129023189 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.100645002 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12470237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101462282 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120463736 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105419136 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14576948 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123658102 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103966254 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127420462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126418572 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103079484 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129131154 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.103048968 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12948596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125165586 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104222761 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130631074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142742925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100863983 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127750965 seconds)
  done (took 9.243388104 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115721948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153044445 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132809262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1085889 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129462959 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090767514 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116177153 seconds)
  done (took 1.792953549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092620899 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145999606 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126550142 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150498313 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142137149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134592286 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143782931 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095116222 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140615589 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126937865 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121115067 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173303004 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118084805 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104535424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151627041 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092793785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.152790304 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092542427 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126223662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14928339 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098184285 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139621493 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105040413 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119591789 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13799835 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094063639 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18361244 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103756684 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116375473 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09810525 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122464217 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187768643 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140129715 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.104827814 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11834307 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120954685 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145866499 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136184134 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.123937464 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.127518126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.120363912 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.136712866 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.104366997 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124006759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100018515 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.134547677 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13718995 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.105920584 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124350202 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.123006181 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130594682 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115276985 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.128596825 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100519598 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128939603 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098864103 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131536992 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122325488 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121937148 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129959126 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120246227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.15127407 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.153438291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130923491 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148067598 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148231313 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126239381 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.134945028 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108518119 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13238824 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.126699277 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.133978938 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112093611 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.148822387 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139699192 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.129956577 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.158070257 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109426344 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.141476731 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098982248 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123570519 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095253786 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136517936 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100301267 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127262784 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117242229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139657844 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.133337718 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.101798519 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141147119 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097491537 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.132657494 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.106958919 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.125804396 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132017731 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122578391 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129529035 seconds)
  done (took 13.189769618 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095201267 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095169784 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125621619 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.096872817 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.123580492 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096060364 seconds)
  done (took 1.58950147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125766569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123056569 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109756205 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125778909 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162903642 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.119510529 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.15857562 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115534244 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.148923273 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136657439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.119475146 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.153547425 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.163293027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.112551309 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.147594953 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.104008912 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144186768 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100154411 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.135394872 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098361091 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137361967 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129453135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099823384 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141500775 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105623763 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129612912 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101008028 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136347911 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107648303 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130030372 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126476922 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.105384807 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127509955 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.105547607 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143479848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130164648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099730142 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12981673 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105225452 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130017285 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.127227156 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136665991 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.115406313 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132260428 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105838239 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12825287 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129902151 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102970456 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.145467679 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.109746399 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.13807731 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.110140288 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.136946006 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.109945806 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13164021 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106485145 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130504858 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.145750434 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.109022096 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128903954 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099438106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127832775 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104675281 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130706631 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101550601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.13129413 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126385399 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098475802 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098122851 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128032226 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129671314 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100456908 seconds)
  done (took 9.851288057 seconds)
done (took 36.610665832 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686315158 seconds)
  done (took 1.645252128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841701709 seconds)
  done (took 1.801236773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.00511961 seconds)
  done (took 18.990427148 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507369745 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603425454 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00240573 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169011881 seconds)
  done (took 3.238608802 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970021652 seconds)
  done (took 1.95105905 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.311631884 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.277871429 seconds)
  done (took 1.557436579 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.803658228 seconds)
  done (took 1.77220153 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.55340358 seconds)
  done (took 2.527749861 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363506222 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205170176 seconds)
  done (took 1.546390979 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.587079386 seconds)
  done (took 1.560192914 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.797501519 seconds)
  done (took 15.775955729 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245246546 seconds)
  done (took 1.233134077 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304644256 seconds)
  done (took 1.280805194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.694130405 seconds)
  done (took 4.671690321 seconds)
done (took 60.520524991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103706976 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132516652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107084786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12904228 seconds)
  done (took 1.436729435 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111013592 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128657066 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107948001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127623365 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110537711 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.130706404 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101134185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.187854985 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.137073091 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.109580671 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130329026 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101465007 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.132345104 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100452695 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12633122 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104544895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132618834 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104018193 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131383911 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128909009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.102007179 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128770322 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104193099 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12745473 seconds)
  done (took 3.886887382 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104399071 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098294311 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.12778883 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097511452 seconds)
  done (took 1.409393741 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107589037 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139930333 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114207339 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133141294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114912935 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.143626011 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124548192 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101016605 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125618453 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109520256 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123717343 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.118189578 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140238901 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094430669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.138016406 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.097669481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123892337 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142198519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.109636172 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.137497765 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100640403 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134668198 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109336969 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141214641 seconds)
  done (took 3.91537446 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.180626496 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.137384558 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147184839 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.104614769 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174103618 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149934943 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096989543 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.151387468 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.098658021 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150790782 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127491254 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.149680444 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140557787 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127257332 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098901112 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132887486 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.138978841 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.118420036 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.125597709 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.110700609 seconds)
  done (took 3.649101437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103931612 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124719723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095408218 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097281855 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.133211396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10027299 seconds)
  done (took 1.647050555 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093051201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093346504 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11874867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092531882 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124911694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093017076 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117767006 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095466077 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093524514 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122008607 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094410466 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.1205895 seconds)
  done (took 2.250757611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.392243169 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.128103087 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123889883 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100331803 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12937585 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097758222 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135797126 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096184822 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.160946857 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101380478 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12602076 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.102611177 seconds)
  done (took 2.686747464 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221762677 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107565859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274396388 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.440659002 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173750668 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182791256 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.34025485 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172414306 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221047309 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12142265 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205096511 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169030137 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162229486 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192334718 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153161032 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.189654374 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193167221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215902118 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165784824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219921834 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179911066 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177614128 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186962756 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158857306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14589695 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169091475 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101957172 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133326402 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183081558 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179648578 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185231382 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155722943 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147097777 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214241807 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225532266 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225233987 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.375952486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13842989 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198469385 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189101499 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263375872 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120699999 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228235031 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166294277 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115770259 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191401216 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171919772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.193920752 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141758646 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151705837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193312766 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182940035 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186391129 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142669608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378920191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133713885 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159531553 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201866742 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224600674 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19733911 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174878613 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103147772 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257621047 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194036962 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185423138 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152647141 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173847279 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104452874 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212415474 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201112303 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188386058 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179102885 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190318961 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139826647 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171013993 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176025961 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162723544 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186085241 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168546035 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100821104 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160611278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144232248 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106824209 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192270441 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129133781 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210328345 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141550471 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.277273031 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22473101 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165612884 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169341831 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175161511 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175325283 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154073743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098762745 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154169543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.168450832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166954521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111673699 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166641282 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154329995 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134601086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134175637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130369298 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166854109 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112890643 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20345023 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145739601 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137084621 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17215141 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15773333 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165631731 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179401557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194203416 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111486672 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139920628 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200787393 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165870885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143286321 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181760362 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192838103 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17080921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117179566 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205287619 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202776901 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122188311 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225912057 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121183532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140984388 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157980581 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167839909 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163614967 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134255065 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136891844 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162408756 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201090443 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134063842 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115612857 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184652322 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136303105 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13406995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124283442 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143044177 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149983847 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12829511 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148698433 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16406724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16897161 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160656279 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167189772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148192811 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202739921 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14107706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.140197041 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157854636 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125840724 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188578343 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192639782 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108139508 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221881044 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177458713 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267370514 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144195061 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140010077 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189819352 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13746285 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098701518 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176908234 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169426548 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172332599 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191741807 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272519922 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177935902 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161211025 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159014838 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176009656 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182133851 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163801031 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.12407263 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170311193 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175962114 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128238492 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102339259 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137889283 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151670274 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109849881 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142459676 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190831002 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171822346 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265607286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171278743 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149142255 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188054236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104906832 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173657576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181469496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148772191 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191089631 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19107346 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175361316 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151254662 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183393043 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098338801 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135097157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14237581 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173276599 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111847645 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141813188 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149662572 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188865235 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184358083 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1571408 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245742071 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202694153 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198910785 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101528518 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172439858 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178642521 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166856315 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170944982 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137579092 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.171854096 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185161255 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150937772 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199957917 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171628156 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177423126 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207206303 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168330644 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13850172 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128372503 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204449312 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119002826 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168952324 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154966583 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141770804 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133509999 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143382331 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133493686 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190372209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15322458 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188240871 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163837007 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181230219 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132245366 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121499679 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168306379 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15646066 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095403542 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206224322 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194751468 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15045142 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166045222 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182929268 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108853941 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.391874392 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198470098 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194336634 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143753891 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121214849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170562851 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166369422 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172898286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188879819 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151439788 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188108901 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170417855 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14961452 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112939281 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155742424 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158686883 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158395866 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1113372 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160369274 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153498741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19435835 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154956969 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166237523 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17313967 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125714207 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.165874354 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152958292 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209107389 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167476103 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18579739 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163720761 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174927973 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196268729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102087895 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135838544 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133850971 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190373371 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111488023 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167455883 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.256711745 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25391441 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165459513 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178421114 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146710526 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101496821 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17020151 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158036253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275266832 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152482696 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114505551 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230623535 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130579287 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138187374 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171678177 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345318394 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150369886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181291576 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.128136508 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.326855203 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131945067 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110466855 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169819961 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18041691 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145413528 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188931002 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17506654 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12418077 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168661213 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145406787 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235351347 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256323358 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179905171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187258753 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151036304 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166900023 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175252213 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185099545 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150653274 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124242065 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171152603 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192846304 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192259169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143858212 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177451438 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175766829 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168210326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18464801 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113369219 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227940571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11263931 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17580605 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148334898 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10194388 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168846599 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.257088266 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141383981 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18600517 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16646005 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110704726 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134026894 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158613381 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138513166 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149493971 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137510284 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190398298 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137685144 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142279178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188493461 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138673904 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162391693 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123853506 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145679164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151397547 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153169626 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113122023 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183092166 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196790821 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141335637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187670112 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186388877 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174346946 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169481774 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15236388 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639952862 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135949053 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19238511 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155290524 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195791853 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127686944 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178212272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16871649 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158501296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17740901 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158983059 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226825891 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177866775 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170484421 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111433956 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155420055 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155190922 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109197364 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159118298 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172599721 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149256051 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144472619 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.138191892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154195189 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153010167 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145912676 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191849963 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126240725 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221024968 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192024716 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116122934 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175846912 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18243447 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13830163 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168212537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182524247 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152975313 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159190696 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.111934684 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.143726362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190320548 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103105851 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172024408 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171359323 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175354369 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173667342 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141289859 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139736193 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149737929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16991085 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13888168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161287899 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136812512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137756146 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134454607 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134281661 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167679698 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166486806 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134205179 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152664255 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186932346 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133548804 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111330841 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368437764 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168576402 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204324499 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161205668 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145158009 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122638805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16317992 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161726638 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171102415 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106754355 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143087064 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139408573 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186649002 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133674566 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165326992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203111382 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172027115 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197409048 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.143884965 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274057179 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116896512 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16355063 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137828852 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107003749 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150651788 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142389406 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151422853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233170168 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186833685 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160872571 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152048265 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105343825 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13515809 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110933504 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169379992 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163569886 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167898291 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151808874 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.094876542 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152935996 seconds)
  done (took 81.812982948 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195525015 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.157593056 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155779858 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204283587 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17287931 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249485818 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212642378 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232925008 seconds)
  done (took 2.654183052 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106214405 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164463416 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145532939 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132425494 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.099586141 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.337195195 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146855643 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.130341995 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.153691221 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140367064 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.097972287 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.583122902 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.105652313 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131712929 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121252839 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096169442 seconds)
  done (took 3.761875765 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.335492164 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.554033371 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.103074025 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255387322 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235309248 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.159774171 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.773626222 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192912097 seconds)
  done (took 12.692190957 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133063893 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.157874384 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.157175807 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1820178 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.138792241 seconds)
  done (took 1.854481478 seconds)
done (took 124.632441521 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105003799 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.136051156 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103849697 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13722899 seconds)
  done (took 1.55465767 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115193358 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093754127 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.12279094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086437496 seconds)
  done (took 1.498948179 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449184255 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.122832773 seconds)
  done (took 1.697746486 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12534971 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140450208 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.114436341 seconds)
  done (took 1.462610016 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112120844 seconds)
  done (took 1.199894242 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106043858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105592491 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149081174 seconds)
  done (took 1.447724743 seconds)
done (took 9.957403195 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120898164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.44859312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394564828 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144338842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.739844055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386653347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034301594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166133028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146596795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127770609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113753653 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.708268358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043314282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350558482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.041153998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.351222187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700780772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128797804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1307181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098870556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013625414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095992226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099925886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128853151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697156251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429646661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096586518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393524758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123779768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101326816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413656573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097032484 seconds)
  done (took 17.138248237 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103476972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187844824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106445505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128266849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100400606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12789854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106778419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140066388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19169695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099696313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143929991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099892681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131553276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0971634 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146652196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098654278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128508496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098710099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133101376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099387066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145939601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098517948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129849171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100574257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127524054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108915407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126563395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110259001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127360298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101530151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131381896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097552037 seconds)
  done (took 4.970136458 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152805239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199677854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137047383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13319603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181640868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130693632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.183732078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171079164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195094122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130668255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115042984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133860981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.136983297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129257197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117460262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128846549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099764383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128607708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104626624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129318146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144988595 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097301782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099206891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128900918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097715592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142590508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098185952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140221421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126470251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102520734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13148037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098259993 seconds)
  done (took 5.347641661 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.109342509 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135131083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115761326 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148739405 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105590266 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134670178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108033342 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128745332 seconds)
  done (took 2.088742018 seconds)
done (took 30.631677663 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118131372 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.107209596 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143638168 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114551442 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.138005481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.122599662 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126751325 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108596917 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139874602 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105807616 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.146507513 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097602199 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12989877 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09932483 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139984769 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105716881 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.144700292 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.109280736 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.151831353 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.119257191 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.131814919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.112984137 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110734017 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.153256461 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.151831094 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.12097872 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.154578196 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.111122072 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.133649783 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099969664 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.146671352 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.126335497 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.135990484 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118326993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.139628687 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107665271 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.132594963 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103404927 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.148461586 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.11352599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.139472465 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.112904521 seconds)
  done (took 6.367566447 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.126120851 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.1760383 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.104146221 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.131017444 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.09916631 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.170402968 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.168715996 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.104662371 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127452744 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123336941 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.156439968 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.103000818 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.131464443 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.100982548 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.129278374 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099196674 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.150250402 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.125624824 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.162053197 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.132554628 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.179431528 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.164678575 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.135052211 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.159246221 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.173965673 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.168146986 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.128758513 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.170266259 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.130820037 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.135345051 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.160864582 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.136111248 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.133414159 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.099961859 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.171133181 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.139725961 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.164073998 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.172402722 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.16494585 seconds)
  done (took 6.620672157 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.116715492 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143398554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12260012 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195732326 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168799565 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.110988831 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140040101 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115837996 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.144977849 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099784037 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.109434444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159980506 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146252461 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107514101 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.137987038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112341235 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148007235 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100823595 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135830661 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117431544 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145814402 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110956106 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14315687 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108959 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.129160252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107199069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.13132797 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11434434 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139468186 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107042078 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131943836 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103214326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.136565799 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111405366 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.136444964 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.105490385 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152174802 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107772732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13733293 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131697616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140282528 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102478939 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151673443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174645261 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103839658 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135275331 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106654711 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142018277 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09855114 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145919347 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108811505 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101916161 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144736763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127146243 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098362726 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145642014 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104214793 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103385887 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138964918 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105882356 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.148001195 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.134051958 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114960025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.10492181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134338126 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098308325 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127778683 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103380577 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149935412 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106665181 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.169027788 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.134772325 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104290427 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.136908802 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105035496 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138425274 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098620096 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112409374 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143283397 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106022278 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137777428 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101550788 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132374649 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115954071 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143582929 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137665905 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104805088 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135964075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102721599 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12835417 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112820006 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134675049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102459445 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116200255 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.133443698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101364394 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134542549 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104087191 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127527722 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111365906 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133252688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098575199 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138564081 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098790758 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133527065 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107713167 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132929355 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.099477458 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.136922836 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105871851 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.128933568 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.10185751 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.135121729 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.102892977 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142015171 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.108410601 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133443449 seconds)
  done (took 15.642975545 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.249322004 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.230413292 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204578007 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315939834 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154878008 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.127678628 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.229788885 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184523968 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.1338288 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.138449699 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185060702 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.199237265 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.192742399 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.205628209 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.196686884 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.136070041 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119169633 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.18306243 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232494569 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.31373219 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118117047 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.146747592 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172970805 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17077147 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.118083395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.148507665 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.152702198 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.121339592 seconds)
  done (took 6.197743142 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11810585 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165651441 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106592044 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.156297803 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157593464 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.102604549 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.139349676 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103418341 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145996205 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.115300309 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.132383416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.107442417 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.137226711 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.111639142 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.134484971 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.111829017 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.144740633 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.109621025 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.136259381 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.107213842 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.146559807 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116755061 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.14052538 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10144371 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147248807 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132453505 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10175192 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152948713 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.138621362 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124788409 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127217318 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108254197 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144113326 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10011879 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105001691 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.134911308 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101033016 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.132375518 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.10199251 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.129272074 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098953094 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.124088908 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103949835 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146383675 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108592592 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131367793 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106944226 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.137421242 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.108157363 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.127258936 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104031719 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101637626 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.135433124 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111270368 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.134682775 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.619822334 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.137616344 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101521807 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.139064727 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.101884904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127039558 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100297133 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137271473 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103286359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138423199 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105825315 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13117236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.102438859 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.139751969 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107531417 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.136236715 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.111767779 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.127926658 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101448868 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141762987 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110317975 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133706246 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.102685448 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134953218 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099405022 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.091161219 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.132183376 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.089550427 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13903193 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102690684 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.135451191 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102664818 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136354087 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.115836194 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.141939615 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107405355 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.134540987 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102654074 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.137486205 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097487437 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.13739514 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.117502973 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152491895 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098343758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12981421 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114767542 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132405626 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098360343 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.126633184 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112037635 seconds)
  done (took 14.420049212 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142816047 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.186100301 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137842441 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121711935 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.169585577 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.1773035 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.111542786 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.141092072 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.105519087 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119983957 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138750745 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109466105 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.136523271 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114773257 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.177159405 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.146671012 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.107034655 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.149944246 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110527988 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.188066098 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15592166 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143685444 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.175823842 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.140723068 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.107495587 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.174200353 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.17825891 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.119799388 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.149459985 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148982334 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.149426469 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.180929452 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.177223122 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.111508632 seconds)
  done (took 6.042613214 seconds)
done (took 56.385111271 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.240768643 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426015415 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.20443283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.202152564 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.266743077 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.246139111 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195200011 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.390093749 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.973415896 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.200645875 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.199461025 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.19826957 seconds)
done (took 27.862254652 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.244105812 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365338226 seconds)
    (2/2) benchmarking "String"...
    done (took 1.541622926 seconds)
  done (took 4.026429888 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.209101393 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.207893925 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447563127 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.220858069 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.201243979 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.218204499 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212581979 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.221361379 seconds)
  done (took 15.853528156 seconds)
done (took 25.450317428 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.293111656 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.400014872 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.455022994 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.22059104 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.210316873 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.204749973 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.220196362 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.248945581 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.204286447 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.212016525 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.202431344 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.47401418 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.230411993 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.588873867 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.20441692 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.211078676 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223551716 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.433361537 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.203982874 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.22085046 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.210078827 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.19860121 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.219188917 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.222902307 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.216630346 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.209344691 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.24771993 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212368153 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.418404862 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.219123641 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.248016418 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.207172386 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249084289 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.204019223 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.331769824 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.240629973 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.387758145 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.2136306 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.193941537 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.207656613 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.408266899 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.633177201 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.217402385 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.208948803 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.214857364 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.293807535 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.19418911 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.933705017 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214828962 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.203645416 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.278583949 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.582261835 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.20976411 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.218660847 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.218095218 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.461771795 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.205253805 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.251504133 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.235155803 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.207648517 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.209163361 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.204976151 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.253229645 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.216927779 seconds)
  done (took 143.921360784 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.211556031 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.213272271 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.216033148 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.233756091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.214748192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.215692497 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.212547399 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.212210515 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.215491905 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.240344388 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.216922623 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.216697814 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21614832 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.217035165 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212500326 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.233550534 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.213748091 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.225138963 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.217658348 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.215895306 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.223001067 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.216027729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.22244411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.206687631 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.224954105 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.299109425 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.269870894 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.225564049 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.216837037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.211777993 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.21150989 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.221892991 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857691211 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071717826 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.222280654 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.246814787 seconds)
  done (took 80.646129802 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208368072 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211254912 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214050492 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247661476 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216848635 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819455569 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.821154556 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.950553551 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.497200823 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.664401723 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49756826 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202744176 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30901511 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220286632 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.216852295 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215798222 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226950734 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235275063 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207703782 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212231694 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819985493 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.2288537 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.357232592 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.398298677 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22433203 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247535359 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615495159 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20793864 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248209494 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.554590897 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261131032 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207548874 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.640469 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.603091865 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324406165 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209456137 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246724781 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.219116653 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502154553 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206799874 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216080701 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.221908825 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931412002 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220256902 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.819115245 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219516139 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178054734 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210012166 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214304082 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.31210267 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.238397554 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.954772352 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233665969 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213447641 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219047596 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.216171617 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216367733 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247147843 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.268491903 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330724816 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216774594 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217811593 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24795996 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215143974 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.214884967 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.369499078 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205695166 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.41436964 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270858147 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311553265 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795710862 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212792844 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309354308 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326470297 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202889498 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211365045 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211853974 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211597067 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325266352 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203407861 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.629740785 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.380001911 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219624832 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.609412871 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313136798 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204645056 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6150836 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214525997 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21201591 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957327911 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304112336 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204715458 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214483974 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.212891 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214684224 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.633430036 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790577499 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468249043 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216188065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.481440933 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.216758866 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.643352218 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762505319 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.91160262 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217468941 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327522843 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383396431 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22204083 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214660684 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.613101684 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214809672 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.27211369 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.215573945 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613473063 seconds)
  done (took 367.156523747 seconds)
done (took 592.847352299 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.957470678 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.906013223 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.037898662 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.924326215 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.890520858 seconds)
  done (took 10.841885243 seconds)
done (took 11.96521065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41192973 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411730318 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278038134 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411401099 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25784397 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432926625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394084162 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236444218 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322308698 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300101996 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322273783 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273448935 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252989271 seconds)
  done (took 18.430440566 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562715463 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213195054 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297487621 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591576517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256524023 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55084081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419403354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.236364481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424263514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235191972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230522504 seconds)
  done (took 18.147128475 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572539312 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.218248055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300512479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542479578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259528905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57509869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430795606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.235344897 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435044019 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236610195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230163285 seconds)
  done (took 18.16630348 seconds)
done (took 55.874190911 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258914711 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.385531968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243204288 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231114917 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224702731 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22890885 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230583276 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.226692402 seconds)
  done (took 11.157170574 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229360114 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227821191 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.223857197 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.226742416 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.226430915 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.221468055 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.223777171 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225143968 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228925513 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223392025 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226413632 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227867644 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22476585 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225001595 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227513083 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226470917 seconds)
  done (took 20.745370114 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.228192022 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22529692 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.223440903 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225470715 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.225378338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224437273 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.229857804 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226077183 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227238626 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22465152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.227406665 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227013613 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.225527431 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22483956 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226256569 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.224910532 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227675746 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226021571 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230323092 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226669583 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225218727 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226445316 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225992059 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223994509 seconds)
  done (took 30.560723017 seconds)
done (took 63.591436192 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.220471099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.212297821 seconds)
  done (took 5.560800636 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.286014012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.286842095 seconds)
  done (took 3.706123371 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.226986253 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.228377577 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228773764 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22655995 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227604824 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226797962 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228144638 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229876924 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.229687705 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.228396545 seconds)
  done (took 13.410478235 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228545767 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.229693467 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227338235 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226932939 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229400997 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.225964066 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227515824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228985971 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22794556 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.224892009 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225517251 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225962939 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231894276 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.22662335 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.229029801 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228351093 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.227140394 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22574463 seconds)
  done (took 23.228510351 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.241481382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.249817637 seconds)
  done (took 3.619993614 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.354795134 seconds)
    (2/7) benchmarking "second"...
    done (took 1.268454144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.337924386 seconds)
    (4/7) benchmarking "year"...
    done (took 1.323367927 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.267439318 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.245975039 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.271522803 seconds)
  done (took 10.200594662 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229706057 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.427214004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.539247857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.850791782 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230481483 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236168056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.113665394 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232139228 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238038921 seconds)
  done (took 14.228751859 seconds)
done (took 75.088310795 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.218640702 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.251732574 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.242195284 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234246229 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.562822917 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.235809574 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.221258001 seconds)
done (took 16.097311366 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.213701434 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.216548146 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.223224244 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.22979467 seconds)
  done (took 10.012458691 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.22061258 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541457447 seconds)
  done (took 4.893267226 seconds)
done (took 16.03767207 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229380944 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22812933 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23054074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.227370185 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231694038 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.229235778 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228482853 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232275089 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230733232 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.231978536 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.231379342 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233343657 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228889845 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229423536 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230758944 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.228773947 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231859444 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228364905 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228003501 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.229254268 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230484886 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232218951 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228598159 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229198301 seconds)
  done (took 30.652552339 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231137962 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229817591 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.231396479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231904431 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.228325682 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23137132 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230037278 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228487719 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.233676483 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230510859 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229462723 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230299767 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.233077961 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.230883572 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231869479 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228387936 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.235620713 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229004002 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231200963 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229684443 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23354387 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231055696 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2294454 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231753563 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23065448 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22852022 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231483031 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229724023 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233512782 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231090326 seconds)
  done (took 38.060496152 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23712501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244061825 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233593251 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231961629 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.234038948 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.234297239 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231659073 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232747979 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233259086 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.235950403 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230773232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232384849 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.234084499 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233230072 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233218628 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233203871 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232695181 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.235480093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.230513422 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23193711 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230929761 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233848123 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235668192 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232911596 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.235011507 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234368585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.236667442 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234001111 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233107282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.233620771 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233717067 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233164789 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233051543 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233383191 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235014725 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231300433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237612161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242007474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232824952 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233434155 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234840714 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233573542 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238048618 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23302991 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232195568 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.231815029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232762804 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233459422 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233779906 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231642227 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236259657 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231236579 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231776587 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233062317 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23206114 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235146241 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233323102 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232272948 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235052112 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233803164 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232317259 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232046221 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230736343 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231749091 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233093954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233312569 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.23297521 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232039024 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233920638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233719615 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.233244726 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234103887 seconds)
  done (took 89.961890203 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230472751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233014868 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23029831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230122635 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229754039 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233016279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231689365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234684981 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231636667 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234422722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234802282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231234063 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231010145 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234460438 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235927469 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231406622 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233581372 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232578928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.233467068 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235245867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233766243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231297224 seconds)
  done (took 28.252150665 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234660965 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237794154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232239329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236481645 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23344667 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234235444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234706841 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235517629 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234680065 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231273063 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233299812 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237713327 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235038084 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232965364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231350747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233296988 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233868 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234492976 seconds)
  done (took 23.352067936 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233088454 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233928164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236076271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23476081 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234816721 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235516118 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232971248 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236586624 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235714521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233375225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235674414 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235423978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236712326 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235480519 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236184598 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233040099 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236701384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236267534 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238248205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233454758 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233359723 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237418375 seconds)
  done (took 28.310832749 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233877223 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236218782 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234092998 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234269065 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235131928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236483752 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.23845857 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23448116 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238242337 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237264315 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234889925 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.237732102 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235370168 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233759413 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235607532 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234894581 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23773812 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233799101 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236321166 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234487036 seconds)
  done (took 25.852292297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238317829 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23886851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238214277 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240666084 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242258259 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240978166 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240396612 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239588694 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240819855 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238308418 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240334055 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236776703 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237806172 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239712475 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239900109 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238494162 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240186683 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237911926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237057312 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238527562 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238113476 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239905603 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241177126 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237572068 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238238526 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23961035 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238451088 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243127401 seconds)
  done (took 35.840322008 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241580157 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237292152 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233764638 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23672033 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236776902 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235283506 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238955772 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235655062 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240187765 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234592349 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.23897354 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239830788 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239340192 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240165931 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237292975 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239470762 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242271562 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.236765777 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235043668 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235062405 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240719668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239406697 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239754192 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236416225 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239147115 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237580845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234723621 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237387349 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238412366 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236412978 seconds)
  done (took 38.276383474 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.277997825 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278478056 seconds)
  done (took 3.694855282 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.236396757 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23843128 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235883833 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237742077 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233369065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238834851 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23992984 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236968465 seconds)
  done (took 11.034848756 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235174865 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240673619 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239965927 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240996093 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239339215 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240152291 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246924464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260137624 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23901213 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240725525 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248644901 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247366601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241671269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239452911 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.24320416 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242608339 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240734163 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240327786 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239943216 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239732872 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24026068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243956119 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24482182 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240811848 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241461037 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253241646 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244295444 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.24297681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240915621 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245251419 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23963654 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241526456 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241380145 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240132247 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243352355 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241824814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25104073 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261577478 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247472451 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242191582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243329415 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237597152 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238760402 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242882262 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24287481 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240990571 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239862244 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240917341 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241643266 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245394328 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24859231 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24243708 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2418843 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246350058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243176384 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24940483 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.262108579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244759789 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.251603798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25241583 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254211549 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268069877 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244769865 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.244508674 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252927994 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267914209 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249312733 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260387602 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24130578 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24517997 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252079492 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257943174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271708504 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246221252 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240132554 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242928971 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243040885 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245764227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251745715 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267482928 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244026073 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24137388 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254936644 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266940707 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.245203611 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.244541427 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24662012 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244847114 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.246767346 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257086527 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264437328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244052453 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243585669 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245255191 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245319766 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246828714 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244191601 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244443074 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244533324 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245442127 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245478417 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25109697 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.256048009 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246249724 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247348291 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25120739 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246921869 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245729512 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.252462367 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247205159 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247342837 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.248555978 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252533802 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244288967 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251719213 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255457238 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247571315 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247421 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.247716561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247066064 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259039654 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272070281 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.250268314 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248917358 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25256263 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257284928 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248396832 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248529566 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25078489 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246288974 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246732605 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250018705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248041528 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24942748 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248497757 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247462326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247098131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248233963 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24816363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248811489 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250873258 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245841764 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.251593331 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252412354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251483043 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.25193216 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255508949 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249246427 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251809972 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25027181 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247963175 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25165001 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251423758 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249515376 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248558011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250328713 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249601555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247703168 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251363796 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250212146 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251633487 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.250410502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252702349 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24915624 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251556475 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249978086 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.248504407 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251959515 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251152038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248607781 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.251019825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248793985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.254076608 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259838616 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.252544556 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25066084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252969683 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252915166 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251635946 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252174135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254132467 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260714615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25247066 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25830533 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24907332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251580555 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252746991 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250962566 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250685534 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252424755 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255251167 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262055965 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267583781 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27740976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.255663208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260659997 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254328047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258969452 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255883516 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251538263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254640711 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251889173 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250315446 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2524811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255686256 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253673799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.252280716 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255598561 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256578077 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252859895 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255191068 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252116899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253465114 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252412589 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252591403 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25386915 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253258081 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251835938 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252500986 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.251992608 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256818715 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.254805443 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260804154 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.253051934 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256499555 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255410182 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.254384973 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252179008 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25594772 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256572796 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254597294 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261706822 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27284911 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252482935 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260202929 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271484478 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255148435 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257020998 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25606127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252914497 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.258749453 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.262953862 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255534356 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254742517 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256366636 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25147706 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256970935 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260938909 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.251188153 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256486743 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259915769 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.2559767 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254767358 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257847729 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260857826 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.256800388 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258902805 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259190463 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257566946 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25550166 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256930217 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258003715 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257163715 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26064343 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267045104 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260344384 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256899971 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.260805802 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.258065918 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261606232 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.258431308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258580432 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257339246 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272885985 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286055855 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26544721 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275250946 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260946893 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263867184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.279659298 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263948079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258107895 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26032884 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256716737 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257809611 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256687986 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25811581 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260041479 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258433563 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258584492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263897999 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258860081 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257366711 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.26059131 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260027258 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257403464 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258604179 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259190572 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261164516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260235648 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258589196 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259611078 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267143965 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275368868 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258544868 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259187748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258942219 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259721889 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.260788199 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257835348 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26262686 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26943652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.263909093 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27157296 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261852052 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271152312 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261673487 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262402285 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265642568 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259826307 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259024037 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261829774 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256994527 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26473705 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278237978 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264251938 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260655651 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261571305 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262190957 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.263268001 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260962319 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263530693 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262787918 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269266948 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277442205 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.26817251 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262115492 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26014902 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261667487 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263383779 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261974417 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266614673 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263230039 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26389115 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262889921 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262929756 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263651492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264412169 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26397215 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261196172 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263774654 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271130231 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284197526 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263754064 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266214203 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269300097 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255496291 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266740041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279165887 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258899904 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262584938 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26328949 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.265210184 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264233087 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264457772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265539154 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261512007 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265082024 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26396158 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265454244 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262419059 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263797045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262421402 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272864355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289258446 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26581493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269912348 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263301582 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262342996 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267849669 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264515853 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260873611 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268740546 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278166569 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273921155 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260894903 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.259794361 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266071152 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270193191 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264577735 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264495815 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263642143 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262914145 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.2638131 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265412422 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268131291 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265902652 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264445025 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266894278 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267142804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274920217 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263056351 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266607563 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266083999 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.269370202 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.264458652 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264550948 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263097227 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265052745 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26460835 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267905527 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265057641 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26653642 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262242904 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261004037 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265162962 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264679113 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26240225 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265435438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263593106 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257967887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267611284 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26635374 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265010031 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26675538 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26653495 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263697037 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266627666 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270040418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276699125 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265844234 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.262731511 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26018221 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266979969 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263697325 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.2611727 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.268445119 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265481629 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26897265 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270273286 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261159786 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.25911384 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263728495 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270941254 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266462812 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.259441482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.262744156 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2617289 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261141043 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265652797 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265393292 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26920283 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.263991844 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266425195 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267781376 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28412726 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266768444 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267907961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271528316 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268598567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266631 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269274231 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267459521 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272324993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284086873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265128388 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268877965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267626425 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264177404 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269765227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269126602 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26966819 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264029588 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267118562 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26659989 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26640605 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262528079 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260833009 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263515766 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272120544 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27216475 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259936076 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267030605 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268884538 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269002754 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263679942 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265878815 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27061646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266336811 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.26485433 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268222083 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266501481 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262848355 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.268418347 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265230881 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.265659677 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264228001 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271755314 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274771124 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269556117 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263548867 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.262708184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.265550721 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.266480546 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26523613 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.265359806 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26827215 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270145983 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.266382986 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268610736 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270579359 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272533702 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285398168 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283272231 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268554339 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268205358 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269889637 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270486914 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.263201705 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266284914 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.264688648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.268348378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277378757 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273523873 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275262877 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287660865 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.271724191 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267930354 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273555631 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276859984 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271565629 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272997461 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.266748505 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271641947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290755989 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268792518 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283099322 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298510752 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289105182 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272278039 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269157735 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265929555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271237447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269093768 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268780949 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274311529 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27322913 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265779731 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271301734 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276652985 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274165454 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273627969 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26611796 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268900259 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.26875376 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.267159674 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.270047715 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270215559 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273188507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266357604 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268489702 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270335749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285213919 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290319478 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27498667 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268519061 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269954546 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270788165 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.271865818 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279724335 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.278097375 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268790784 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268960965 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268555266 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27349125 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271954352 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270694484 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269708921 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274429433 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271192812 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285617612 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299832499 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278311609 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268198067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27242042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272314007 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274699458 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270070584 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269945356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275335932 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27854125 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275944658 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268646518 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275337851 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278190262 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.27946162 seconds)
  done (took 752.144441482 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272230065 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269240434 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267729883 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269043933 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269014038 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273321263 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271032069 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270348618 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269640019 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276175176 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269562988 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268300167 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276714554 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267025104 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270906667 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272405419 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271717568 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271941413 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272033973 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270441457 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268019832 seconds)
  done (took 27.861209419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272163391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.271048787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271884658 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276795688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27009826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273018725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274230683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271739219 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272976589 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27178475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277556017 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275635834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274019675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273398349 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272080226 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278077553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272419959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274064908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280461044 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275835262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275327245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275318894 seconds)
  done (took 29.205025809 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.272736692 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272118462 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272947115 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.273508203 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2745086 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.273287014 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274610188 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.272820279 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274244463 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.278631998 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280438982 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.280336918 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283022644 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.284227276 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.282147632 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.278492846 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276066186 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279354533 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274927485 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.271075102 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283176075 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.290882653 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.273901833 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.271501281 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.276779855 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276927125 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.277001694 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275849845 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.27428222 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284336484 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.273758485 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281098982 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.276960131 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.27575138 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.281544379 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.279784026 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278292822 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.277470525 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280540337 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290343381 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.299703788 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279780026 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281538387 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.293313345 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.283493207 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280821618 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291357755 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.277751499 seconds)
  done (took 62.573246505 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276475229 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277340669 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.275378366 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275663357 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276598403 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.278280337 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279388225 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280885007 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278434669 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275354812 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.278723116 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274295163 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276959334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278314176 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277814025 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277628905 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280185559 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281426422 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274572798 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275664629 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.275550605 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277033963 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277501723 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281485441 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279271316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276171937 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276991137 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281666422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277223319 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.27967263 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282757678 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279694379 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28134402 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279171487 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277041148 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280157722 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283960711 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.280097024 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279125398 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278183545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283938207 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283907332 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.287724174 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.280429579 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27839726 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.278942706 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278126266 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.277339291 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282953 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282570158 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.279653092 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275256255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281957975 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278238036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281884242 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281397266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.278532415 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.27736274 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284105568 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.281895316 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280113963 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282517506 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280626014 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281001406 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.282266968 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281189362 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281206277 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287459726 seconds)
  done (took 88.185037128 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278931562 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278810341 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28354784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279562813 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278171195 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.280923682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281513687 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.281114126 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281948019 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281509774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285485136 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280742469 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280268177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281466163 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280424688 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281378573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280960874 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280190521 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289409563 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281274717 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285562692 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291198744 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.280189173 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28106148 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282239754 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28012757 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282634271 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282987154 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282696109 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287242385 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281538777 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.283177546 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285689272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28197577 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284303483 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.284421966 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283501218 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284267182 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283597435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284820571 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283821716 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284437595 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283557733 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286504971 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284229282 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286523744 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283956801 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.284177445 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289220636 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292127045 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288058437 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288485887 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288603759 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285419675 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288094504 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286163376 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290581523 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286527659 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293986823 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292357719 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288728562 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294489993 seconds)
  done (took 80.815363526 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283663182 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291957273 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289396212 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29156135 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292453791 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290941451 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294383664 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293044572 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289155727 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.288444819 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291673219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292029501 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290355954 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291517052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289680256 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288517683 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286691349 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28533674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289981305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287373142 seconds)
  done (took 26.984770922 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.284112299 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288925595 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285545497 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286065347 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289904644 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291052353 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290741379 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289553633 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284031525 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292627607 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290006121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289330126 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287841662 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29376363 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295919252 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290852576 seconds)
  done (took 21.817411508 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288303436 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293795629 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289958861 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.2873623 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28804442 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285487555 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286022364 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285715844 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288175766 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291631787 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289794619 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292357233 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29379622 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283140444 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28670925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285442572 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288211728 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.287064257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29199595 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291726974 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289455956 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289327496 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29175163 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293446749 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294578309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.285966783 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289518021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289642097 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284672226 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292673827 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293613264 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289401041 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292735976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.286330863 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29166345 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291301366 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293443956 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290056317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292425508 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293819497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292826631 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291053074 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296094782 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296108617 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291530499 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292385591 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292053009 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289205672 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290265185 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292094759 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292161699 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302846148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292774802 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2952281 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292448168 seconds)
  done (took 72.181039848 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2908452 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292491678 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295056646 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2967017 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292289905 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293661864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29478891 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291034868 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290855652 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297758442 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293703494 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299095079 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287859869 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296443549 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298192184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296578193 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291018798 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28961124 seconds)
  done (took 24.479784939 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28891597 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287882556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.297074979 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294528255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297124937 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297974345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290714298 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291044748 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295317398 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29237072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294169393 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293041917 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292379735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296237738 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292447015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289292558 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29542899 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294507469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292713432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297828431 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297911319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298623814 seconds)
  done (took 29.660260015 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292838548 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.289347135 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.288923093 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.310341763 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.310297874 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290175738 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.290726053 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.292346062 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.315146814 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.344397177 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.338152855 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.310790472 seconds)
  done (took 16.867059941 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294763541 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295720111 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289673223 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295173304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295379186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28974596 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290803201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291060843 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295504039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291410748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290381783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296384672 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293447501 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294365027 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293843043 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296735655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294911357 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295088587 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294093291 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298663604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298114472 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292219145 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291352567 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295808662 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293139861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296377763 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297446112 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296791009 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292055339 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295871625 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295885591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292790473 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298336494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29584675 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300450655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295379762 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292221499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300227676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299018103 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291820045 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294768867 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295148876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294087237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296145036 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294368686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2962255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294306626 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293390016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291152068 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298883879 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296296642 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296595139 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299758364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293784995 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299253562 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297485911 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294587078 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296879135 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297756534 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297667131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295555377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297783886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296793452 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296714514 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295338418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294136975 seconds)
  done (took 86.680264605 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294178802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297869368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294125774 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294576533 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29459041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293590756 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296741998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295964223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29437097 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294612731 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296973247 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294276863 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295218152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295164101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296168302 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296410032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294562657 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296568639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297709735 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299448557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29500634 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295397122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296711471 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297565537 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296505692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296843492 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298178989 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296327166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296751879 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30035002 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296254402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297056892 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297174679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296597388 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29535513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300066755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294187256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295819656 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296728151 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295905609 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295293308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299022831 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296314342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294105267 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296488023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294655897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294843896 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296410828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295863939 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296149713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293769051 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29622141 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295432047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29637462 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2947791 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299429671 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29475286 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296468127 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296480627 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300544083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300829437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295129261 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299080933 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296682933 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2991784 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295826194 seconds)
  done (took 86.757660219 seconds)
done (took 1760.633181715 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460730715 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.412569744 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296111474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.308468208 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29242668 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.292810926 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306682185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295204212 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298239534 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297343217 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299293951 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486449906 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.290195217 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295306984 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29826552 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395221045 seconds)
  done (took 26.528400675 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319577233 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30414322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414396366 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321089003 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325216597 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486337568 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.356188886 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303674115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.470648678 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345398051 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.295308604 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.329039026 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302333036 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.293275399 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321153187 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.485656545 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.545888308 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.296568098 seconds)
  done (took 28.717289453 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.739682483 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328418769 seconds)
  done (took 5.26921243 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322749965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305632782 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305393978 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.305277279 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.295040814 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.295594761 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30445084 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.301660952 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.291353521 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.425695148 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.306716438 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.317674495 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32583585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306293554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303739973 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344792219 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.468817832 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301150459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304335529 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.311316385 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305332689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404085513 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351403347 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306125844 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428008786 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.298547445 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316830145 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313249541 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.426343333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.300517604 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.303960049 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301468868 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306807522 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.226062733 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.800879987 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313603851 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329436203 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.314657722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302747182 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.453786652 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305634485 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313892863 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.298925293 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.811641114 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44329455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423108778 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.315208215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.30691449 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308401007 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.371950307 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307703948 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.308930786 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.353038206 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099225416 seconds)
  done (took 83.732437118 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.356912717 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.295917783 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47903247 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324329213 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295746926 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295758147 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.310919468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.579000274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.361343478 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298688693 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.588051241 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845167505 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315574332 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.339624332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.201154163 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.352524883 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30425753 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.295105726 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.314241495 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.297268343 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849167366 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302291455 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303375893 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.372160628 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338706587 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813149219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.296973133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.303120607 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30670822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.296127359 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805569455 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325611704 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.357068289 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.299108994 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.575126658 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687065123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650457441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.311202925 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3189633 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.300093835 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.307736776 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830674125 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65361197 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.298305914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.317121197 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808979818 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.30202683 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.301602599 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.303510102 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554377426 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303735818 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.304599857 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.298407908 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.300742158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.301371774 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.321972356 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366093852 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826598528 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304817562 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.305092524 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.307873317 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299917452 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307702232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301368881 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.299371545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668082381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.487336843 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30959429 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669712233 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8034656 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.320615596 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88320987 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.3210825 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310749183 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.48401645 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301534939 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.30481289 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818368837 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.322984803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.300467877 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646119281 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.308994623 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.594339659 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319409993 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304499348 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864147507 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.310464895 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.390487752 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303491839 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.322102698 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301097324 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310739235 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583702889 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.330742606 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.302112768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.304019564 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.349334652 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302323182 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.303321001 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.313016148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866291417 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.32416816 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304353617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308510241 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305610923 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.307281124 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.305643222 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306595734 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569889859 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.309439873 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.313725642 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306407029 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301181684 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.319534138 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364421887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.308095304 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.620846876 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308325338 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310285971 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.310716427 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304421482 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351927977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302631387 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312898382 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.183575941 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.645846316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.330114854 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.304873165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30612758 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312674406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305797645 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307289649 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.333807003 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.307804053 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050043074 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325122909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.324883633 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.307033987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321467367 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.306678301 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30738841 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310358976 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600887872 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588545404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.504426963 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.30439598 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307318551 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050260041 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.3538027 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485669563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32949714 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.305013909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.60041343 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521255735 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307159442 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.305246058 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.306078698 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563196024 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.312944019 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632469482 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840546631 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.324946646 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.310472268 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.059950484 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.006596308 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.312323497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.310513475 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.596075367 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.324900859 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305085527 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.310268899 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310649244 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309484869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329554315 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.309231431 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.309163253 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.308625733 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34158603 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501814546 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.329054429 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316423042 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823482759 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316495026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307878663 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313976799 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.30829884 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310085581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35954237 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.313155437 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.340061021 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.311846891 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.31210447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.916724337 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312316568 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.313824294 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500292924 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981768424 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.328344441 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.324677799 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312550976 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.197527363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848194708 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326145158 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626684251 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.315006541 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350338494 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314683288 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390138298 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851091991 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313296462 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308599454 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953103169 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.328833706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.738718922 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.308345136 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323989527 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883815637 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327797856 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.313495176 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313067349 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316078404 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602768536 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.313419793 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.338410683 seconds)
  done (took 491.96412245 seconds)
done (took 637.414566274 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.31359169 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.316129739 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.304447483 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314098363 seconds)
  done (took 10.466141671 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324955022 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323540302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323386811 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.3237694 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.324730278 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323081181 seconds)
  done (took 9.163454526 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.31334704 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319058036 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.317197695 seconds)
  done (took 8.168294023 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527427553 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.330792165 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638230228 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.331018483 seconds)
  done (took 9.046517161 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.32220422 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323661709 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.32819931 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322612185 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329434171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.327216351 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.326979889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323647686 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327500165 seconds)
  done (took 13.149942576 seconds)
done (took 51.210962323 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.301342638 seconds)
    (2/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.329928397 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31887463 seconds)
    (4/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.321064631 seconds)
    (5/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.353605942 seconds)
    (6/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.305471031 seconds)
    (7/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.893033263 seconds)
    (8/286) benchmarking ("sort", BigInt, false)...
    done (took 2.312745879 seconds)
    (9/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.317435473 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.564765193 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.370415688 seconds)
    (12/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.32145409 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343182703 seconds)
    (14/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.301364896 seconds)
    (15/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.323821617 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.30473448 seconds)
    (17/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.301021591 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.56733115 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.315955541 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171322034 seconds)
    (21/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.14503942 seconds)
    (22/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.417899898 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.318863582 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.238982887 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876079683 seconds)
    (26/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.458165102 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.306418892 seconds)
    (28/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45926453 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.415398834 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.305288427 seconds)
    (31/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403722281 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.324352979 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.649647082 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.330651277 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.31222804 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 2.318533364 seconds)
    (37/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.149017105 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.446733071 seconds)
    (39/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.304668401 seconds)
    (40/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.317321216 seconds)
    (41/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.312166586 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.065832858 seconds)
    (43/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.302989056 seconds)
    (44/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.321673691 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.092682435 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.306899139 seconds)
    (47/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.370434799 seconds)
    (48/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.347582035 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 2.31950778 seconds)
    (50/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.327595574 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.435693674 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.304962615 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.210747086 seconds)
    (54/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.334195399 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.580617286 seconds)
    (56/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.309479141 seconds)
    (57/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.319595819 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.378396005 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.085028047 seconds)
    (60/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.908364448 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.437463555 seconds)
    (62/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.682721311 seconds)
    (63/286) benchmarking ("sort", Float32, false)...
    done (took 2.314145244 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.319204574 seconds)
    (65/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.361644863 seconds)
    (66/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443441176 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.306787108 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.847057433 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341090979 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.173552263 seconds)
    (71/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.440428706 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406712679 seconds)
    (73/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.46731021 seconds)
    (74/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.316107986 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.48061508 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352911078 seconds)
    (77/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.065698942 seconds)
    (78/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.30715368 seconds)
    (79/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.310993695 seconds)
    (80/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.61687286 seconds)
    (81/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.3072355 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.076736967 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.316383786 seconds)
    (84/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.536577586 seconds)
    (85/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.183597541 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.304160459 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 2.337053009 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.314862234 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.315443033 seconds)
    (90/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.315931355 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.328005958 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.710455547 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.32122651 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.365124931 seconds)
    (95/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.598577451 seconds)
    (96/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.336760094 seconds)
    (97/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.310442692 seconds)
    (98/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.472947398 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.30644826 seconds)
    (100/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.317214875 seconds)
    (101/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353052936 seconds)
    (102/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.312767026 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.322932617 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.32252151 seconds)
    (105/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.318444498 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.311105823 seconds)
    (107/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366351409 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.722357602 seconds)
    (109/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.927791211 seconds)
    (110/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.310671972 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.543097728 seconds)
    (112/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.352036703 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419790766 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355132403 seconds)
    (115/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.335190902 seconds)
    (116/286) benchmarking ("sort", Float64, true)...
    done (took 2.323257094 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.335002796 seconds)
    (118/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.913252166 seconds)
    (119/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.312042462 seconds)
    (120/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.367245242 seconds)
    (121/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.34313133 seconds)
    (122/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.079145626 seconds)
    (123/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.429583957 seconds)
    (124/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.315137312 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.847653612 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.346735895 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.318938413 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391830859 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602713684 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.31240037 seconds)
    (131/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.307470958 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.089785424 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589527172 seconds)
    (134/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.38739322 seconds)
    (135/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.311348581 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.323765375 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.313130366 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436684606 seconds)
    (139/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.410131931 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.351050617 seconds)
    (141/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.363948322 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.123888601 seconds)
    (143/286) benchmarking ("sort", BigInt, true)...
    done (took 2.326907555 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348198523 seconds)
    (145/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.311931918 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.242448688 seconds)
    (147/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.664783714 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.325222697 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.339631784 seconds)
    (150/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.327675589 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.311954285 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.313411082 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.350117961 seconds)
    (154/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.311916435 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.359779017 seconds)
    (156/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.324310716 seconds)
    (157/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.387698756 seconds)
    (158/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.339523758 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.962921099 seconds)
    (160/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390630894 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.294567643 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.314909675 seconds)
    (163/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.320908597 seconds)
    (164/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.327781693 seconds)
    (165/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.146057676 seconds)
    (166/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.338563191 seconds)
    (167/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.44673204 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.892572304 seconds)
    (169/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.329130216 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.345717773 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.322267212 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.312906747 seconds)
    (173/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.315899317 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.351345116 seconds)
    (175/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.781756906 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.837823355 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.247839938 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.371483784 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.726887876 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.410410985 seconds)
    (181/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.325210147 seconds)
    (182/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.360259286 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.315562675 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.316232231 seconds)
    (185/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.654511853 seconds)
    (186/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.338343706 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 2.327943758 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334548872 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.388390675 seconds)
    (190/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.329728347 seconds)
    (191/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.316174273 seconds)
    (192/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.314187267 seconds)
    (193/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.959683678 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.45551767 seconds)
    (195/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.442471848 seconds)
    (196/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.183558382 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.312725264 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.325722736 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.352690939 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.562726868 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392242242 seconds)
    (202/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.219548888 seconds)
    (203/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.449768427 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.315574123 seconds)
    (205/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.200783513 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.156827469 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.075094972 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.97848241 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.354051567 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.321909414 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350906258 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231117559 seconds)
    (213/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.330042882 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.658693236 seconds)
    (215/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.352766436 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373358443 seconds)
    (217/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.510552613 seconds)
    (218/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.340279765 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.343005501 seconds)
    (220/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.420198343 seconds)
    (221/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.326593074 seconds)
    (222/286) benchmarking ("sort", Float64, false)...
    done (took 2.334691815 seconds)
    (223/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.883619597 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.333270291 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.332934063 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.439861781 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.39504566 seconds)
    (228/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.480094202 seconds)
    (229/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.315072743 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.717201469 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.369002831 seconds)
    (232/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.333588922 seconds)
    (233/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.369935651 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.343687722 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.541627412 seconds)
    (236/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.346218612 seconds)
    (237/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.6687161 seconds)
    (238/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.661397232 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355449944 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348165416 seconds)
    (241/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.329714128 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.777630457 seconds)
    (243/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.225131978 seconds)
    (244/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.352008614 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.315824609 seconds)
    (246/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41576449 seconds)
    (247/286) benchmarking ("sort", Int8, false)...
    done (took 2.331201436 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.337863901 seconds)
    (249/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.357840926 seconds)
    (250/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.330523025 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.345420098 seconds)
    (252/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.63137131 seconds)
    (253/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416094041 seconds)
    (254/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.32936671 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.377807192 seconds)
    (256/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339992482 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415217521 seconds)
    (258/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.4131963 seconds)
    (259/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.672573525 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413940303 seconds)
    (261/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.203528059 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.445228138 seconds)
    (263/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.946264208 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.32640562 seconds)
    (265/286) benchmarking ("sort", Int8, true)...
    done (took 2.325649544 seconds)
    (266/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.342886728 seconds)
    (267/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35733951 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.338141173 seconds)
    (269/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.414128904 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.375835981 seconds)
    (271/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415760123 seconds)
    (272/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.318721225 seconds)
    (273/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.376444073 seconds)
    (274/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.332048342 seconds)
    (275/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.357818798 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.341234576 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.321840409 seconds)
    (278/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.466164817 seconds)
    (279/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.319328821 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.323892068 seconds)
    (281/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.344152497 seconds)
    (282/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.103442491 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.454642004 seconds)
    (284/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.331760496 seconds)
    (285/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.321632959 seconds)
    (286/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.3400362 seconds)
  done (took 564.539745968 seconds)
done (took 565.75861868 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.366835724 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393107425 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344796317 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.366460952 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456686914 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.523910923 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.356387752 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347342962 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39340406 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394162311 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351862808 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.519650492 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347647846 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34480304 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.345824965 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387341919 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.336808221 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343015472 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364797524 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356549706 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.36532329 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35363104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396496716 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.522693214 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.349639465 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351189018 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349689606 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.368423507 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46018384 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350548262 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349691773 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358773676 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33689787 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340776373 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.341852734 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367335071 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359399212 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355091692 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350277335 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.461196157 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.34068231 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.348861698 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349069091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347653532 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348229006 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.351702835 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349100418 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.352953842 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389986854 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391464902 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348835282 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.35630768 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.356968066 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.350559895 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359809084 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.348178057 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.350402969 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393662862 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.368601485 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393907335 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.347655242 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.34720212 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.350542755 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.366791849 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356972926 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.338147864 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355857773 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353052861 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.340773489 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.347743695 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.341525106 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.355042052 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.353236108 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362553921 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.380996561 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.344622543 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340594766 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349006268 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.35679416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.346740392 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358654031 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391465671 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354347723 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349491665 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390136772 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.528073199 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359709966 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.349235391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358490358 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369208544 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358914371 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.361090456 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353207161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345226011 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359254466 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.351983328 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.358097636 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.361895256 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.355929416 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36335523 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.341765368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392704725 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349193333 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.347508207 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352158878 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.473828178 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.345402808 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.347036211 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.373294211 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401167553 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352294655 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.351391591 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.356770276 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396946314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361028098 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353610726 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347457944 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.354164116 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.336050858 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.47192124 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353750909 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357797177 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39922018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352487482 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349022561 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.347360668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.348274344 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395979494 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.475379013 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36235599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.464848691 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.352016188 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.356272148 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.384997943 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399974573 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385392663 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356747859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402121593 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36938438 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350611454 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366813335 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.363652706 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.356178993 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361812691 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.3481095 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.389739856 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397708498 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400081227 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375398908 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.47468663 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350273036 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.357443244 seconds)
done (took 225.49610728 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.41300642 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.348127859 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452970282 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.353576994 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.451388898 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.449220165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349808443 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351945738 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349456209 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.727634787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.351207733 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351148235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.349535315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348583765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43495816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352151315 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349772726 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.692152466 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352592228 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420059966 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.352967453 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350183167 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354603271 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732711697 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.350168038 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.345542922 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424053963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352572433 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.695309977 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.346426582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.351016322 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.698729817 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441018358 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370633574 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363429529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.361699159 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452965025 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37083892 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433978796 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431814068 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.454682253 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390209921 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35153958 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.352228038 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354827159 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354795927 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3522573 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384665297 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.354366235 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.353546939 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693417263 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.364046976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353600571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352894454 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.354855439 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382704726 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.353648496 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355041407 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.443131025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.3558144 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417099476 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735022981 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.731433253 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356732591 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.35251251 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354870297 seconds)
  done (took 105.736425189 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421913364 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429549809 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.466209335 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369913809 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.408954664 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474106192 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.370475008 seconds)
  done (took 11.190371818 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361478545 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355370229 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406192868 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406473206 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355661962 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.570876896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35756208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.367653747 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356119019 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433790003 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358520245 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357122311 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364759317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.351667815 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405562493 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368350179 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472884438 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358495354 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358551427 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509430297 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356977063 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36420327 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.431048072 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369218723 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358877631 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365016549 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.317989765 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356707866 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356027569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35963869 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356699046 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.465179593 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359146322 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.355032709 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355787096 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517738193 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357273729 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355449481 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360646254 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.357372126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357611248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359521407 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360031573 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.358307209 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.358143852 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.381378238 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.361372863 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359975476 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.360257137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362269279 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.433032828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360659713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358635592 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.35714138 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437631257 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366921178 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357827117 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358929434 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359574197 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355952311 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.511849862 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408229488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360239666 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409848075 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362492512 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36174952 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.359470753 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.361781058 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452500466 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.361285948 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408997009 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35811397 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.580606364 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384246566 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363776021 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363919102 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364280656 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361831133 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.357802425 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367660586 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.359790256 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.363113778 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367534228 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360253435 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359801901 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545945822 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.519684254 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360761262 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375940042 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370407943 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361629491 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.436823424 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36515159 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361472905 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414812358 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478387996 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439549715 seconds)
  done (took 140.673123297 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366909724 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370630138 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367688193 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.389121973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365281561 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36344632 seconds)
  done (took 9.477652287 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36357491 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364014848 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364601651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363731883 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.364332697 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363963234 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3654393 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363734051 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367458055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363259855 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364929187 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.367025009 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365638559 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364248119 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363796141 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.3652662 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364626278 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363224054 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.367965361 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363376815 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.361981043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.365059982 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364319704 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366762399 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369512248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.367174828 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370705921 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364466603 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364871754 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372411975 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382481194 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.36698909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36595354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377769188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370251648 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367594512 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371857338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36731336 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366862996 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365326252 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369291727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36621982 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366519892 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.369671753 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369169661 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372269867 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375750315 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374146064 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367107566 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371005635 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371378528 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.368645087 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368665616 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368682796 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.367693743 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388234723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.371840586 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368780506 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367263255 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.3695182 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371186424 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.370889922 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368443952 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372129355 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36717544 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.369602672 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370533792 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373089923 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368824778 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368210253 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369313114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367777759 seconds)
  done (took 100.77223115 seconds)
done (took 369.093638438 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.817715829 seconds)
  done (took 4.079054144 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.46733632 seconds)
  done (took 3.728451632 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.750083479 seconds)
  done (took 23.023719611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.37026151 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.414060878 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376724624 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.366711911 seconds)
  done (took 10.793247266 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.629829357 seconds)
  done (took 3.894258534 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.363552701 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.384176431 seconds)
  done (took 6.013178636 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.658380827 seconds)
  done (took 3.922523272 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.844062535 seconds)
  done (took 4.119480521 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.378181566 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.381737431 seconds)
  done (took 6.036559486 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.352844201 seconds)
  done (took 3.617046019 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.558369279 seconds)
  done (took 16.821960684 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.361340406 seconds)
  done (took 3.627491484 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.434453081 seconds)
  done (took 3.699498772 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.999919288 seconds)
  done (took 6.262892431 seconds)
done (took 100.900221483 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.362569007 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.364887092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.363388566 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.360170241 seconds)
  done (took 10.712279271 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406202094 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.404957453 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.4070229 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.415442192 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408324799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406780762 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39776265 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.397499845 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.415192112 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408879688 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.407679785 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40703146 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.426791045 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.397759298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.407639352 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409104144 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417290397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405423076 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.395975435 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.408292893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373394102 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.416301593 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.408759279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373263395 seconds)
  done (took 34.987416639 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.868642893 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.478027953 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526590777 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.438409668 seconds)
  done (took 7.575126569 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.423902451 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427311887 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436921661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.476946912 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503062603 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.435835549 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.399852313 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394786097 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.381843308 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427748544 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501936738 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.44311903 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50971983 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372932759 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557875444 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372203247 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374565507 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425489872 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47766637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503201848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.375986933 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.425917022 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.42994896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442672366 seconds)
  done (took 35.785290736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.374010327 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.391906982 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.373868892 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.37302194 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.383023586 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373663261 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37379747 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375585486 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374557556 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.912252034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.37435874 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38614936 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.892371115 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377132784 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.380521792 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.37616917 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.912536317 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.893606042 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376453837 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383896823 seconds)
  done (took 30.924323649 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.367347255 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.36700402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719192096 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.622728173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.367272966 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.366808622 seconds)
  done (took 14.07827979 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446320879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608771497 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.380619267 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.744153712 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.828205017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379013311 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378876916 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.63505376 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962065414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.934011507 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43585277 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.447066302 seconds)
  done (took 20.448580296 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.380555985 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.371724102 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.375815929 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.387559516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433249756 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394835912 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383784018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.369427991 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.434206221 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452862141 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.396496327 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433694361 seconds)
  done (took 22.084570107 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457722408 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372134061 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386403918 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453115178 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373115552 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211639706 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436777979 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122033006 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390909696 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645396583 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371702149 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480478343 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628370524 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37150511 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374434665 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357719587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598866426 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888667305 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375941345 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368424257 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400966484 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381084019 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383898329 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592574746 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374551579 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372193386 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635639079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372765238 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667780708 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389466623 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385218198 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373146011 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647364083 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058943853 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48817787 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595063704 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393144319 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376433548 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.384023561 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.382217409 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371404956 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372669247 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385303669 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374921957 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374856156 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375487886 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113669645 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394171811 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.370757148 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372681038 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643446474 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472346152 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376862553 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37500609 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489690996 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374506942 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.379622432 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372867893 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955961066 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375030191 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376925511 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.375901936 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38635459 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390976965 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024722762 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.380795475 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.381612015 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380986916 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377248186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38358431 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389184321 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377277539 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.398399103 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377623919 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107023421 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382016676 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374778757 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939179849 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374159075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378320041 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604496979 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376748892 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376782621 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.376771778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378516693 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118559339 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383041044 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363908634 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37116637 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114407295 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614399045 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397951869 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404518294 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602858624 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.362655068 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37667458 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.377780294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375645575 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395818386 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146311577 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395997031 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378738843 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634901155 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590694963 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38684937 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366806853 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915193883 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40317949 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.395265559 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37933927 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604881727 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.981557126 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397396185 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378554997 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409598488 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378911093 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150681236 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383310255 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483122936 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386825326 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654919222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205948333 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376731203 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446246561 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383063327 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379037995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379889664 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391974294 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380408729 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.595594401 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406508797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392002999 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.381819367 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380065067 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.387307918 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383230017 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.395418658 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606975221 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388393206 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658100541 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380944033 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381509242 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376066027 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599353416 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.388138272 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.721004911 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642003462 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388212777 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390377831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394496577 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401217932 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484104333 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405550859 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.383993827 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643873187 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388807895 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386408689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383347438 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396603804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387817419 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388962469 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430213223 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989977813 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366316241 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387617795 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274063114 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.398273864 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450962864 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389078792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607988588 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382722457 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429714437 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392147092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.39494553 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61051697 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394535666 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.386272485 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475755354 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.894482604 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005030068 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397305658 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.38430114 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.38217567 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.382034211 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383317359 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384525582 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384320792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606918111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400455556 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410004875 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991038498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388499546 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383861013 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.407164429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402241283 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395834438 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388438984 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385522357 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38896374 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384491117 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.401067833 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531321877 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.400742813 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38646974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.903244053 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390542412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386352907 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384334127 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423585989 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38544131 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228667323 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640436877 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412136011 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656869684 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386829793 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.419127246 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.384223819 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392608008 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384408253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405029951 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395981971 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.397967095 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388854445 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402258004 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95987823 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152103461 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947452697 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403736041 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.390941837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388978456 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1591775 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40578952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387376161 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635162207 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175124325 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406532327 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900278557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.413957886 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180532901 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659217957 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619975499 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403260455 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.396872326 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656370443 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603805745 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425698437 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39017371 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391023704 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.372780461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965216164 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405472936 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465085079 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12973048 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41082264 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387053507 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.47627868 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389782595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820896922 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408615881 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388656794 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395209038 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408110756 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215929911 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388951443 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392680097 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032563959 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40287735 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.903595339 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408843863 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614773064 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404351004 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396005201 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.401633956 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.398200778 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644160463 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661197574 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39560521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40472031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947731277 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.245482957 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396075271 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393775922 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165256704 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389483561 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688684842 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.404648285 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389220231 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396156997 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391057798 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391754774 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.389650362 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398271498 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369803562 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894990664 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.407770696 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430601461 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406251789 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239827762 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649462582 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.405830092 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997798447 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62161428 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424656812 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415869163 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.395854789 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393156112 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.398284395 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394544107 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392948302 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494849758 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619515298 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413059435 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.375924068 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459487759 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607687518 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394054337 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394185185 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662094804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.39336105 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.417614237 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136616159 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420853869 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393802816 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409161235 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406007385 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394215835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466284302 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621080104 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407594687 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.405407296 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824084838 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413548679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410629005 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410737505 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488813955 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395913639 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391624136 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170515546 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006723527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171979335 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0094428 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6707454 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398657771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395551985 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394740747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540921423 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39428743 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669384977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396383609 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.412201186 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421343671 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396709049 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406521372 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61099693 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671388022 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39633282 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396736192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39907119 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.398025908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407698686 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.60952583 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913061306 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969702225 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395772021 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405521116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137803733 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685302681 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39818102 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39771065 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399550025 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.402407705 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403770559 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405522783 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398565203 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543048879 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668114343 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089454215 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424104274 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.4243027 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.171809369 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39773688 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652597253 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408651341 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625115096 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011212356 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131911292 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666462275 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469999597 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626459899 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.39923611 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547341745 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.409266261 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399518493 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400291102 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24624981 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.396708692 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409902612 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014259783 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665367175 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404015125 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.411150583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425825264 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.409523122 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625816733 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15714363 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62202447 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412171693 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406956325 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399635934 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017101222 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676393308 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405543487 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401854602 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654324837 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402437302 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425796923 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.854892061 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.397798951 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979510993 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372023488 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423793584 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402331168 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154239047 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021635128 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40778858 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919222799 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400425698 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411118886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677601531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406833664 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400418494 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699136378 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.407322702 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409917595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634574812 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.01320688 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201404255 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.403988709 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417924589 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.40721249 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403639976 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49328879 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402777421 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406062641 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.848798898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422278061 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402046494 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410497624 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.398737283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404401734 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.402354515 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404126613 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406270484 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.424863272 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.395079128 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407269904 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402920476 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98870216 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422983479 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.06837003 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.732545347 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661598664 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416133956 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.390399847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40904759 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406456699 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404505766 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39908571 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422196188 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998160916 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.416404804 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416012523 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407774759 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.623442581 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616795201 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417748574 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635702376 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415439952 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421847544 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.392863471 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403705315 seconds)
  done (took 988.536100898 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435713389 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.42436102 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.424833776 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.454676006 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447071349 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448590261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.492279174 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425943857 seconds)
  done (took 20.852572658 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416074323 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.415217883 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.409207571 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415929198 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.404972738 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.905342305 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431866526 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.415536713 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.414956497 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.413499908 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.413091245 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.125576767 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.432718059 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.410225257 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403763369 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.416707909 seconds)
  done (took 33.154263883 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.498586361 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.577173882 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.577146282 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.477964613 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.440991311 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.405772292 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.705285092 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.424775519 seconds)
  done (took 27.41128043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417719475 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.41722277 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418595812 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417912343 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419911717 seconds)
  done (took 8.392884729 seconds)
done (took 1256.205431008 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.410591199 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414856047 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.411784975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41679664 seconds)
  done (took 6.954658743 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.393395027 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.389340843 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.390004923 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403183701 seconds)
  done (took 9.875780738 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.147631259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.069638204 seconds)
  done (took 5.518040953 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.409366218 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.179732939 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.144789275 seconds)
  done (took 8.036910074 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.717685032 seconds)
  done (took 3.020696399 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.814208778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.779410395 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.605906691 seconds)
  done (took 6.503163777 seconds)
done (took 41.210333447 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409824492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.652739548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561453679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420710517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.562746867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.565744791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.141992575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406566722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422209861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415106548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416996247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.565262966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.196544472 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.65689066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.195642925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.656629772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.600451983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410219044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400738471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.421303311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.159014582 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410417749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401786279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.435993112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.584699146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.575317335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4077586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.655547256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409025831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.407656737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.549826433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409691165 seconds)
  done (took 83.789893198 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409690268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411085646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419946506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405063832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.42583812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.41606513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.405336116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413798206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404299997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40371513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414664605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.402459252 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.407254953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405682159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.404092966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405352375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.407075809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404331424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405116768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405257438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.410166851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420558829 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402678207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.407240772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.432889953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420674085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.404422223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.405225944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404818829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41191871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413606167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447793932 seconds)
  done (took 78.462062134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424424202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.407770914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409067624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409014515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405726701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425812707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410848678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406881301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408165396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.4118315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405005493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416435329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.40751163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.407376381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410935671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.407528857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.40539728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420883411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411299859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424828659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.410546772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406977398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424786874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426164354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.420008206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407465525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422870531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.404871591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409050528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405751412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.409752481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414476 seconds)
  done (took 78.508156329 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613999442 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42208244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422827697 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.35107868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421664496 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.418303546 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41290396 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.619157278 seconds)
  done (took 14.989632707 seconds)
done (took 257.052227777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.413902859 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.422631441 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.626609928 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444359504 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.412095658 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460335374 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.444929123 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.644279363 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.425736283 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.668821883 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433764365 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.43399809 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.413887422 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436346085 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.705111861 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570817806 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.355906166 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.412203701 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.778377881 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.428057817 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.690193551 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.411808752 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.714072002 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.395899749 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.44948174 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.416750905 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.433626265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.349141635 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.461306571 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.781211527 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.419151467 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.413898756 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.505697835 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.52494594 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.638238197 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.583625788 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.416630929 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.507336412 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.648067529 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.419460599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.431832107 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.216359125 seconds)
  done (took 85.069066865 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.423328021 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.54666685 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.41998325 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.422451094 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.423907842 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.550966074 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.518742195 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.423328232 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.424967579 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.424975674 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.420715405 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.422440983 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.424917285 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.426554259 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.424043708 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.424199207 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.423687667 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.426166822 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.425949156 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.473148233 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.552775436 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.451834707 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.421169901 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.424398708 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.529561379 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.570591989 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.426765154 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.41945594 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.487181372 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.4275701 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.429037074 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.473827866 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.425966886 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.427767324 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.549413351 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.528805698 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446321589 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.426688013 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.548076024 seconds)
  done (took 58.152486032 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438602342 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681470404 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.865042573 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43317544 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429539339 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432392427 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.510225136 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.432619593 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.434046541 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43391149 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.591681361 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431466238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.466357691 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.892071762 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42808654 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.430611086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.4294325 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430473367 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687773703 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435593247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531224299 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43198139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511301642 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439440472 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.452744973 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43122853 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.43456187 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.00496423 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.43482192 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590680733 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.258868448 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.508498849 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.974785252 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.884677863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.254028302 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432691575 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.427675085 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.59419972 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.435058112 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433011513 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516282601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.432872756 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.882333737 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.091312109 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.4464948 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.431204306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.030409233 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.592997601 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.688384975 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439716736 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911117173 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431650292 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.434906455 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432640168 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.689447028 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438985295 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429801771 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.063054214 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.454964941 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512640066 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43550209 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.432600693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.703218441 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434080161 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690690225 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434023803 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440567787 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.452477862 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.888348354 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437208438 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.119688201 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448398471 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.43396785 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.591839598 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.687684238 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.072304402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.437738272 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.709860789 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.976783453 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.516457787 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.438315871 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.006020473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.519131935 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440363995 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.436183033 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.436088495 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.434662262 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481137988 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.514010011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053896766 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115340803 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.081362511 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535466256 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.451598997 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435527505 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.070061247 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453439647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43436028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.886695585 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124611494 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.456587689 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.44222551 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.124103143 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457259655 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.518032495 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.4429675 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.89715573 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440263698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.481514398 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434725661 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442788149 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457691613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.516966491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.442944135 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.435879415 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102226423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.621626722 seconds)
  done (took 188.85743453 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.430582723 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.424534782 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.430174359 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.425030179 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.428439542 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436256794 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.426959557 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.427283504 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.436325787 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.431583846 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.43061711 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.43270682 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.42947638 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.433661978 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.456710313 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438947606 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.430497455 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.428648579 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.431459449 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.425145611 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.429632331 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.450953093 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.43037443 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.425136725 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.429270885 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.430460072 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.45562211 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.430440308 seconds)
  done (took 65.440459885 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437315406 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.03473501 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.439236301 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.573262541 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.4600595 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437086519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.573057894 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.498395166 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.440881262 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435929774 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436690428 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763251676 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442495959 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.986417478 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.63790989 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.587489811 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.983882014 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456391712 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43712036 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.438629578 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.575817606 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.452114667 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.759933039 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.037199966 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441902894 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.038046221 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431602404 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.437660454 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.438487904 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039067567 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.440133553 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.762935753 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.519645739 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.4978438 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.037111817 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989842209 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00432628 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.597692168 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439079033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.438693169 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437726974 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.431007254 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037724663 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443349722 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.439496569 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035618838 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45859464 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.442849168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.447351166 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43916882 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501614897 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.50220375 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.764116435 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.047838672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.545924927 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450075062 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.575861774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.841982549 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.444172431 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.990263562 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.448483915 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.044751796 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462571589 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430131656 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442056059 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.447849762 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.595756264 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.575141146 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.97345313 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456027995 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989922295 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.615149053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43752089 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.441855445 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443292895 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.044741178 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9927409 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.615918653 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.579001782 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.642476855 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431850157 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439432446 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435999313 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.523846179 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.439090588 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.048889976 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.012076285 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461442455 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442237207 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.445416284 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44355322 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.627947342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.062392652 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.525238217 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984853252 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.786869432 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.769368068 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.445672075 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507406725 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460570126 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.771960305 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.448807038 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.505524841 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.935375303 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.77534404 seconds)
  done (took 171.890690722 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.692180012 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456983796 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53418187 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601549469 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.059273922 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.032834485 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.4365639 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.60327425 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.558008728 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.708434666 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.448467137 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.536118294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.660895946 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518757953 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.198612354 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515235498 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544720092 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.594946215 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.589381061 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.435427075 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.106803151 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.765503885 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63361836 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.457012496 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.545638292 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.254010347 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.034572413 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.979918699 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.621538063 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.441017126 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.995601696 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.4431707 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.407766201 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.149468399 seconds)
  done (took 66.893977869 seconds)
done (took 637.612131821 seconds)
SAVING RESULT...
DONE!
