cset: moving following pidspec: 11427
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.535319591 seconds)
loading group "string"... done (took 0.51062078 seconds)
loading group "linalg"... done (took 8.606503942 seconds)
loading group "parallel"... done (took 0.175584656 seconds)
loading group "find"... done (took 1.389453646 seconds)
loading group "tuple"... done (took 2.043990302 seconds)
loading group "dates"... done (took 1.350896347 seconds)
loading group "micro"... done (took 0.210181605 seconds)
loading group "io"... done (took 0.587084055 seconds)
loading group "scalar"... done (took 41.578020295 seconds)
loading group "sparse"... done (took 12.855672763 seconds)
loading group "broadcast"... done (took 1.044883235 seconds)
loading group "union"... done (took 14.270465761 seconds)
loading group "simd"... done (took 4.893354325 seconds)
loading group "random"... done (took 9.868864014 seconds)
loading group "problem"... done (took 2.10332699 seconds)
loading group "array"... done (took 24.383287238 seconds)
loading group "misc"... done (took 1.1462556 seconds)
loading group "sort"... done (took 3.591836692 seconds)
loading group "collection"... done (took 21.167369548 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.602776064 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134859503 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146124257 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175842727 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207672477 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138341574 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157269308 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.552827394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.071292144 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208320747 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143127782 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.545824306 seconds)
done (took 5.811681617 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228272182 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074598216 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127096191 seconds)
  done (took 0.87469177 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075511312 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174155847 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093463062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109898242 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110152257 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.1090927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093691347 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109584239 seconds)
  done (took 1.474852996 seconds)
done (took 3.336767717 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.812733799 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.79693506 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544229769 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128687932 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155124857 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129126874 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315611216 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159355065 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108443196 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114857885 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173089545 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.369842964 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.4282005 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954544697 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093908268 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128986105 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080386684 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698451587 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08420785 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131917224 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.516981207 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.110970478 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117643094 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12546923 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20788611 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131917752 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181817646 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103273993 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.69334871 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104143517 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184637029 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098821631 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16022463 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.216444807 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079942048 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106602686 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677178091 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191062397 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110673645 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095255048 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676971505 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082951251 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189983242 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106952639 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109708031 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187040344 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117631776 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078316181 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103832333 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10270777 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158170111 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.468621411 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108554318 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.142885036 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113284195 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685350324 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096870989 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155362933 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126799827 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10800886 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096816218 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116214254 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156414974 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122695852 seconds)
  done (took 19.751111985 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115565858 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139473204 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093979501 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14025624 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138132183 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096528378 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083717039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093765177 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108064574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182347159 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136058137 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142304998 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073959413 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097148108 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116979985 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229454359 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118647011 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118556862 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081412523 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105776492 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12293241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112851626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108951701 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092972534 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168208731 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206255358 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122108625 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12264277 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09363101 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098351385 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142324916 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160514662 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075207293 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09443689 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180027925 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120349961 seconds)
  done (took 5.126238027 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199200756 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114773069 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190029104 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176555636 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130507961 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150452803 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167096353 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118624433 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264036867 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.164777725 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164860982 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129451458 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110686511 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078911473 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096207215 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077954833 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.750362599 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183800951 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148790425 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122918272 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086937738 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097861595 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079414321 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101811621 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09582158 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085031986 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.130737879 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.32690619 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175174605 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083631315 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.235430196 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096640026 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109576985 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132118188 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194596625 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128503894 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138897799 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084395629 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0990304 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212077632 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108574118 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077227416 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122521122 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131544054 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114645482 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100847586 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109755316 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226988448 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099406785 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117329757 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.032797238 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199215343 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.132209362 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095616568 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099576398 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337085169 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097694269 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103496787 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079454904 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288673113 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133189126 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099174534 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08040678 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09462378 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083596577 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094964912 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389038392 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088275505 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.9221639 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097377977 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16010748 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098977165 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103791667 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085329856 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10119942 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101153325 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096395744 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078719088 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095963271 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078112659 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100639104 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097655803 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100868224 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077680788 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162082321 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11678226 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098735449 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12486747 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082120975 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09585791 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127075446 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080213894 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098707776 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125102695 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104059795 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113825435 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09793583 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12558407 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097938478 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174306492 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0824999 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125539398 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098380467 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111307727 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116611574 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096733651 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083261382 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094319332 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080236296 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158978327 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082247119 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080047367 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100183419 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110040052 seconds)
  done (took 23.431672406 seconds)
done (took 48.982404904 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.425285928 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115200795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111087834 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110253426 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107747026 seconds)
  done (took 1.62171306 seconds)
done (took 2.350095852 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323306386 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196447653 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100152567 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18970281 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086594482 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196437454 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162562822 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099981043 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207642442 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081373808 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185628635 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082339928 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103553165 seconds)
  done (took 2.769507168 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092506715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115618154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081251325 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106792361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073922838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091503255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107287729 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127525021 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089671203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084144184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091827425 seconds)
  done (took 1.785470245 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090855769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11489388 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080064213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089124358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091044394 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089873788 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10925281 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102929737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107023681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084008337 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091268176 seconds)
  done (took 1.776676419 seconds)
done (took 7.050608869 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.125950916 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.974063821 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122378619 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.174397256 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335551645 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.219445281 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.646690334 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135986889 seconds)
  done (took 16.638212953 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.126350031 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098120216 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077350029 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097899369 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078339461 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097529969 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078759524 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097039859 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080792517 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097486478 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078684261 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095268421 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079841156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094453382 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082486098 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093525547 seconds)
  done (took 2.242899146 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114537735 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113461028 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100662908 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087531797 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099847188 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099162381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085502441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099553492 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081492107 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098501519 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088703828 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103090688 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101417224 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081337674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100750408 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088942861 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097027602 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085213302 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101084233 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085002925 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103201557 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098337032 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087311264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103401065 seconds)
  done (took 3.135144795 seconds)
done (took 22.742283121 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164964246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083284047 seconds)
  done (took 0.978102341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100014865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117235393 seconds)
  done (took 0.952811317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105148088 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096134566 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133904986 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113269859 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081394839 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079265293 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13017598 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09701494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080003256 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09585368 seconds)
  done (took 1.74824463 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084882335 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099436145 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088334855 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118863321 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10949272 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083594352 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102266604 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084132545 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101341904 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078641841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104133366 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098437478 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102708582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116535218 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084517126 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.22311827 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106080988 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083816568 seconds)
  done (took 2.605578733 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080214824 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081043611 seconds)
  done (took 0.897791952 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082641677 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094290174 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082382974 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09825226 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078897196 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093928268 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078564643 seconds)
  done (took 1.347073012 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471693551 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245814733 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304389769 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112852504 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131556353 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350365409 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132050737 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.093241354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110801706 seconds)
  done (took 2.748278438 seconds)
done (took 12.011648623 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091147983 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131316538 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.473037986 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115113953 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077480465 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155482939 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262015954 seconds)
done (took 2.045427143 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338262221 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121536895 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087011826 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077898673 seconds)
  done (took 1.360725456 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078343061 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084954696 seconds)
  done (took 0.908135156 seconds)
done (took 3.012791305 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077268938 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.125053934 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076391278 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094635492 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.074608528 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076085439 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095870684 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.074391961 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092180742 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074414255 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092558821 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07721229 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.076085243 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.093281604 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077048441 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091344258 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074726244 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095097316 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076682607 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07630295 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092966686 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078563943 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093952778 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076558029 seconds)
  done (took 2.810446707 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102949699 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096573036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083024357 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100170599 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081389519 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101534837 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101165895 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080149801 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103046944 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08218238 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100507574 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083899704 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098884109 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082864698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099309956 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084350512 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102792754 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079996888 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099669602 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08409693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103237244 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080364644 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101437044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103207559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0826703 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098781766 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080720533 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096800158 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083520422 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099161224 seconds)
  done (took 3.526019202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086261049 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074906763 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093617467 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086427279 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092246191 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078411323 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092162809 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078985035 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097186234 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075735559 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082182793 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094359891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079169291 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099474224 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082189421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102743832 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096254133 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097711218 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079979661 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099875514 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.0835491 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097753059 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080722692 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076229685 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095090303 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077159055 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096149017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077217344 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094830795 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077400231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099355681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084177631 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076639099 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107572974 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083459932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094232064 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085669125 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095080057 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082235992 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095408053 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077366882 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094305945 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080336776 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088951749 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.098099804 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078904291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098604235 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083085914 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099271687 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084636672 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095164898 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08087196 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09991546 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082730719 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083646267 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095315109 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078265843 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094971992 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082124286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094736453 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077235816 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077038422 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102697947 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078313251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120016736 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106994621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080970811 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083710007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100146098 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08606992 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101607483 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097207293 seconds)
  done (took 7.16343953 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080874343 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10390416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07814266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094573359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074372331 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07606708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102528166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077946325 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096743217 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094531181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093808749 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077240975 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094451032 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079420554 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094058218 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077632155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103944363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073601384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093845192 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07941931 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093653443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082135246 seconds)
  done (took 2.680049674 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221595539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102814584 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139403898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11149597 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096766984 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112402924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083134912 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101405546 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099875097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086081372 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103297306 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083365891 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112807738 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103047645 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085829302 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105212177 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08315645 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10532989 seconds)
  done (took 2.698301844 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091577937 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09684301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103303417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097242855 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078539753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099360384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084962461 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115342205 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080790461 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0968091 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106332348 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080690723 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099236624 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078776787 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098804086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079929821 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098063693 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079139468 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107210939 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084997712 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103146625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089183058 seconds)
  done (took 2.806654465 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095556829 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098734755 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099618854 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100950869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077739135 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098672592 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086450415 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095825247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087430457 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097951759 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078617145 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097369456 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085750212 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096334996 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.1049254 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079972673 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098439647 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07983452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097269172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077807844 seconds)
  done (took 2.595735849 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120213582 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111428352 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093163574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122250064 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111386445 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093979688 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122387417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093700475 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110221634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12393408 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09380598 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111594495 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122466222 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101309162 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110782231 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106064014 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122722604 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122368531 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093206853 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110785647 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124119669 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095395079 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122541305 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094010763 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111323963 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110787108 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094244467 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12006412 seconds)
  done (took 3.831996909 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078571074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077336418 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093983473 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075923371 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093770839 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076372654 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075766396 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093909482 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078574244 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093855765 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078403409 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09584129 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078647042 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078423496 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095731992 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077594061 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096251252 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075920337 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093685214 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076300519 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079398405 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096653987 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078403701 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094160226 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075992259 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095719879 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076417554 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075485456 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095787702 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076699027 seconds)
  done (took 3.291313417 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087252306 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107580368 seconds)
  done (took 0.960486086 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077169054 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113527964 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075771349 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099705151 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085334108 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098042961 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089188669 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103079359 seconds)
  done (took 1.50422523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103118114 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11723092 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085070049 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108742664 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097935893 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11581707 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162935897 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085143432 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105620753 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07970529 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11629041 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078760182 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107519807 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084502578 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105690108 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111607004 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080769107 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089511978 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104984472 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081666833 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103200378 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112808316 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089943033 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104885501 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082072013 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109477028 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09202203 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109124596 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084672829 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108714896 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086243299 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091852516 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084374988 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103030111 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080751161 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115561779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114994643 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085239829 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106777575 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086289609 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108117846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078833648 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108771959 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087018714 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110355747 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086232869 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104974635 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078163227 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098346087 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083667593 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096619289 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08393463 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091684786 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089322435 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106860114 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097697313 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100836661 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084269597 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101943156 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083742506 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10559277 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083829709 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108666755 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083217152 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107603434 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08872295 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105782573 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078134488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091526964 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080336929 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107806278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103320807 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109888392 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104056576 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087247234 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098592035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085422665 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103926124 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088298999 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108941327 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084625675 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106272816 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090677924 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101256903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083235562 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105241485 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081993876 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100870851 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079888146 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119202403 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082283622 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099148493 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08030441 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109310795 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083854657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102343237 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080139594 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107504976 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074504098 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10398271 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086772013 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105520432 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091921698 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105640607 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08693708 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107131878 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091252508 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103576044 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083809832 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094932885 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086543115 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100546201 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088688429 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092108764 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085884535 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102780253 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086371413 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110124963 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082380835 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103068778 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091400856 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110040227 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100442125 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076692401 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085024935 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102487462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108191646 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092874186 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101583272 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079056728 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078871375 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10763226 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102626397 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086571247 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104499127 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085532773 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074443375 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100191858 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085437341 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110077782 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102280767 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087516165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109262893 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086903641 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102663846 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090089723 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101543487 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08022858 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108731943 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08364385 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097551663 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090488054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103291506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082440943 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103170762 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090134558 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10375511 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085789406 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101587449 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085567981 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105606301 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080040385 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103721693 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082856377 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11145456 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084626244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098661471 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077316082 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105579486 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081488477 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10272869 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080691175 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103080794 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087340133 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099955776 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084004448 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101921212 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097369509 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121128779 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087016413 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106615884 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091495064 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104262953 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086611905 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104014668 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086240645 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105067932 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088753988 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1056947 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085599526 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103438169 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076753835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105572406 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090150018 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099377945 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0816043 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099423151 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085123428 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11160927 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084694849 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104454036 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081846221 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1053089 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090680023 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103077557 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084736633 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099318007 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085212252 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107653608 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086266314 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105936354 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091598311 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105068007 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079310298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108718894 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082084955 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107767753 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079588549 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099485041 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081472311 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105625261 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083343619 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101857999 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074687074 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108441094 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091234435 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104519586 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081122247 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103975559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094293986 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102359582 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091028455 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104105448 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088693793 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119303273 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081255029 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104034717 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09264584 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104726064 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075175026 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107296782 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083822228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099169922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084266578 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102066212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086186589 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107084701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086498769 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093517595 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084827422 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101936484 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081328649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098324158 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090837474 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10472952 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08533715 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113481847 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087430753 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104951787 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087610773 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104143035 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086818573 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106378016 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086198428 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105394202 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083480016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100240902 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08613774 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099380455 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082140357 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102648811 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085879707 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105220309 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087112652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103239295 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089839589 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104363627 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087469291 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122614181 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101575506 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081560796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105602874 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087687095 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103543871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085231709 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098453382 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090711292 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104136936 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091403904 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102818882 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0776199 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105125887 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085135265 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106151341 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087336803 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106164002 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083737346 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104033243 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085578188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113707699 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082101814 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111248541 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088308172 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106680681 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084938434 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10506652 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084002333 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100820905 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085591027 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106309558 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087434954 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103940393 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088219792 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105710327 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084721554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103207761 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086725138 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105592476 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088204625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094634627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081037987 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10067671 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086534461 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108608183 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086717374 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103245897 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083579396 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107041984 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08420694 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096662459 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090604529 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10778568 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087059398 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114006127 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081395217 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104924804 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095962876 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09409572 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08354136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10158172 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083751062 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113129995 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091112909 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111588036 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086983143 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101665577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080051413 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10824988 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084672073 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075671619 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101380727 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08859408 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102953358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084255691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105867071 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08864569 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107033537 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089666206 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104587696 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08525734 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106418455 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078974878 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101290967 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081764323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105279652 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087614034 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101592514 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078634796 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104973684 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086292359 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105076521 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085412682 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103134409 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091660093 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105432096 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085840579 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111082815 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075818401 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105398012 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085312795 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105173325 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081741035 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106147448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088332021 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107907764 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09095618 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105974877 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088198273 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106040415 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083110539 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105966122 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086844072 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106047998 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082433288 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107305403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092931743 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102469682 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087452267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106003847 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083606756 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107377284 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088404896 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106101118 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089946344 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105973311 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085873506 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109160664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086921102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107242181 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088808642 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104762919 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090974545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101494317 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093730952 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10636646 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088292916 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104165509 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082635459 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10512771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086014547 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103806653 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091593816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107085308 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081535171 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101859189 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083161912 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105564481 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092472173 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112271549 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086807084 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10681576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080591846 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098047862 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088460884 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101646102 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084860454 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108783928 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090639409 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106263276 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083648986 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104462405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090788534 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110673111 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088227407 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102965559 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088834711 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106958399 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086094618 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103676478 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085739597 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107630197 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088015281 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104088386 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083191017 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114356266 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090676845 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10809633 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084423385 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108120376 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085865282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099326512 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088061308 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10616125 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108262666 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087003044 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086151355 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116395582 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100928589 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085825844 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111808923 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085691594 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111290881 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080772354 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106342166 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088801623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107762879 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081001428 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101034809 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08305311 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105951719 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083373827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08022066 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115677882 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110974086 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08785727 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104562044 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08491372 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09999535 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081354009 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082580947 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108682645 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085376586 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114749155 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101473313 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082422553 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081430144 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106377343 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087795226 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107564515 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080054248 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101135671 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083554129 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107360259 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094060929 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10555818 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087288104 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107470117 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086991108 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104398807 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091999148 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098731291 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088405336 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117312393 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087167726 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108142069 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109733884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092447371 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107759912 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08084918 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107882892 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087225164 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107367223 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089044414 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108805792 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102611857 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10743803 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082170275 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10483952 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086438503 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103035048 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094175737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108934565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088032542 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107880915 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085304128 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108739973 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094201516 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108884952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090098562 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107383241 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085344452 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10692378 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084288567 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105395007 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089337133 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108561294 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086324074 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109853886 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083304004 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117750996 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113599231 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089230391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078754687 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103928011 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083942971 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101836085 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089279904 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100593236 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085393218 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104124844 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085633921 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109358286 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089963763 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107217903 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088464893 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106875727 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077566108 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110464992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087487929 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108972791 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079297107 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106856196 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089387536 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110504241 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093177806 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104859833 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087430478 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105623546 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089766986 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101286534 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090305877 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104638219 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085125286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10212611 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087362015 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108431076 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088992601 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10891325 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090644658 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106132618 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09183588 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110055871 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08009538 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099210854 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090798558 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103380551 seconds)
  done (took 57.94678411 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147822323 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088772219 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077869655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098068682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125553298 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082571776 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097672633 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082849268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101739026 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092181467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097311031 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078454174 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121481365 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126224503 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12356874 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092878061 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097538973 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083500839 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098305146 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082463063 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119191923 seconds)
  done (took 2.929016077 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103641294 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116551548 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114675045 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100800244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109363122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116439243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094700518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116478793 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120824993 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090399815 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121544134 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116001217 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090919861 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110482059 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110126582 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093597037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119579085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108071028 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098110049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115094465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112454591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095554368 seconds)
  done (took 3.189168769 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09182611 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086089836 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110857901 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080309947 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106551712 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080921897 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111689264 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083425084 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111130077 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087009825 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.103598255 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087206776 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111817212 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080383852 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.104146375 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083122206 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111156976 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086654398 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107764316 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080876317 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126890991 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.080590707 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102167867 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084236793 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116012542 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088475538 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10646767 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086430311 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104558588 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087133875 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102252745 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089138856 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110083631 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084629828 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103571026 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087142128 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106751991 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.080996502 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083168863 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109739601 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08175594 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107402448 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093056229 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103477411 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.082752762 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108216772 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08715024 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100625562 seconds)
  done (took 5.431183027 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118782196 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154331618 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085362131 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145630554 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12225949 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096320718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107786612 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14547021 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080044156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106436243 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124491005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.099331881 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108545766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112627268 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087045208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106397114 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088705019 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102754362 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092175785 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105403452 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11128663 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09139852 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12043835 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118407928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092054766 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105253755 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083989751 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112302532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119558651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093580645 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113371011 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094227689 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123380669 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105182039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086244306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110033012 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123569258 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088820711 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109747342 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08130391 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109559245 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092944675 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110058931 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124328325 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088117344 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108387252 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087087906 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100831593 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11838241 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089686323 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117184636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120585864 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09222835 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107004594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092928915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122273478 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106138655 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085722236 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111314774 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097883204 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100739789 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092076373 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12049068 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109021054 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096820501 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120069754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108868853 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09145533 seconds)
  done (took 8.159161878 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115118765 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112538544 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123948909 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10418964 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112961878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092149993 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114117553 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11117026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093701849 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119747021 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092159846 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161276125 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109655278 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1188033 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092727419 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112976827 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092822708 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112847355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111849328 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093398104 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112342024 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105057852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11313216 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124611476 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126281419 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08983644 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112303579 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092683249 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124273638 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112732407 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105942701 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11317271 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111752839 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104487181 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126299576 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112754798 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086034802 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112117794 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092161679 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113246643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089036303 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124807217 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112363204 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088880892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112573206 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112428647 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104545464 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126800547 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118303567 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099860317 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113242913 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124355171 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092843687 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112562625 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124194337 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133228428 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104415542 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12603521 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112947159 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12450889 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104639699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132723528 seconds)
  done (took 7.714584805 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084816096 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083900524 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102534061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081231848 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104063661 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08188256 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08312775 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104287529 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083488803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104348826 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08435031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101333723 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081887416 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083038593 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101917239 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081337577 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10148713 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081624763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103287796 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081861197 seconds)
  done (took 2.646408549 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093048298 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125169187 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084895109 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112142177 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087219633 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112182297 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086479706 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107587083 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087381972 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107321644 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11679255 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097273811 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105014244 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09142754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117866017 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112376117 seconds)
  done (took 2.478768147 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105106357 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125438618 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129906575 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089177853 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103013151 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091897262 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106980997 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.07941845 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100453088 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092947804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109755766 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090139794 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107215286 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082407575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084162277 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111660243 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079743202 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.108309866 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086441025 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130021273 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109647243 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088372796 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10810902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08640608 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108068148 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089881388 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111747447 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081582552 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103043895 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087804846 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107730363 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091892384 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10126075 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088960764 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103182688 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081961633 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107869275 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087830904 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110731885 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08651019 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103142835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086724749 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106455257 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089968859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100611893 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087682928 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10098013 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091184818 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106619415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08850158 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107491181 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092944118 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111376518 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.09530637 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115649574 seconds)
  done (took 6.275552115 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098904517 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10842184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089627568 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102401395 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088359181 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113854142 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08973963 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107427743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087808382 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10189757 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087623985 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109297295 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087526417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109481782 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087121169 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109296703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080402599 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106780849 seconds)
  done (took 2.605600093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090425429 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083949533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.114035182 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084163534 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106302072 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086603743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101423406 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083081572 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103609801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084789993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104920023 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086882627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10304499 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087350098 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104737666 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08491346 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107128104 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083407808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084608965 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101275873 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086582724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102985851 seconds)
  done (took 2.913340013 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10236182 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136519333 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098893709 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.147882108 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110359252 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088258384 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118949974 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089264313 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127394193 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.08859343 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.108346125 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.087983262 seconds)
  done (took 2.144826004 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109735851 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142820758 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085189956 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1082783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11987419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0905347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1108799 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0895768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123764132 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124055706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090121782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125164287 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124080062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122118401 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099303809 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120855493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109896725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090735479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106092641 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134285146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090925664 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12452607 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09059186 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111166661 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110204928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102135242 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125008364 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123419116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090342613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124273735 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119544973 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089657679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125040517 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123386986 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087087688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125193656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110828532 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134509183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099578709 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122612033 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106930155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099740549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125120202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117508926 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104899272 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112307203 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117680803 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090662884 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110749131 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140115461 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12039361 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101645043 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119515779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124027517 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124645587 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140250363 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104066057 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122019022 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119716102 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12336861 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101257246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119804223 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123300061 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124864508 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098619012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12293544 seconds)
  done (took 8.319189328 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124965878 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107260444 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090410451 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125229476 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122957931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111655912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091202218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110306402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090111754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107820568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.394068478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089704478 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122949292 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123374105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089966775 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110954173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112258626 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10294148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108605394 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139881347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089805886 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123391767 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123196929 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123196934 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125172287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099463118 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111302203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090809598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112332101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111256161 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098212481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111140269 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122681061 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087062763 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12256196 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090576559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111575574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119142728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090573296 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120343744 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123320676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13442907 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090487647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111678386 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124462312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090671856 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111017191 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087883046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110824908 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087146824 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124965165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124059902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124149016 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101726037 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112561817 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110826737 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090528313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111001261 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091083074 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12020039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12282949 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092117695 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140590044 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111270077 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09014014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123648656 seconds)
  done (took 8.371751032 seconds)
done (took 155.739664977 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102966054 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141432986 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099260946 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168608554 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085897667 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141222328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118234103 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121515987 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085234048 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106232906 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085495389 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109222118 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151622428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105877358 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085618257 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108555659 seconds)
  done (took 2.661954064 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180754279 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.285125996 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105195225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112178089 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091518467 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109200659 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090452198 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11286646 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086748354 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119996905 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087088706 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109387313 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.11845452 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088440238 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107140913 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087347357 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118746947 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08695223 seconds)
  done (took 2.945129859 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115965796 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151695452 seconds)
  done (took 1.119908347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12167412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183839313 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300971347 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137627989 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135945497 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128927658 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161504516 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104967389 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214259953 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.108370289 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13056193 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114238092 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114713826 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119172641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116466989 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091625172 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139765655 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094920484 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115272122 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093388791 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137883425 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11655992 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098111185 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115235175 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18316287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128991223 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093776887 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113810176 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093905832 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115303572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097807796 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128135268 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.1286257 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170622138 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.119418141 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166272664 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121564896 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09162703 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115225891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091813116 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118106002 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116920373 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107795195 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11384885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093179325 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121728641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093267484 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114494049 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1225467 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102050429 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121512258 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118897317 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165559361 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122740436 seconds)
  done (took 7.635796874 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798030076 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156075886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091782371 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.898045855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145012315 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105635879 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801278144 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136847717 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24478743 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.815766363 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107469366 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128992266 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237162673 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260696652 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158481743 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343613468 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67609631 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104543327 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144441024 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156604068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120845354 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119688566 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1325201 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426107403 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114046223 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091640785 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119610852 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104884094 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188585652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092236161 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117016852 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189362368 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271310242 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214321381 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113669631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09109869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089943464 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19842003 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272844989 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204719605 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179533764 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108869782 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091366726 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126808498 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133347172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087761998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169635369 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.201185336 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181012902 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094547365 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127500414 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122647809 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103085653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.19070953 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.090023103 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344044697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347719395 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091246556 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122199472 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131977653 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251166835 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114307978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232879064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117661425 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222070228 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112425846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77972609 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195265332 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091049482 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123023091 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099346285 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119227937 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124774932 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173769903 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366099174 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128266852 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117290678 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090841865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233513819 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091990119 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112452738 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171867462 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09184113 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123217624 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130365459 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105204841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.202602038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257730816 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128881087 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100128766 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118996142 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126318446 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093091202 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218875141 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227221668 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165124515 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245011771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104942673 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194061148 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.175589912 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125027594 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.180443189 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097722563 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133001462 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126691661 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222969863 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149268933 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092107898 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118842208 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099084749 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151140433 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116588828 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099326512 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.198066992 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456737892 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174046765 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109398534 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09602066 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122540229 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171325886 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120315385 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247048342 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124245056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176427819 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121357708 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088816138 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122082897 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17352529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127659981 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100673973 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126633546 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122243412 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258711231 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229963879 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130245876 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223557314 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182417584 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124216771 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18255972 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122250025 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176734223 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101100679 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125282322 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115357415 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773973913 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127170323 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122494583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097348498 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194925061 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113735989 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093498743 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112880335 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088611286 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807796396 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094220464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110831713 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094346541 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123449678 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099923552 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121320559 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09624048 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193004147 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243667929 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105859795 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121395402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091063295 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191510992 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093575356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114014891 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09217366 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113475287 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101672941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118965536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093403612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180412026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188624956 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229344188 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.53146138 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113056204 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092927332 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238183959 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091956736 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314511731 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12184465 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235335483 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175809585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088608217 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345331573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175857581 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194564462 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116516865 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180038952 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110064923 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098325268 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168245363 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114630803 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120736836 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166894084 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10786099 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129747029 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.16102762 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090497218 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257173077 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088318522 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176441107 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115255858 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126727393 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296412253 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114044853 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13373949 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172065297 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095639611 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116091596 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.662109527 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113741272 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102914472 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124472252 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233887813 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17432137 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122443297 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122074705 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10613231 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169192082 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.24227695 seconds)
  done (took 44.9255093 seconds)
done (took 60.1403482 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311357269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268059927 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.300643561 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.200381259 seconds)
  done (took 2.028228907 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18064237 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155798683 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126526992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111983561 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157526743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088442604 seconds)
  done (took 1.697251315 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.482317288 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.382115483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35001006 seconds)
  done (took 2.095185971 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258232548 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.286403497 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326234313 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.435854413 seconds)
  done (took 2.291935864 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210588414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129437473 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10228337 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143198923 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176431953 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180290961 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146528683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155557915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132232785 seconds)
  done (took 2.299235657 seconds)
done (took 11.289786628 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.316559578 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.285233436 seconds)
    (3/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.161146303 seconds)
    (4/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.100492817 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.241167885 seconds)
    (6/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.130148725 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.174807815 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.211961473 seconds)
    (9/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.275392188 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132765888 seconds)
    (11/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144848188 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105895117 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121907055 seconds)
    (14/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.276157161 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097065014 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.196236388 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138269602 seconds)
    (18/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.277127001 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.190581824 seconds)
    (20/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.128530486 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177810185 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192110573 seconds)
    (23/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124860627 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 0.22337293 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125433729 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.22853788 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.130728714 seconds)
    (28/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.228985698 seconds)
    (29/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.105337274 seconds)
    (30/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.120230324 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093398316 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130801561 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.151141513 seconds)
    (34/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.137566867 seconds)
    (35/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123550896 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116953388 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097497524 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.194072234 seconds)
    (39/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.277503725 seconds)
    (40/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.142909286 seconds)
    (41/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09424233 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.145783472 seconds)
    (43/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.199214544 seconds)
    (44/286) benchmarking ("sort", Float32, true)...
    done (took 0.23150826 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139430996 seconds)
    (46/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092338234 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120357732 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092171214 seconds)
    (49/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186877943 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119965262 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094360912 seconds)
    (52/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079843833 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.246762134 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.259949592 seconds)
    (55/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14140175 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161678698 seconds)
    (57/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.130326859 seconds)
    (58/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.181040999 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115173582 seconds)
    (60/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.130081114 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.089988057 seconds)
    (62/286) benchmarking ("sort", BigInt, false)...
    done (took 0.231947353 seconds)
    (63/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246373948 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139691292 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127282392 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104801329 seconds)
    (67/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.165814499 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105827961 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 0.112459647 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.090822616 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.146785562 seconds)
    (72/286) benchmarking ("sort", BigInt, true)...
    done (took 0.24931585 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.152318842 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196336613 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.188438256 seconds)
    (76/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096673507 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184799105 seconds)
    (78/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100188524 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138630414 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138998943 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096859169 seconds)
    (82/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.195334302 seconds)
    (83/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124882785 seconds)
    (84/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190781084 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145918271 seconds)
    (86/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.113844793 seconds)
    (87/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108005962 seconds)
    (88/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12540635 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078096433 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112118569 seconds)
    (91/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.08763105 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.118946831 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171810381 seconds)
    (94/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158700628 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139622977 seconds)
    (96/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.117287032 seconds)
    (97/286) benchmarking ("sort", Float32, false)...
    done (took 0.17688593 seconds)
    (98/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139152755 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.209092672 seconds)
    (100/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.107173124 seconds)
    (101/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126365008 seconds)
    (102/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089583927 seconds)
    (103/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.186195917 seconds)
    (104/286) benchmarking ("sort", Bool, false)...
    done (took 0.187995018 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125501485 seconds)
    (106/286) benchmarking ("sort", Float64, true)...
    done (took 0.233154069 seconds)
    (107/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197309395 seconds)
    (108/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102348536 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105017777 seconds)
    (110/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.104664854 seconds)
    (111/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126433993 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09442256 seconds)
    (113/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117540574 seconds)
    (114/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.115870835 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142878625 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185902619 seconds)
    (117/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078572554 seconds)
    (118/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194544369 seconds)
    (119/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.225067901 seconds)
    (120/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.111036381 seconds)
    (121/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093035462 seconds)
    (122/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077702927 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.127003723 seconds)
    (124/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170443782 seconds)
    (125/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215749473 seconds)
    (126/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.07815791 seconds)
    (127/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.154318483 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090302804 seconds)
    (129/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121190296 seconds)
    (130/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083589022 seconds)
    (131/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.163200725 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129033959 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.18785032 seconds)
    (134/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125831985 seconds)
    (135/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126270568 seconds)
    (136/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091574363 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11858466 seconds)
    (138/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.175954581 seconds)
    (139/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122758926 seconds)
    (140/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.103912781 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141390848 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.129931448 seconds)
    (143/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095419494 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.106821233 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095555204 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121781517 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104087557 seconds)
    (148/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.109199664 seconds)
    (149/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.128058177 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.174721787 seconds)
    (151/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191293991 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078479898 seconds)
    (153/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.101646283 seconds)
    (154/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094405362 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.180533013 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 0.176474155 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095088316 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113729145 seconds)
    (159/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.129613078 seconds)
    (160/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121597318 seconds)
    (161/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.08589523 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184283884 seconds)
    (163/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101519365 seconds)
    (164/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095205584 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127015266 seconds)
    (166/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078924002 seconds)
    (167/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082004775 seconds)
    (168/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.108312401 seconds)
    (169/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.136042031 seconds)
    (170/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119760919 seconds)
    (171/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078639024 seconds)
    (172/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10041256 seconds)
    (173/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097573437 seconds)
    (174/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170040985 seconds)
    (175/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.128988436 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081714519 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120658278 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097082281 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 0.22571791 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11777074 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078959641 seconds)
    (182/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102913945 seconds)
    (183/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088812125 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12140737 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098301786 seconds)
    (186/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101430414 seconds)
    (187/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096536192 seconds)
    (188/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.104280236 seconds)
    (189/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.144565836 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120908721 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106649328 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126900561 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08111579 seconds)
    (194/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10321383 seconds)
    (195/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.129532343 seconds)
    (196/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106046116 seconds)
    (197/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.102039354 seconds)
    (198/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10227986 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.08520873 seconds)
    (200/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.104644903 seconds)
    (201/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078535543 seconds)
    (202/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116117752 seconds)
    (203/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089752203 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.103978501 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093148357 seconds)
    (206/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118975353 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083365045 seconds)
    (208/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081940639 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107640344 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.172297988 seconds)
    (211/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.166063888 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120391726 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117038726 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096661673 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.119180706 seconds)
    (216/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119941638 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.1212261 seconds)
    (218/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184652507 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097798787 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12137845 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09618359 seconds)
    (222/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120733297 seconds)
    (223/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.085336826 seconds)
    (224/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128246117 seconds)
    (225/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078745687 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113926761 seconds)
    (227/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095449284 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113624448 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09559692 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.105829083 seconds)
    (231/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079323178 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.105350449 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079633326 seconds)
    (234/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098382199 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120763003 seconds)
    (236/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.153114433 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105452192 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105729953 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103910029 seconds)
    (240/286) benchmarking ("sort", Int8, true)...
    done (took 0.220820998 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.119291604 seconds)
    (242/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077686693 seconds)
    (243/286) benchmarking ("sort", Int8, false)...
    done (took 0.20050527 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121384175 seconds)
    (245/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079522403 seconds)
    (246/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138367824 seconds)
    (247/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095505145 seconds)
    (248/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.105754982 seconds)
    (249/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079135207 seconds)
    (250/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.101778201 seconds)
    (251/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086599644 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126728178 seconds)
    (253/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093978681 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120642466 seconds)
    (255/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.136166876 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102439977 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079304883 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120171016 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099062973 seconds)
    (260/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119634156 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113382351 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115101557 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091667913 seconds)
    (264/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121684911 seconds)
    (265/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096297115 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129737494 seconds)
    (267/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078912048 seconds)
    (268/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12361652 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096636921 seconds)
    (270/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111609417 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096713438 seconds)
    (272/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.103263022 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079646224 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117940011 seconds)
    (275/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082083068 seconds)
    (276/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119639724 seconds)
    (277/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.085283802 seconds)
    (278/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.077989967 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13804599 seconds)
    (280/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118528576 seconds)
    (281/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081075458 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114240924 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093267753 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.12242114 seconds)
    (285/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077945262 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116181261 seconds)
  done (took 38.525155124 seconds)
done (took 39.410621793 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105571785 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155267045 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102286928 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145971764 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126255455 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106208209 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124696396 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104159858 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129768819 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106993422 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.128043995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.084815216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.12562501 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125036319 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103339632 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145098872 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104475212 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121379093 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093406402 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117265685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093160403 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118620901 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095777057 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109558827 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102185386 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123865768 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096549485 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125978819 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094739317 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.117475501 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092631106 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122069327 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092185842 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128617914 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096591404 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118085771 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102094586 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123573865 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095742964 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119464012 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09892656 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118155326 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096959927 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123052163 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095404977 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116997636 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.094312153 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130668598 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14479645 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09449851 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098207836 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125839288 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.12666504 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099061448 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116035858 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094379321 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119675676 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121207014 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117718971 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094961779 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.139909431 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098079435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117288207 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093004145 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117562435 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10070951 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125742621 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092775572 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123998188 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096673407 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113104181 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094596562 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11648939 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.090975087 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123741476 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100747868 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112898874 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094571083 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120720285 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096278014 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117599657 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092312498 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119570969 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095542877 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09171586 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109426402 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092144694 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.120413781 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093801528 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117261963 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096742644 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120620894 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096241003 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12604529 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094241979 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120016772 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118633122 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094460114 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119873778 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093117121 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113161397 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092767064 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098451385 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.114846122 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095065971 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126733432 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092357991 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119739055 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093902766 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117093539 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131938088 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10107999 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118722775 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095455703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090944643 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122136753 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116839389 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092619844 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115466411 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094459919 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11931135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095386694 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092238054 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122074224 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128756448 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090502016 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117238854 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092868858 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094498129 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.121669973 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095398096 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.115821711 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093678133 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112547933 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092868526 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115668415 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098161409 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11685828 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093703382 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119051313 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094594068 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120259223 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096258509 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120471082 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092944913 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111460664 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095452935 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116764747 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095975019 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11939149 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094772026 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113944215 seconds)
done (took 17.527319923 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101587052 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18823352 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15115071 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15320197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126184371 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135969825 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128687199 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149150268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102180668 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146805491 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149135212 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115584641 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15467404 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126923904 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111062401 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.124704389 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.099998887 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134165353 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.159038131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144819702 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127075261 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126634325 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147096166 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143998148 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10054778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154554625 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10381629 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125287966 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127091688 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10831112 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142752096 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105163697 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.1272148 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136820752 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108289983 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123199291 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111127242 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121364091 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.100358245 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125206794 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13811587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.11158132 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121652576 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131726554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100997548 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128229252 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09938484 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123836446 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101378738 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120252121 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105468827 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145489671 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123936244 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103045917 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125756851 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125795678 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102570978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129119234 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.103114197 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128833139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124347308 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103555112 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130545984 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142092381 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101089644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127427339 seconds)
  done (took 9.199911542 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115162502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153054241 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131898797 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108155175 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129182673 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090279969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115343575 seconds)
  done (took 1.785589806 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092576525 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146214944 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124553386 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149294885 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141701888 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127602083 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133200919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091861872 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140675889 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126343964 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119368832 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.170907736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1172774 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103915393 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.150711235 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091759029 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.150801699 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091782682 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125285981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149686501 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097889202 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.140031537 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105527171 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118596385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138926168 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094083379 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182983689 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103870377 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116711191 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097822944 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122167251 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186585714 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141573295 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102549287 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11747535 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120684573 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140100104 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122102592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117381332 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122180746 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.113882359 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123606369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099933681 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123416266 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099319691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.132004331 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128157606 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.101014859 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122666967 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120308202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127896408 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114539931 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118291542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096558587 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.126919586 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09896584 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131741554 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122724621 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120309734 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124888221 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118092475 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143146569 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139338415 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117957035 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13467412 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13927204 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.113978402 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122687203 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099850187 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125026477 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118835659 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121720512 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.102866938 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.132767673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126723535 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121077324 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1445509 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096637012 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130745332 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.097142242 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120922269 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093404805 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133875042 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09657346 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119555976 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109859084 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129256325 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122796038 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097441895 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140481693 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097351713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129596615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103446919 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121167949 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13333144 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120596505 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128179507 seconds)
  done (took 12.773276844 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095527838 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094381148 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12468224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.095335689 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120475337 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09517345 seconds)
  done (took 1.580707043 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125299308 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122550853 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109726123 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126151404 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162148255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118574452 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145231057 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103038387 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139029204 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134235859 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117370554 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143590551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149423844 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101002873 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143176293 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101116745 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142987347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097844907 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133237926 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097786701 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134871052 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125892459 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097821767 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141214505 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101587746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127032623 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100529092 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133816116 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107952953 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129195927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125389744 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101710598 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126058216 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103743075 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143278528 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125679935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096776119 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128705295 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10197721 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126955986 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119380612 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122365933 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106735754 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129117856 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103494541 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126724148 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128070868 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100340076 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14282722 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103033555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129274826 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101842158 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127462743 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.10366165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126491315 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103759679 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129669014 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142700016 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101305872 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1267032 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098909587 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127413679 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103899208 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126448586 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100965127 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128656403 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125988752 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09793585 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098158523 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125678663 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129034582 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098021968 seconds)
  done (took 9.590855467 seconds)
done (took 35.866593336 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676499834 seconds)
  done (took 1.628878167 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.837945622 seconds)
  done (took 1.792465967 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.779987298 seconds)
  done (took 18.761743966 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502622377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.601124522 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999215107 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168307703 seconds)
  done (took 3.22562614 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970035027 seconds)
  done (took 1.944964359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.31052893 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.273492271 seconds)
  done (took 1.54251544 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.79506635 seconds)
  done (took 1.762354688 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.545970762 seconds)
  done (took 2.510731745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359360018 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204741805 seconds)
  done (took 1.540133164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.574646551 seconds)
  done (took 1.546896527 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.74088944 seconds)
  done (took 15.714991398 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245240779 seconds)
  done (took 1.230344344 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303221176 seconds)
  done (took 1.277624954 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.661556907 seconds)
  done (took 4.634384949 seconds)
done (took 60.077975015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103737579 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131921509 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106524471 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129078323 seconds)
  done (took 1.439174851 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109015933 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127782627 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104686298 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127187326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108998903 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127664057 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100497495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185090603 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126590689 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102560075 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127236545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100725242 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129524036 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100924587 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125350219 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10306922 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130117224 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101305691 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128817203 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128238875 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.100090814 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128090476 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103217942 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126900072 seconds)
  done (took 3.829882793 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103970281 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097555091 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126011513 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097329424 seconds)
  done (took 1.404275428 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10738961 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140324972 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112626902 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132606082 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114386345 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139807787 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122362074 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098037163 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124355659 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107308743 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123175819 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116935289 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139654832 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092982416 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135203735 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095117565 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119860256 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139502279 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108203631 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134314789 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096965356 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131449565 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10515331 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137378845 seconds)
  done (took 3.859102328 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181748115 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.137053297 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147406741 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105837975 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174952335 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149792954 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096874213 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14988243 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.097093744 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134824252 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127914876 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.151879679 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132128848 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.101355164 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124562851 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.130880519 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106365633 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131872153 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.099694784 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136518954 seconds)
  done (took 3.601087497 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103917131 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122561762 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093278378 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096796278 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130282502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099480136 seconds)
  done (took 1.630294847 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093530953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.092217801 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118643248 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091394432 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122924488 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092968977 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116495324 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092333711 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091710137 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118046368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091325698 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116375802 seconds)
  done (took 2.22655719 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38403167 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121514697 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120704501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097255953 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129978467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096013218 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.136194106 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095342382 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.151958389 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096373153 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12110442 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.099042118 seconds)
  done (took 2.634887467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215996624 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102194726 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270461129 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381736761 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138201467 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170812054 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306850041 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172742329 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.190737948 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117762798 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227389693 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137115471 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159749847 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18524659 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145998694 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183217347 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18322382 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208325074 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15556793 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211574993 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171037024 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174194702 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185578152 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157818391 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144228404 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164064478 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098191957 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134834462 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180619705 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178173246 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180613134 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155290124 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145815367 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208966183 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246097841 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186304375 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31186371 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139122074 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196261954 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189892887 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233161663 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146689068 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226953235 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134786197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137063283 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189444764 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163122643 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187376243 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13852731 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120492667 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217082133 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184544492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185881384 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142872891 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30922873 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15461404 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15160987 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187174567 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194730395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197268193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174444388 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101633285 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215292508 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18897781 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185045341 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15239504 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17232795 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103465923 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183580303 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225202852 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183896012 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17612052 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190894102 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139008545 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170837136 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175279089 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161356669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185163302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167247445 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100396331 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159026059 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143604058 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107300028 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193106215 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100737542 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235768333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113747466 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.300124275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210094102 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164766921 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167256925 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171416652 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173754918 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126522556 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125810382 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153960089 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.166525034 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138718821 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137997076 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162729573 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153881588 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10602355 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16009728 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129183231 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16600503 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112782972 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173986162 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17263797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134358962 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171019399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128639916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165262606 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177958324 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21996053 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111823995 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138510123 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199938271 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165644503 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.115477591 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180504918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217978322 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169048203 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116308879 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176070683 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227231887 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121437651 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193164008 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147641362 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139648398 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157227059 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165622267 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135797977 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161786121 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135284335 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16127922 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200340022 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132375319 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115810624 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182325197 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132655232 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107196416 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152775496 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143203745 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120980313 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156827232 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147042501 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163680605 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167947186 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159732831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165568506 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120346941 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229384751 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111946702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168018934 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155453333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09772783 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.215392574 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192366397 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107123652 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192524232 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175564791 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231265545 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171425579 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109756184 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18668519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136586403 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125548803 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173405778 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167547333 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141288132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215678253 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20017151 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175087162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160684821 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157879573 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175574579 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180624512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163280409 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.122857756 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167814342 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174330893 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129323629 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129338494 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106623126 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148463131 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108759308 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138338487 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189025452 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171718231 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21890616 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168642364 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121219782 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188828576 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131665995 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172861732 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180216715 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14550071 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190515137 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188977274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174570458 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120687498 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209826549 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098893908 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130853174 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.111276543 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172293045 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139176323 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112908459 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150273142 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187945331 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182977333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156639281 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233921971 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176010013 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199820616 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100937146 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169868454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177508401 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166597779 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192052351 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114621408 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166933187 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183467904 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150323023 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198073096 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170497198 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175778248 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233389219 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.136012694 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137476334 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15681518 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176877574 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14660551 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139008988 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152048696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141960626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162604284 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.1137599 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132527636 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18955879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150697865 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186484283 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163739024 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179296201 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133160249 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149911588 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167250176 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125636133 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.123817761 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178812945 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194074537 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15053141 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165827587 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182255346 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107460095 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317135061 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222968036 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193204133 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142991248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120733665 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168376321 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165987158 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172247444 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189841946 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150657658 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187413692 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165099088 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1482725 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113834055 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153985585 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1566629 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.156795726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.11096222 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160126994 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152194553 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193558439 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152061873 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165743559 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171401808 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124954112 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.161745421 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15078936 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207514514 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167016698 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185440996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164633311 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17408873 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195528361 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101654958 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135860461 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104429876 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187958948 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140105545 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167341982 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191372246 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230802463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166597721 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176805538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116261193 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129556453 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16709179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128618833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232403845 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147632256 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.115203762 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198279617 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159961732 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13665874 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171045861 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289791223 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151395607 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181914679 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.098787433 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285833688 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131958249 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109397152 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166289609 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176592556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145005765 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189379242 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172949453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123832831 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16752227 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145329369 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194591711 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212312626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205238465 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185054448 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120564377 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164256212 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170838713 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182935401 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150423171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151622258 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169742171 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189749879 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190069748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110566255 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17098218 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171271647 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167275377 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179265419 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140533967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195937197 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138428573 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174697672 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146557063 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103653359 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167391456 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191883205 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139987389 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184198135 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165825476 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109981715 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132979672 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15826835 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167462607 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12143395 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137040239 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188677444 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135312566 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171299564 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187948266 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1099073 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162119999 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153502591 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116160097 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149216576 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152637925 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140924561 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150154503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188632601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138842883 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185132955 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184484465 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173821498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168561441 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151093369 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638879277 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135559855 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189273324 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155235698 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193863525 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15571048 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174850221 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1681539 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128014164 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176095303 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157027106 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227750419 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174595058 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165326952 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136629744 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122810964 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153760083 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138167806 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129354568 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171324952 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148319473 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144643579 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163953152 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123848437 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151048843 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145232255 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19107259 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155135828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191635945 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190629617 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115413085 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174886854 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209826855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107826227 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167507398 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178691182 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148520492 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156513687 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109219258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140938814 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188083535 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101617959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169771151 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16748354 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170813934 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171061635 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140325318 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166618323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120688848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169840926 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137297525 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160767015 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164528985 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108715193 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134333226 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161974097 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166276821 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.136717371 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13389556 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177155396 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190353038 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103794375 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139573747 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293036584 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167193712 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201084215 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160199084 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111925738 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151923179 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162717438 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161201275 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168450049 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106158029 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139706697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137616285 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161369074 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15813214 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165998154 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192879944 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169643648 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197090662 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142708602 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.270889343 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117413215 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163570769 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137261147 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107419357 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150931948 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140924898 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122721919 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225191161 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18745732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.130782444 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151590066 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134655332 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10501432 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140384766 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168072713 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133836457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167352366 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15186102 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.124017283 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122745957 seconds)
  done (took 79.897884209 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152828557 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150748356 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15493282 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20154656 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172854746 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249520508 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211795108 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232392184 seconds)
  done (took 2.605967698 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106846556 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164680756 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145905811 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131147805 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.09703075 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.33647681 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14365682 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129913765 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.153799975 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139673221 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.097891511 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571963093 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100942071 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130597909 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119931299 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095824692 seconds)
  done (took 3.732459009 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.344805688 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551079599 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.144647175 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254589674 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234150546 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.159269303 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.766116707 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192389131 seconds)
  done (took 12.722116944 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129274307 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146510971 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145024407 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.17214326 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.128081504 seconds)
  done (took 1.798868453 seconds)
done (took 122.352165187 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10156811 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131776969 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103686814 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134006185 seconds)
  done (took 1.535496924 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.113823741 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086275572 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118460368 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086176595 seconds)
  done (took 1.476292933 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431702608 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.116899869 seconds)
  done (took 1.658268136 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122874921 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140249568 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113104251 seconds)
  done (took 1.455884365 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109501361 seconds)
  done (took 1.192775779 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103682465 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105990547 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148463823 seconds)
  done (took 1.439703113 seconds)
done (took 9.837854877 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118629625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436684962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390949316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143758815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728826902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385127203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033112592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164512145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145706908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124632055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113174152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704147011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018228665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347517084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.003427992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.438617861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696872093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128572547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129841576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098608191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011849523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095847736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097555236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128062755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697910525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429300854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096816111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.477928387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123533298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101209276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413532074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096800551 seconds)
  done (took 17.188495736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102242501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186292492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104736422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127731936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101130362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12707747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10597839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139455258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189298626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096194531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143704322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095455401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131478422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097530657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146428085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096336651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127916875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098322796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132674622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099127359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144559066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096540055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128140842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098803643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126154241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10944782 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125942798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110384207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126833477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101977791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13102994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097911764 seconds)
  done (took 4.930585185 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148657401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195006702 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13408175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132217685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178437937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126523155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.182116377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166036327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192601788 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126190728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114192626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125584814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132189618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126761837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117554969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127284049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099776042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127923691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103947512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128297273 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144786739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096965045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099128354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12777184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097703349 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139897362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096917568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139678777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12467492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102564249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130159562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098578077 seconds)
  done (took 5.269465144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105636392 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135238825 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114123644 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142523767 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099748622 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133480355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10633089 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127737538 seconds)
  done (took 2.052082725 seconds)
done (took 30.520193667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114670317 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102238742 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140325457 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109854258 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.137403026 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.121654475 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125541165 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107988124 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139813918 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105506689 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.142390399 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096228333 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127816006 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095947951 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139462282 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102435015 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140871574 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106854865 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.146438485 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113443237 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126768289 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109496252 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106332238 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147613182 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.145951092 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.117678442 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142659107 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102999799 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127230911 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098675315 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140348711 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119695827 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129039133 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113354684 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131612454 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102020417 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127292546 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099651228 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142439614 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109131528 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132922326 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108736043 seconds)
  done (took 6.174044915 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125158698 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.169932841 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.098444251 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.12809245 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098656535 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.16591391 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161947131 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098838845 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127890129 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.122802265 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153440304 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098087908 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.127659668 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098970991 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126847906 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.099131867 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.15031067 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122999533 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.156976132 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.127932151 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.171541479 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.158984304 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.132089258 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.151094153 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.168938443 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.162349258 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119466879 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.162809592 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.124711198 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.127968841 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.156931887 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129893852 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.126330981 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.097903325 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.167718506 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.13294632 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154814012 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.166329828 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.157009793 seconds)
  done (took 6.426462889 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10682621 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141002013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119662783 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195509262 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135976999 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.141335842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108097201 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145780989 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113710134 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.128524968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.107067713 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15871307 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143907095 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105832379 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10586355 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141503842 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147722131 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099647191 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132045978 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117143016 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.144483755 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11116075 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138945988 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107957491 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126678516 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106914087 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130015894 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113325673 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131937335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106138657 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130998699 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103384406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134866315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109836125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.140008897 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.105609104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150011581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107067123 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137659055 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.13158698 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140271469 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102635903 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150214167 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16869333 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099054151 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135108309 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105362233 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13594027 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097784682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145770296 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108729094 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099085492 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144249621 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127243634 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098040387 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141970175 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100317008 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10081008 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136792202 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104596994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146649963 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.130903157 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113897405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09963455 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133488357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097972691 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127041846 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103258296 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149216657 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101313366 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.168475924 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127302473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104021662 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135306444 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10346754 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136538631 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098405646 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111904812 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138677466 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102501754 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.137607581 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101525028 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131793146 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116274996 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141938737 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134684646 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104211793 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133228148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101953689 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127846663 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112825005 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12956831 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102804768 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115159201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128123287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101052993 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134030932 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103711971 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126617475 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110362304 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132731961 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097769199 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137409721 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098775415 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131928282 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107729826 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132026152 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098743141 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.133751086 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105097651 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.128025772 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.1011686 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.13158751 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101064412 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141015863 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.105775965 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130730906 seconds)
  done (took 15.447835665 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.244886012 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.226851428 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200717794 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31136762 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151098155 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125394971 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222092803 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180474554 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130240677 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.137808973 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183815852 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.19583215 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.185322692 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196196578 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.185904422 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130110123 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119136861 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.182619339 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227932374 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.311296526 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119051899 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.14581638 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171282617 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169784815 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.117995442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.147129343 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.152096768 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.120874599 seconds)
  done (took 6.096209341 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115259858 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165845052 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.106841191 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15521138 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156082705 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.100736571 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.135124402 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099462698 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142777143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114224267 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.130968453 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106253833 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135552328 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10885983 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.130161509 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108969735 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.140257112 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108956534 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13321976 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103484648 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143530444 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117108582 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135885547 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101766548 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146468681 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131498302 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101541459 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150998135 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137940468 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125506314 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.126416533 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107786143 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.143921702 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099605488 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101506672 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.133325489 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100680981 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131856165 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100681569 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12685022 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098614381 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.120108094 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101221475 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14414313 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105728962 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.126702056 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104603751 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134743671 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106848302 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126102004 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101592899 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102041227 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134504214 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110218023 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.628518903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106214253 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.134554973 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100929969 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.137911829 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102328114 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127084698 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100087354 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137195439 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103274046 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138365934 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105830926 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130384158 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101633472 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.135698298 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10669032 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.132699672 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108083334 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12724498 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101289491 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.140399201 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107770946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134313637 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100940608 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132093967 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099373735 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087637594 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.129858387 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086692106 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133957777 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098572791 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131018718 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102922234 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135175129 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.11653675 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13921066 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106949598 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130207959 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101656195 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134797878 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097097437 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133503139 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1174777 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14966739 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098428127 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127797404 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115130316 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131708438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097304836 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122085732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108820646 seconds)
  done (took 14.213654492 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140304342 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.180452666 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131395055 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118371348 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.165001704 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.171624223 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108059118 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138961266 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101267241 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119720644 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13328508 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108167107 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133954268 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114520118 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171386651 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.140474715 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100630077 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144931966 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104937762 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.184424483 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149096141 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139031289 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170789738 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133900003 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105476993 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.167290446 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.174910007 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.11335404 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.14270223 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140611563 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144501938 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.174251695 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172105176 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104697425 seconds)
  done (took 5.869807407 seconds)
done (took 55.309168607 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.217323774 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408833366 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.186351541 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.183580734 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.254995009 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.205533409 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203951846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.378224353 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.968203854 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.173472556 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.184300996 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.185420653 seconds)
done (took 27.661576524 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.258869402 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340254289 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483585432 seconds)
  done (took 3.931766471 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184194256 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.183331969 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.427126004 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.192132574 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.184423814 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.201996738 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.183147654 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.189258969 seconds)
  done (took 15.669036806 seconds)
done (took 25.154599752 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.245363122 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.367294212 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.432834045 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.204680152 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.202631491 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.199302121 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.188230496 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.231441215 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.187993831 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.188993438 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.184226436 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.449425058 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.204418895 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.576748679 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.19499505 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.197111094 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.204143252 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.413763365 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.199509968 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.239119999 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.173745869 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.196748531 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.209037123 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.223225184 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.195418737 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.186300522 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.217856056 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.186075224 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.398591002 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.201021867 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.231429497 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.187817832 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2268171 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.197533541 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.298084948 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.217590456 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.373223417 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.196642582 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.183890808 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.191370464 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.373513094 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.599994434 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.18601242 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.194382022 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.191969319 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.251230727 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.17779837 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.921652456 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.191962176 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.187654476 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.193194791 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.580533071 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.191536098 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.198956347 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.19962007 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.428099513 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.188431281 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.239171286 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.221722146 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.195977135 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.188589341 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.192940918 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.249539168 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.190435269 seconds)
  done (took 142.651499184 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.189490133 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.188860821 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.188759917 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.235393573 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.193653357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.189221278 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.189618875 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.188162381 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.189374337 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.189810156 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.189758329 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.190445103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.193868161 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170292305 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.191156318 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.210295114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.193985125 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.208591543 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210076977 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.190017616 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.195474253 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.1944682 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.207863017 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.190175765 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.190052028 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.272880109 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.23933325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.194303056 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.193198844 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.19019403 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.235028068 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.210841127 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829769408 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047709411 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.202274811 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.219027083 seconds)
  done (took 79.818391107 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190216186 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190047569 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190181567 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223530938 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191469733 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191040548 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783831682 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789425221 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.931140276 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.473789419 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.616373705 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519339907 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197124344 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288236753 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206289031 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19647542 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207081114 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216785438 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192964631 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192670986 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770737346 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206736807 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19321237 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.371423431 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207564947 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224088859 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593859004 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.272906644 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209030115 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225073337 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.53427973 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243519581 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190894741 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604751376 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.550346981 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30922806 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193976106 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225409766 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193287525 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476764429 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193213056 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193634922 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195524898 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893834918 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19804092 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788403851 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198956747 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.163534679 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195488395 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194938413 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.286562677 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.967204238 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21590878 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19333572 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19473914 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198599836 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194578534 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193051465 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227425444 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.248151021 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30897181 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195035877 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195439455 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.196895505 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227509586 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19424285 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.362772592 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211168707 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.243223767 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256489937 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301223164 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78444434 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19815195 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293199893 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316888982 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.195323976 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194390273 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195664312 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194163207 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.30744185 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195169562 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.629851938 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373691963 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21284381 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.62888404 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297569399 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195549796 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617431856 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200545217 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195552813 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957994714 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294918341 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195371237 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196070254 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195208916 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.630608527 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794472633 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.458458879 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199607377 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.507267206 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200390772 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.638829523 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770948647 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904585399 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200940687 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311115424 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376808116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214236502 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19715715 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.629787769 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203842747 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258244546 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199642212 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597096511 seconds)
  done (took 365.094662315 seconds)
done (took 588.675433635 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.937567895 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.890051614 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.019278149 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.911317125 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.879676484 seconds)
  done (took 10.758643946 seconds)
done (took 11.879144568 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38989552 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391704366 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25918708 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.3925617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230027118 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411697483 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376350027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221492679 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304088057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283650478 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302981989 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25533255 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233565831 seconds)
  done (took 18.174576236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543524703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201223137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283101609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5514868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241141155 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542811317 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412107836 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.219519375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424949853 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215717246 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21481109 seconds)
  done (took 17.973467853 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553681346 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.200833652 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285114675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543817629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241636869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545661728 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416749406 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.220731931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398486041 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216692541 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21508672 seconds)
  done (took 17.960206276 seconds)
done (took 55.230626955 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241500745 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.372400105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22696117 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214624659 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209957497 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21307932 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215837352 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210891347 seconds)
  done (took 11.029364488 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210173993 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210095673 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209016166 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210312933 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208366783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21055242 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208096345 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211598796 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211074628 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211338248 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209186898 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208483935 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208272642 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209394693 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211036282 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21009387 seconds)
  done (took 20.480896504 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211259934 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209119148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207457798 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209080355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209288208 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210286349 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210995749 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208234208 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209998576 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209535867 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210353053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209756 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209953904 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209072622 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209976731 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211167205 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210041323 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210241428 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214414546 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209310015 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209967498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210239628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209494718 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209252062 seconds)
  done (took 30.16639152 seconds)
done (took 62.800027702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.203267188 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.203608236 seconds)
  done (took 5.533086832 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.272241527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.2724498 seconds)
  done (took 3.672754429 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212193218 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212806064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213365076 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21379687 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213631954 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211551367 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213942213 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213298174 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213947052 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213563698 seconds)
  done (took 13.258576529 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213223059 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21259019 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211332891 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214246494 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21414317 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21130646 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213776838 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213241297 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214955551 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211998732 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214688955 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212134475 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21522303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212049856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214550006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212205528 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212577087 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213289317 seconds)
  done (took 22.964112091 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.227982857 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234772099 seconds)
  done (took 3.590998801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342593332 seconds)
    (2/7) benchmarking "second"...
    done (took 1.2530354 seconds)
    (3/7) benchmarking "month"...
    done (took 1.323050908 seconds)
    (4/7) benchmarking "year"...
    done (took 1.311029899 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.254396727 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233122142 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254796123 seconds)
  done (took 10.100251424 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216745677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.411296864 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.524346734 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800416543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216009725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218139218 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.112455145 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.2200583 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221857271 seconds)
  done (took 14.069298218 seconds)
done (took 74.31534785 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.206106103 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.239112097 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.2351098 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224437751 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.505014593 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.236712335 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.210519681 seconds)
done (took 15.986940762 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.204808667 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.198733955 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.199569676 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.212015739 seconds)
  done (took 9.944154874 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209917543 seconds)
    (2/2) benchmarking "read"...
    done (took 1.528542229 seconds)
  done (took 4.868095725 seconds)
done (took 15.942296635 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216064614 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213925285 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216937422 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216918154 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.214807332 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215602769 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218344483 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.21468921 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214092131 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215183398 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21674123 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21679208 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.216790011 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.216257208 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216779475 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214476026 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216028272 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217359662 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215645242 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214674226 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216035479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217580979 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216114805 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215266254 seconds)
  done (took 30.313349989 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217459737 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215313151 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217720775 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218120064 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214278647 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217593405 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217064351 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21493581 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218324075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219223119 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215650984 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216253191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218125835 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215323533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217764804 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216228676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.217730941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216054158 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219123486 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217113654 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219650791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216865748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216603162 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219842268 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216909028 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21643554 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219806399 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217576837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219015031 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216744461 seconds)
  done (took 37.650713128 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224539505 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227043213 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219929004 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219952841 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.219039369 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219279022 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220803285 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220612348 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21959252 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.220023705 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220631707 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219820821 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220211867 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.219696316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220080165 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22004703 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219888283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220366628 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22124903 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220413322 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220600059 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220404211 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220402249 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220136745 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21997759 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220414243 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221561093 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219855222 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221348078 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220750796 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2213322 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220774392 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221029275 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222095225 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221747976 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222106947 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.226829131 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230426624 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221471307 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221441458 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220340657 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.222561808 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221786712 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2211003 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221702532 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222698562 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222502497 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221209022 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221886078 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222026106 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222572535 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.221421463 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221701739 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222831336 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222402791 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.221729486 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222175453 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222522065 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223137905 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.222673518 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222949851 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.222683416 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22319471 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.222081148 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223103506 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224372637 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224562214 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223214927 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222743373 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224290947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.223057329 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223081581 seconds)
  done (took 89.102990341 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223810767 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22245765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221671424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221154554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221512736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224210416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221577337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224394921 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220548531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224161802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224342103 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222472787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223226032 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224790471 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223932793 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221673846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.223919743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222094822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.224169554 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225994437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224775852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222161062 seconds)
  done (took 28.046463532 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224529503 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226139429 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221708963 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225559969 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224602637 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225148377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225030596 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2264773 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22442482 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222893362 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22340107 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224934197 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223863387 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223241762 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222970431 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225028864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22556375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224595967 seconds)
  done (took 23.177656705 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22422434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223759576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227404834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22190178 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224197242 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227360548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223838582 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225830248 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226375388 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.223116019 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.22726744 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225918276 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226880458 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224452087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227475935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223716347 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226382426 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224013511 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226886923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223956368 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225821182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228106664 seconds)
  done (took 28.098744815 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227454455 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228324148 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22455538 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224775023 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224316191 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227929963 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228751157 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225128222 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229864076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22726457 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224895046 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227107 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228472343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227105628 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226306735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225744521 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228425424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225571801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229414367 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226523538 seconds)
  done (took 25.67803251 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228822237 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228884667 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230072109 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22982258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228291014 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229262972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230040582 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229519914 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229328543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228675096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229339439 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229370383 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230192072 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230560496 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229069506 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229435861 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229381156 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229276593 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229760448 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229409244 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229764516 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229806424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230651218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230268742 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230230959 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229722189 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229514425 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231295979 seconds)
  done (took 35.571618986 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230651983 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232512284 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228392349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228524266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229917064 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229004455 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230016624 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229367056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231872054 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229838767 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231804015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232327708 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232540379 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23192324 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231980152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233499267 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23242468 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230239738 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229259275 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229155106 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.231907949 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232361682 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232304115 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229373501 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229398925 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232850095 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231254375 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232058005 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233865351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230871533 seconds)
  done (took 38.075761905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278361558 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278256236 seconds)
  done (took 3.701436615 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230885959 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233344365 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233478528 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233041515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232415845 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235472688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235094551 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232076842 seconds)
  done (took 11.011210018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231246644 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234471692 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234844824 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234232392 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234722113 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232874034 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24074135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256487548 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233656724 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233726898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240301743 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240233946 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234911178 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232509754 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232971215 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233617632 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234255791 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233879107 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232910909 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235475772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234398428 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235086744 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236639841 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232951116 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236238871 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.245022318 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238812157 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236777117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233087765 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238232079 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234391635 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234049789 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236330352 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235157814 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236777613 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237562844 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24412856 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257141344 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239604148 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23592039 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237318393 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235033005 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235412317 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236074259 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239672333 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237017019 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237821231 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235267094 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235472784 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.23960599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243187574 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236557325 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234909321 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239476169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239970325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243458724 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.2578 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240336715 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246464005 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247833403 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248418264 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261814323 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238058358 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23608391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246809183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261050474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243046514 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.256981274 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235932835 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239052121 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243298122 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248316007 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264130871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237561343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237367947 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238530398 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239525 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242787877 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246906793 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263266038 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241266141 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241533691 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252256227 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263999255 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240007526 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24194919 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241111459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23927712 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239053985 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248892914 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259275426 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241332947 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.236846632 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237368231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240262578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239179268 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.236649683 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238528837 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238624006 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241879589 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239747605 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24252439 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247337411 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239084407 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240464462 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244446239 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242156553 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238675246 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245437585 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241226267 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237853194 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240839887 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24429381 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238427573 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243763306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247454646 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239760004 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24061291 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239540216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.240819346 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250892239 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26503585 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243013007 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242242202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245031263 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253076769 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240627555 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242732508 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243079622 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24002052 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240173049 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241572483 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243357849 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24136408 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241460614 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240997445 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239891333 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.242284831 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242310443 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241562818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241651932 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241872079 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241753274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24252962 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242310457 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240925699 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246448153 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240899464 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241708212 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242343247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241272885 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243206523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242674417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242698946 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.240695396 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242911518 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241976265 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242410442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244909341 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245610896 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244729453 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2430756 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247146937 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243645633 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246906558 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24385018 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243241916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245067383 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244973755 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244699356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24521237 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241734034 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248242914 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251677558 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246785783 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244388783 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245806756 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24673469 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244357779 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244260264 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248854878 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252329227 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244180121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.251310022 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24456243 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244595734 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245936826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24384909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243564559 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24700673 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247822633 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253482577 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257679717 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271841437 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245676966 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251613553 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246638047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250163714 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248500322 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246279715 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247303707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245866993 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245611035 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248021628 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247178395 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245895232 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.245415772 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24846743 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247419997 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246356004 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248277153 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246012331 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24687814 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24497016 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247116842 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247549532 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245973601 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245877929 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245695083 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245627907 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248396447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247066373 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25122362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245082353 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247648989 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248316643 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247039482 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.245220657 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250094749 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247963615 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246593459 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253539363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266605301 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247778481 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25386381 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266357153 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247642716 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250059018 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249947749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247129708 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250828114 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258111539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249412748 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.248919331 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248758102 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247789301 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251734213 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254188216 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.245952257 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.2490211 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250335434 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249528631 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24805364 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251154531 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250596878 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249910152 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251731366 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251217391 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251967463 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250941559 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250341495 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250823376 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250494939 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253102043 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258693743 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254449538 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249756991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251581459 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251788612 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254796645 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.250009108 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250363546 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250410962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263556135 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276298991 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256402346 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27181299 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252514899 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256121187 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272617788 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254330748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251398565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251281801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.249605006 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250604843 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251413802 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252592281 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253725384 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252224958 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252520125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25756367 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253386618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251014373 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252485428 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252607059 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253878034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251243471 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253347729 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253939083 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252025269 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249597195 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.251483995 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258209654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272591103 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25345171 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252774759 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252240859 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251632737 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253654875 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252625926 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257200903 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260709759 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25571425 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.260921857 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254703308 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262370358 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253763044 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.256182686 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261511928 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252471701 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251147634 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.254247299 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254950399 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261027502 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274931205 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.256150093 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258667345 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255354454 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25483348 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256138786 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255394859 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257557815 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254290333 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263411383 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278297102 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.25811461 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256123559 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253530954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255380742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257019646 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254541972 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2567884 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256806236 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256475784 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.256037603 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254615586 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258578223 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257508533 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257595862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.254551869 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258167936 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263456036 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278258985 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261296924 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259257331 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.263233034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256003594 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263858439 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.27764004 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257871128 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258134717 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259584706 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258257348 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256938653 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257520623 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258255481 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260045205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262321481 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257900175 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2599211 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.257809821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257012622 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.257499323 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268644637 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28310167 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259457059 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263429183 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257259634 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259898335 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263449276 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258552062 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257650069 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261495322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26975175 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269639373 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25849015 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261449131 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258024777 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259834987 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.260192628 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260604081 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260499028 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25940045 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258452428 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.259193009 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261987474 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259761673 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260451992 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260996937 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.261339376 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269797108 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259562574 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260090954 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261038268 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26268238 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261105883 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.260246766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.260750066 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260996897 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263059014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261404375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266908489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26713062 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262176358 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259329734 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262962415 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260413817 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26053639 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262776003 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.262218052 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262897911 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262509097 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26172998 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260780148 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260910322 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262035521 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.261266291 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262748142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264967318 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.268627493 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262674773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260666764 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.261738914 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265237453 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260384662 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262072632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.268078339 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266226764 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.271949532 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270207387 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267695338 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264673692 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267155926 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271557049 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264481485 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.2650199 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.264788303 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.263138037 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264567836 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267524643 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264426447 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271097721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26275477 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264739363 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271242452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286808291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264794747 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266801033 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268486759 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263981479 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261540023 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265372238 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.2633407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271864645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284291563 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266555865 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267343848 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.263652054 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266821478 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270479256 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266200597 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26501461 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263492927 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265038216 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266672431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26725218 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264638474 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263226638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263830577 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26763005 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269401808 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264786511 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266139944 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265532714 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268122908 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265436054 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267595031 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265309576 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.2655669 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264943218 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266533351 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.265096848 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267797541 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265084429 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.267404152 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26859384 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266514393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270141455 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.276984543 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275074801 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265588998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265515145 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266252231 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.268814869 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266554846 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.267810737 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267371197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266543185 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269612063 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268367174 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268876873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270644695 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281394025 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.291940949 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267603639 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268885661 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269834173 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267912188 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267633434 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268723252 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270587281 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.272663182 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275278291 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269085978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273868303 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287770146 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269706296 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275701944 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271648733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274876992 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.270465248 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268666483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.270807251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272853398 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284034325 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27066589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280305035 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298521909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290511301 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270251626 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270778525 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268879002 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269023904 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271867696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271151475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.2712643 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272151266 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270678921 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271146752 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274948099 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271215036 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27237747 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272085062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268501958 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271841858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269298097 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272045284 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272727395 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270981714 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.271391561 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272278011 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270382164 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284112358 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296963652 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274459434 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270512221 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270672914 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274471124 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274648853 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282156323 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281022461 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271367082 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271703452 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272539943 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271481776 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272721543 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271435661 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272901483 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271069015 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270837828 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283032918 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297152806 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.275617907 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272912461 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273157356 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274811525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272194542 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272901257 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272663992 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272349116 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276162198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276392587 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274549944 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273068541 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27543217 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281673131 seconds)
  done (took 749.560345238 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271752243 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271947049 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271209517 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271323796 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271892937 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271277584 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272061977 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270930231 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271311909 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272555489 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271746775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271636869 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272581223 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272122355 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273511122 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272081265 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271905883 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273481734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271120806 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271530724 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271069456 seconds)
  done (took 27.891224019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274550154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27440044 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273514205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27205928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269824984 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275211192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271584879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272710986 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273749915 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271126754 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.270251014 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275219159 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271117089 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27204396 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270793908 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276351606 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275270146 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271069681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.273158575 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273516751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273502298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273763332 seconds)
  done (took 29.18617196 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276414916 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272680424 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275378354 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.273320348 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274356776 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270496871 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.272583364 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.273989037 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27397088 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.272922517 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.271935714 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.272993867 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282307674 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.281306788 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.273075844 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.273901538 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272292632 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.275508089 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273073076 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.272146342 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277244286 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.291134145 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.270697146 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.270416468 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272567235 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273610581 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.273384777 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271891585 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.27368277 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275388338 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.273541815 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.271460723 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273222408 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.271362161 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.273280105 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280259693 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272901272 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.268684886 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.273023213 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281769337 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.294511609 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27280107 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277904497 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.295385991 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273808887 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275214456 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.280230864 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.270513977 seconds)
  done (took 62.398596949 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272756029 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.272015436 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.271250274 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27294 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273889434 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273650642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.273776031 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272641937 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.270307689 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270364552 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273133868 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272554585 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271680214 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.2740866 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.272158566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271263123 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271360645 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269285221 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.27206143 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27111958 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.271209149 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.274489503 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273902412 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272513966 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274126181 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271076746 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271449815 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273669644 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.272650459 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.27245681 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273667379 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274313347 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.275938727 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271330671 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272515838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276886721 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.275532237 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.272594442 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275635925 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272585427 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.275384516 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276644984 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274529771 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276759217 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273484852 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273738301 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272583937 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273936988 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.273719897 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275210513 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275642651 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275063111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275961233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.273594885 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275061385 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276598754 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272696155 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273643478 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.276758698 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274119215 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273045993 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27625782 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.27318404 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277041913 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276989852 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274064667 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.274465995 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278859955 seconds)
  done (took 87.793021261 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275964835 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276284269 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276614646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27626554 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277274711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276505521 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275696999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276327341 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27588037 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27711634 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276858233 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278692616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278441801 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279792829 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276643523 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276258226 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275923366 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276623444 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276613714 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278342076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276847161 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276321637 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276583596 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27722886 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277882837 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278208048 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277954944 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277447113 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277874803 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277620865 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278373496 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277380402 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278319359 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278152606 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279503283 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279005207 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277929154 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279079222 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278396979 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278495194 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278442001 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278222197 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279228033 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279022319 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279387146 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278689672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279313016 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279200711 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281039453 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280549469 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278646684 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28018737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279661046 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278700373 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279916306 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280425092 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280133644 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280664078 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281974133 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281113782 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281386342 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281916768 seconds)
  done (took 80.440441578 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280728605 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280844229 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278701505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278938284 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281813729 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279594796 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281979635 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281209208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282506131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.281060681 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282037389 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278739834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281009414 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282907186 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278902795 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280509776 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279725973 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278553299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281180734 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279460899 seconds)
  done (took 26.798725406 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279923031 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282724008 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278697699 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280706506 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28323193 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280370316 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282730638 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281958999 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280125954 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281437415 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282403019 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283439852 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279095162 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282353547 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282206624 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280380468 seconds)
  done (took 21.690621962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280773928 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283233688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.28172464 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.283069749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281541749 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.2816068 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284408467 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281424057 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.280295936 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284046049 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283420616 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283152085 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284815321 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283434609 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281902013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.28394387 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.28195894 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282830738 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284472107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283760723 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283397759 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281914044 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285117103 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285023736 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282293007 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283370775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283231896 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283787858 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282591627 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28421259 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283256622 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283150551 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281596112 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281712807 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283803082 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.28205764 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285913282 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284304786 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283904212 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.283612287 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284061449 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281390381 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283661451 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285952539 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282743629 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283357408 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280212734 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281365493 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282295451 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282245718 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284700719 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.284170964 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284127877 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283907081 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283766597 seconds)
  done (took 71.761890147 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284755669 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284459359 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282782204 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285584067 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.2836279 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.280908068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284760132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283054343 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281536931 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283689779 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282424329 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287040762 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281720549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284207104 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282893501 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283775189 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28146232 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280981137 seconds)
  done (took 24.29034082 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283347755 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282684394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285516479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28277938 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.281218912 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285280272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282012877 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285132141 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285328154 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282729672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28187638 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285048168 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285418166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.284113867 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282424118 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282887108 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.284573052 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284092153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283157872 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282319691 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286151595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285644014 seconds)
  done (took 29.435521573 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.283646206 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.283874025 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.284538332 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.300394407 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.303533414 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.282196285 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.283250616 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.283279128 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.307013899 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.336515685 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.332529497 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.303216727 seconds)
  done (took 16.775837756 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283314369 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286210451 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286999953 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286677736 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28542878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284372954 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2850286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284234974 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285929475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284719575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283837592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2867956 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284874287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284809385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287448533 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285446705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285721118 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284650534 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285116067 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286629357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281542441 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285584733 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283760152 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283284284 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283002675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283743366 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28731441 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283672566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283210064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285951157 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286481219 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284549192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285942037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284745152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287563384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287205207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284775934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286975557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287871467 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284273441 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288247769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28807036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286678154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285152936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287889013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284532268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283833468 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284537074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28581952 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287393267 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287686112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284563865 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287667567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287336223 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288541986 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288269229 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285609309 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285545264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288570419 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286622235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285916099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29003989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288413711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28699893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288095308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286361145 seconds)
  done (took 86.061011554 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287617418 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287086389 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286891172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287647354 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285745581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285418784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286692455 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285960073 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286512188 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288354887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289337665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287130811 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28841559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287279487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286702919 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288591472 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287869954 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288036438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286992306 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290436096 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288958428 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286444823 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28715823 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287355985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288880017 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289904262 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288449 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288313955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288939344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28823165 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288600756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289166673 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287682226 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289557646 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288535946 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287980407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28922808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289082019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28960056 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290782264 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288651056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290903153 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288726509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288428253 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289521291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289388613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288422956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290033868 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288423572 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289680123 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289213041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289465191 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288684373 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289222748 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289593394 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28952611 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289690947 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288820456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289028627 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29221474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289840723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289814995 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292020535 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290561116 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289659075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288666057 seconds)
  done (took 86.246005611 seconds)
done (took 1751.888783157 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.454490771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406382955 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288689533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.300537583 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290720611 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.284083056 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.304948086 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289584899 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.290680033 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290097289 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290784575 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.476520074 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.286999457 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.2903724 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.291598567 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386935764 seconds)
  done (took 26.421692979 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.320455563 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29764902 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414790231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317603283 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320004785 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486363913 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.354321464 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.297984881 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47575031 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.341261728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.292002652 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320913178 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29747547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.293294195 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318046044 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.486842781 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.55778687 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.296130852 seconds)
  done (took 28.68743132 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.767374019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.301808283 seconds)
  done (took 5.26766739 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316815319 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29515328 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.296418739 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294741533 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.286031123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.307814375 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.295900556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.289065631 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.297379291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.429357998 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.301270047 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306007918 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316590519 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296175523 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293407969 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.333938845 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.491406978 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295721945 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293327379 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310458573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294869605 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387366415 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.343526876 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297613364 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424458844 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.295337139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303231297 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303063922 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.428102171 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294950004 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.294049704 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294761025 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297405262 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240752411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.834517179 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.29195895 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32083477 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303766788 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293832165 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.454828324 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296604251 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30178293 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.287229322 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.827287468 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446151725 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419501294 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.321415213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29987973 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297899091 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358666477 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.300622065 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297449 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339903472 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.118475432 seconds)
  done (took 83.464431711 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.299594265 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.288978007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470836929 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.316952383 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287981911 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292332917 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.292598625 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.590622423 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.300238153 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289100322 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599185832 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.858685324 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308318157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.347775515 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.149897774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.350172021 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298456286 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.290437461 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.28925651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.291834432 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845539069 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294166618 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.293777234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.406068934 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.329419894 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81783464 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295204474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.293799959 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.288715527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.290468935 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802582351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310673572 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.342992418 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.297060619 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.573898519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.681179063 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650807348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.297392105 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.335890908 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.294670342 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.290870179 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830034044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655870556 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.292445896 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.306245981 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805350667 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.290944447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.290572442 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.299980147 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541450284 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.294968357 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.302413478 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.298828585 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.294948056 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.291423387 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.393462796 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.359207613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814365357 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290690768 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.302226409 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313013819 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291725938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294246636 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294454208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.29160759 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662084499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464238014 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.293385354 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667536778 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805382377 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.311887158 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890087561 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314186951 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305928169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.503097511 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290633982 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.295750805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822660331 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314937 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291730569 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63779613 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.296003436 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.592523255 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.315629642 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296044302 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853141962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.299899456 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.378071001 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.291907255 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.314857362 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.313499722 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29454556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.574126169 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.361579519 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29335475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.292923364 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.304506182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29310753 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.29490275 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296760664 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87030628 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.315200613 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.292756984 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296044036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296124224 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.294675677 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.295925313 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.293731548 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560874156 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.298988057 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.299666768 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.29672546 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295321612 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.32180965 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.396388159 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.300208653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.610704847 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.297174192 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295031823 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298793239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294919047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351582031 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29753891 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.299612838 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17624212 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.636313169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316010053 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.296152557 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29424959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295075956 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319204152 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299269756 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.327093158 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.297002236 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049255951 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327660104 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.310941429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.294947191 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303515187 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297348997 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307327388 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298340597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.591579113 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.577652944 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.455879011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.296678955 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.297075147 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058015907 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328100297 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477462934 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321545888 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296549863 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583934121 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.508438247 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296940753 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.293652799 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.296330439 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55635619 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.299133988 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62304489 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823708901 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31055103 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300902376 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.040164986 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.995101299 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.298341429 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.294368498 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579437626 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.317005272 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.296644577 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.294293571 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.295760226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294513244 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320938803 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29494919 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.292971069 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.292878237 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.328409445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489427688 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312053752 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295892073 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800230654 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324446693 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293623632 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302465636 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.298063246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293540144 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.351246497 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.297563181 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.333350167 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.297166987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299464264 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885468737 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294671946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.299112211 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484640306 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963709251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.314823183 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31024949 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295908449 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.191834112 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823335692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316057304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.594633181 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.29888693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.337658436 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293609555 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33842878 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820082611 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298463142 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296683949 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929116028 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.310169176 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.771897074 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.293203827 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.305418702 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861200395 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.310321708 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.300556948 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.292969753 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296291104 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584845996 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.297952519 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.312881205 seconds)
  done (took 489.782376617 seconds)
done (took 634.820906764 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.294057363 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.295020803 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.287278775 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298481814 seconds)
  done (took 10.381150631 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.305475794 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.302852711 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303107185 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301011468 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.305264376 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301694271 seconds)
  done (took 9.024792061 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.293873859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.294857403 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.300145296 seconds)
  done (took 8.09501769 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499474949 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.319767169 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.617567117 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.313914464 seconds)
  done (took 8.956980398 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303689229 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.304082567 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.303513192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.304038677 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.306992571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309464234 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.305576931 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.305084077 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.308851482 seconds)
  done (took 12.956556821 seconds)
done (took 50.620837227 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.283803699 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.287065416 seconds)
    (3/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.51436779 seconds)
    (4/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.33885889 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.28631774 seconds)
    (6/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.385357089 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.034974557 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.436090987 seconds)
    (9/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.287027427 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.53935229 seconds)
    (11/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.31508155 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.340432966 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325015603 seconds)
    (14/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.287272954 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.401237134 seconds)
    (16/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.188559153 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.345467161 seconds)
    (18/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.286816754 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.302464363 seconds)
    (20/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.325356414 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.290997503 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427426128 seconds)
    (23/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.304326062 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 2.30189048 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.410549696 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.28601476 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.326175901 seconds)
    (28/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.19365001 seconds)
    (29/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.316971375 seconds)
    (30/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379180126 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.424074747 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.038580863 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.321659248 seconds)
    (34/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.308329428 seconds)
    (35/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.40253961 seconds)
    (36/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.3081742 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4420943 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.473235322 seconds)
    (39/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.244297858 seconds)
    (40/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.560944644 seconds)
    (41/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.363931632 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.840830701 seconds)
    (43/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.286038766 seconds)
    (44/286) benchmarking ("sort", Float32, true)...
    done (took 2.314152093 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.300148977 seconds)
    (46/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.388406342 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.301888082 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361341082 seconds)
    (49/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.422582887 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.326167741 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.760559809 seconds)
    (52/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.317850498 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.304374785 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.288300803 seconds)
    (55/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.288620456 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.287199764 seconds)
    (57/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.326775108 seconds)
    (58/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.444553618 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.328091875 seconds)
    (60/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.31392487 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.293543879 seconds)
    (62/286) benchmarking ("sort", BigInt, false)...
    done (took 2.301990991 seconds)
    (63/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.301731071 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.319029964 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.313826917 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.317997998 seconds)
    (67/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.636642161 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.393194299 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 2.301491832 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.308199968 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.184061008 seconds)
    (72/286) benchmarking ("sort", BigInt, true)...
    done (took 2.302685723 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.300050357 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.309123627 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.29101649 seconds)
    (76/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.095026143 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.405823579 seconds)
    (78/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.389097448 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.301037082 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.319988658 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.333793236 seconds)
    (82/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.839146087 seconds)
    (83/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434677021 seconds)
    (84/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.295818679 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.182152195 seconds)
    (86/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.386202448 seconds)
    (87/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.309139778 seconds)
    (88/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.520091393 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.132249501 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.140426312 seconds)
    (91/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.879802783 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.418605304 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.300897727 seconds)
    (94/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.301271232 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.14594761 seconds)
    (96/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.386605458 seconds)
    (97/286) benchmarking ("sort", Float32, false)...
    done (took 2.302390108 seconds)
    (98/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.302048776 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.293897741 seconds)
    (100/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330081068 seconds)
    (101/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.302600409 seconds)
    (102/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.369883722 seconds)
    (103/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.290414436 seconds)
    (104/286) benchmarking ("sort", Bool, false)...
    done (took 1.818128183 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.332517337 seconds)
    (106/286) benchmarking ("sort", Float64, true)...
    done (took 2.303172291 seconds)
    (107/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.295414017 seconds)
    (108/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.562991567 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.30589706 seconds)
    (110/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.391742983 seconds)
    (111/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390331774 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.03938162 seconds)
    (113/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.390333467 seconds)
    (114/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.313188507 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589835758 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.299851871 seconds)
    (117/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.292795924 seconds)
    (118/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.86702358 seconds)
    (119/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.059320034 seconds)
    (120/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.302440062 seconds)
    (121/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.306592486 seconds)
    (122/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.811182167 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.433163611 seconds)
    (124/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.292682023 seconds)
    (125/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.292803863 seconds)
    (126/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.317333972 seconds)
    (127/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.88873434 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.067174708 seconds)
    (129/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.333130944 seconds)
    (130/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.291926966 seconds)
    (131/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.312151717 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.314475547 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.296981202 seconds)
    (134/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.315571088 seconds)
    (135/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.330886806 seconds)
    (136/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.300853599 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.345256888 seconds)
    (138/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.294799979 seconds)
    (139/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.352083166 seconds)
    (140/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.356975099 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.304823913 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.346096973 seconds)
    (143/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.437556616 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.294372181 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.552680545 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.352145385 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.629496772 seconds)
    (148/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.319660795 seconds)
    (149/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.453546367 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.296588352 seconds)
    (151/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.346043706 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.624412807 seconds)
    (153/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.904740901 seconds)
    (154/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.374815367 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.352889958 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 2.309347537 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.067143462 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.043830984 seconds)
    (159/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.27213359 seconds)
    (160/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.33482519 seconds)
    (161/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.656318818 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.300031844 seconds)
    (163/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.317765997 seconds)
    (164/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.337721033 seconds)
    (165/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.351040178 seconds)
    (166/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.296412895 seconds)
    (167/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.299006867 seconds)
    (168/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.635018582 seconds)
    (169/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.30278354 seconds)
    (170/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.43673432 seconds)
    (171/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.296369606 seconds)
    (172/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.296868323 seconds)
    (173/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358322726 seconds)
    (174/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337399494 seconds)
    (175/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.320762406 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.296331653 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.324647974 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.398864313 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 2.318742609 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.369270901 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.297240529 seconds)
    (182/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.298024773 seconds)
    (183/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.370975596 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.718861981 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.339238695 seconds)
    (186/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.860714194 seconds)
    (187/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.45470013 seconds)
    (188/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.297717577 seconds)
    (189/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.315849639 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.311749204 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.306790941 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.519388901 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.29727437 seconds)
    (194/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.301039463 seconds)
    (195/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.636086821 seconds)
    (196/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.301787528 seconds)
    (197/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.433963455 seconds)
    (198/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.256088155 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.06620907 seconds)
    (200/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.301259142 seconds)
    (201/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.32168222 seconds)
    (202/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333075463 seconds)
    (203/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.752854788 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.372483089 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.375243824 seconds)
    (206/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.446191408 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.297996343 seconds)
    (208/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.349973731 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.297434069 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.336262952 seconds)
    (211/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.297886939 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.928210841 seconds)
    (213/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397070362 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.702241813 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.337793439 seconds)
    (216/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353802829 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.132457264 seconds)
    (218/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.174386316 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.310860045 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.199378855 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329650293 seconds)
    (222/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145824982 seconds)
    (223/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.034947965 seconds)
    (224/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.316525143 seconds)
    (225/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.607355549 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196083883 seconds)
    (227/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.322246091 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.518819703 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.32927036 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.300961884 seconds)
    (231/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.301570035 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.299841535 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.30016569 seconds)
    (234/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.339945914 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.340360476 seconds)
    (236/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.164438706 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.699402858 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.317703691 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.692164418 seconds)
    (240/286) benchmarking ("sort", Int8, true)...
    done (took 2.311489849 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.349741823 seconds)
    (242/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.309548825 seconds)
    (243/286) benchmarking ("sort", Int8, false)...
    done (took 2.316616952 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188054441 seconds)
    (245/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.299865623 seconds)
    (246/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.132525841 seconds)
    (247/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399663798 seconds)
    (248/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.301266226 seconds)
    (249/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.935387077 seconds)
    (250/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.305388145 seconds)
    (251/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.300523987 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.330514101 seconds)
    (253/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.419000362 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.640393532 seconds)
    (255/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.664202092 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.300077726 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.082131182 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.708230746 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415338411 seconds)
    (260/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.418684976 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.312466285 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.418451464 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.431808804 seconds)
    (264/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.341786013 seconds)
    (265/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.314428646 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.381884583 seconds)
    (267/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.302988047 seconds)
    (268/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.313757832 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.941639389 seconds)
    (270/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.313558261 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.138171384 seconds)
    (272/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.310523877 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.303672474 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.373026134 seconds)
    (275/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.302987199 seconds)
    (276/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.3262254 seconds)
    (277/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.656778943 seconds)
    (278/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.466611191 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33420191 seconds)
    (280/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.314664021 seconds)
    (281/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.305330464 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.523787364 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358787367 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343562421 seconds)
    (285/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.897621704 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.327060058 seconds)
  done (took 558.778389319 seconds)
done (took 559.985147917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.348799868 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370567605 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.325250291 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347018703 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.437357625 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.504467333 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.335373801 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.328028972 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.372882199 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.375186859 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.331819962 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.504494795 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328940489 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.327832292 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326045607 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370240276 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.318276209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.331601687 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.345158601 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.336897947 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343242157 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.334213958 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376426333 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.504275445 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.330097786 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.33001557 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.33229922 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347370251 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.440054226 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.330937074 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330296348 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.33981085 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.320600039 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.328854864 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.322345944 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.348541548 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.338988655 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.338251092 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331230063 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.442543194 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.318301 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.334842378 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.331238258 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.32877876 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.328985674 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33303384 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.330762219 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33399753 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372183162 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372839777 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332014786 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.344880533 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.337902873 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331100986 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.339746188 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33042569 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333140465 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375759166 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.349562853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376453362 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.331938581 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.337392902 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332615062 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347689624 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.338672669 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320202855 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325948854 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.334536715 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.320487855 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.340073668 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.319524699 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.34018353 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.33271386 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.345310028 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.363430826 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.324572653 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.329392408 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.329307894 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.339640506 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329189824 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.342634197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372912435 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.336467504 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331724905 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373608696 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.508584181 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341615275 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332947302 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340641105 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.35094745 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.339921467 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.343372999 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.33541214 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326636349 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341253175 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335854248 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.342190517 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.341368488 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336827776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343494381 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.326224405 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377350431 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329714616 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329685615 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331831023 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454574095 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.325058032 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.333778572 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355309547 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380070267 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334302492 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.33681921 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.346642434 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379039944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.343040036 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336510017 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329578882 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.337707065 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.326229608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457885104 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.335583379 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.339857764 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380039239 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.336612743 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330836669 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.329061451 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.340258037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376623065 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.456334846 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.345356521 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.446970976 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.33418543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.337692834 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.365774669 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380614885 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.366861608 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.336452891 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38038822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352066827 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.331670398 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.344351199 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.344849882 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.335672896 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339855031 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329437897 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371039969 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377543777 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377804324 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356753737 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456947374 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332933252 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.32513297 seconds)
done (took 222.711988923 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.396279395 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.331808852 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434911178 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334269475 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434516477 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.434311585 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331685608 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.332334805 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.332151989 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.713806869 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332025597 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332156532 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.332526619 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.332489491 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.417445216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.335846351 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332765328 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.674305726 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335416339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.404159807 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.333266783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335258458 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.33554626 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.718520645 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.332277136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.328143899 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40478374 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.336661206 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.682079441 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.328281152 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.331770212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.681864468 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.424265252 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.353026755 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346850768 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.342867268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.437222198 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.353279003 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416845055 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.417479374 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436866942 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.374062052 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.328713864 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.333054462 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.33939819 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.337786742 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.335232012 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.36521462 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.334805537 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.335819523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.678267836 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.346203784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335583591 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.335278095 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.335231119 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366102866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.336296388 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336432073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.425333261 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.33711929 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399836681 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.720075783 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.716213809 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.338747465 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.333222601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.336377533 seconds)
  done (took 104.578140687 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402098927 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411435289 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448845893 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358279596 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38779051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.454181267 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.35886392 seconds)
  done (took 11.059314541 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.343903535 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339470068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387445248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386798739 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338203879 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553909632 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340055704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348576924 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.337761669 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.413467999 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.340172879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340672723 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345997324 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.336146941 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38608344 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.349259916 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45336371 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.340082041 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.340651998 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489953801 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338140751 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34613885 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413151994 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.350503592 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.34150804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.344895225 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.294101619 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339539896 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3379491 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338898361 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33747023 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450356941 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341136986 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.337644527 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340136611 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.502002276 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.342576991 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339526783 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3428083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.34159017 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341420409 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.342017796 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341064172 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339929742 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.342284435 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.364641649 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342119124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.343260595 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342090726 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342461784 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415123774 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.343081363 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339196309 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.340170286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.417853833 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350324739 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342328486 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341040437 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342942826 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340833123 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492713602 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389918675 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342050563 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390383173 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343625681 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344271346 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.344287228 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.342406351 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43583371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.343951165 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389497927 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.34169396 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.563789807 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.366617616 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345790632 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345909516 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.34361396 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34180492 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.340306978 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.349604708 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343087847 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.343391755 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.348632827 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341589794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343624748 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529131827 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500889404 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.342314831 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357137104 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.350721904 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342175165 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.417913166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.34451328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.342689309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396967282 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457985344 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420583405 seconds)
  done (took 138.908795206 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.349640202 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35271131 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.345193407 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367512338 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346262511 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343945872 seconds)
  done (took 9.34768854 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347428138 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.348193134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3466378 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345908074 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.344652236 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.347001022 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.346084037 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347693526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34989484 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.347838989 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.347202727 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.349655117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.347783733 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.34632521 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347224241 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.347315732 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344652746 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344843708 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.347176444 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346087435 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.344215307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.345660379 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346096478 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.346913157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.351935264 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.347467824 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354914906 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.347640974 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3472175 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355112244 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365581279 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.347959567 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.349492921 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355681539 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356490593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.354236776 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357645673 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354794638 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350421415 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351287262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.35294359 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348383996 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.348958694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.349739436 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.34935735 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.353188677 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355500876 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355157591 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348016507 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350370072 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.352513851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351136804 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.347188795 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350637095 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352276891 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369095946 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355252659 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350051503 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.349149363 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350538253 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.352539372 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.350688211 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351946388 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354230676 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.34845911 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352570375 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351475251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.35433723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348955523 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.352072736 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.352171806 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.348763102 seconds)
  done (took 99.474153158 seconds)
done (took 364.60081178 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.776638716 seconds)
  done (took 4.026867908 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.433903521 seconds)
  done (took 3.684776831 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.668613659 seconds)
  done (took 22.924440448 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.417798244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.379770652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.36346794 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.353613809 seconds)
  done (took 10.764440639 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.599865385 seconds)
  done (took 3.847219268 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.342584197 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.34466028 seconds)
  done (took 5.937046765 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.635996155 seconds)
  done (took 3.884305944 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.764257454 seconds)
  done (took 4.017310632 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.352066139 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.361207467 seconds)
  done (took 5.97116628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.332835406 seconds)
  done (took 3.582670268 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.276617135 seconds)
  done (took 16.527635843 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.343516693 seconds)
  done (took 3.596801146 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.382255568 seconds)
  done (took 3.63246941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.938172285 seconds)
  done (took 6.189497468 seconds)
done (took 99.836821774 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.34253376 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.351094766 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.34830388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.343406602 seconds)
  done (took 10.635915269 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386618148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.386734716 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.387360733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.396878377 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.389472989 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.386884146 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379668803 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380042247 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.397859925 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389775323 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389157789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.389852382 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.387589259 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.378857428 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38882508 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.388344436 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397719565 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.388353446 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.379319609 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389802053 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355137998 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.397400075 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.390108905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.355028839 seconds)
  done (took 34.507385746 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.854016342 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.459057061 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.506355546 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418317031 seconds)
  done (took 7.489016568 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405583848 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.40807008 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42024018 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.457265802 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.485058861 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.417566284 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.378209533 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375057964 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.361686966 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408522149 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.4829478 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.425970938 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.494435047 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353975333 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.561383357 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354564484 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.355458514 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40740785 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.458793543 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.486512824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355427887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.406625224 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410820955 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425259515 seconds)
  done (took 35.35021976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.355461583 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.37492048 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.355893015 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.354454931 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.364820804 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.355831028 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.356155751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356909367 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.354480561 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.361940839 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.354017258 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.367603156 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.355659214 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.356095752 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.361878057 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.356818838 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.363313822 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.355017211 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.35707458 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362983174 seconds)
  done (took 28.434913867 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.349071339 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.348776051 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702040341 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605963825 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.349258584 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.348514238 seconds)
  done (took 13.958991118 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.426329721 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588005228 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359534598 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.714405224 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.798490749 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.362483864 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357474389 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.606684238 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927399673 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.902516798 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419530491 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.428637898 seconds)
  done (took 20.145546099 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.349362196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.354062745 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.369594464 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.372174061 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.41030872 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.379174387 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365020418 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.350519827 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.417172799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.432536034 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381109191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.414469884 seconds)
  done (took 21.851855009 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440320429 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352363963 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353082254 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398282861 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35317135 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196641892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362153118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066407038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377082154 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629222535 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353702626 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447598272 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608779798 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367067952 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358444915 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.339689933 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585200775 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859103115 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359442824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360175465 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384368438 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35346607 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362246974 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576773068 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355362021 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355393953 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.61489169 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354257438 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643762368 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375002406 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365561842 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354918473 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629643081 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02165114 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47073672 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571391681 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361717684 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358126966 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.365972244 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.363705477 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372726456 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361959896 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367538646 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356117213 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356458452 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355697908 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084380813 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381822737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.354168168 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357350849 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617430948 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456786867 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.361635115 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356899068 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432513744 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356391498 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36136844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454265016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935363768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357584191 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381686257 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.379217961 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36388021 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366830265 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987850572 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.363311533 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36155571 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362278014 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35773248 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367014022 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378764818 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357946553 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384072859 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357967863 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077014321 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367092572 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364293732 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91498263 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373422929 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.36376672 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587059472 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357140181 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35838727 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.357442075 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357800255 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09065044 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372938706 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.345067127 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400630477 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093337608 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597585698 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37703338 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383842424 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583162905 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.344484994 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35957211 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.35949814 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366589647 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381876869 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079840346 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379744504 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36461818 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616044026 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572587378 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363733078 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35134968 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851689757 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377330302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.382366584 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37373336 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583215564 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.953084466 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381258343 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361108468 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399751368 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361358889 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131400176 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367107872 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.468626824 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365589643 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640192245 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.167227369 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368739792 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430751156 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364291089 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36193476 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374845937 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36736814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361976951 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.570720434 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385887753 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378048893 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.362674313 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36281757 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.372932659 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378180473 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.368525165 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586293223 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361598543 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643651405 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362951931 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361826388 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36367362 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587481903 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.362053212 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.703157032 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62243253 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368558841 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372173846 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379510811 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382034128 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464085241 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38543417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.363743228 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642011042 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.368665144 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367846466 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378475594 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370992026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369690242 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.371432863 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363346998 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96189238 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347032463 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373182101 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25718227 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.380588559 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433270625 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371571931 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585374862 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.364102076 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373413818 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387831328 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.371341491 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59351091 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376714186 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.376644538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451258887 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.848875491 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977178091 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384075436 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.365077046 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.361722797 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362902662 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364947865 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366072371 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366793488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583288739 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381906291 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369695032 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979884427 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373542866 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380645487 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376363532 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378528227 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.372002678 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367197319 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.364665926 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37090299 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37338956 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.383532875 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512326431 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38132447 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367012778 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.883822383 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37337046 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36795754 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368136542 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40209333 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382563208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187632723 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627403688 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365960698 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632233575 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386111917 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388561107 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.366378865 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373229036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375146174 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.38822919 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381631468 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378953774 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383597831 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374026578 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943979936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11188729 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92081324 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386115534 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.370299063 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373101909 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092937716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388031222 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369616023 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609749112 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115859608 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388958045 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859373452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.387637295 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14345975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637221748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603912212 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379511402 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.372891622 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639134345 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587588052 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40419848 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373809643 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373739966 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.355967896 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936417417 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389943852 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454284064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097849347 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393470512 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377093002 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.422587882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378371992 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78928993 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391207248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372542438 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379592687 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39027684 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198760669 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380699989 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374062628 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005725932 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374748068 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.864838913 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391002444 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593711618 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384644875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376848597 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.369971172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.376472912 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.631733724 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636026398 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378668741 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372166148 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924462818 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.234208614 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.378627038 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372773253 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1477172 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37923762 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668959218 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.393083723 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375466647 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378683271 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373732501 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372559816 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.369932359 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377915172 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348712848 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88261302 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.382636369 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411297699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392593806 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22355304 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63015418 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388513583 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969401269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605567972 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376857465 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397510052 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.378427565 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388630943 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.367683856 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376762298 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37454068 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419621435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600246266 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375357632 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.367538611 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39467517 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587099366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376597029 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390270979 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627107518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.375939406 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.388149539 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106255819 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406452716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389209102 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381587324 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377388274 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39734205 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446623484 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597677262 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.388456841 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387406271 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794305131 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409419234 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383073181 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391789948 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471617643 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37724119 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.382287007 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.149498007 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977659783 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123245118 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977914322 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643428956 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386421541 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380143941 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378476867 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525580096 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376970368 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651780431 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377622876 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.378628576 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402345259 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393747476 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383109814 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595799989 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653094138 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378231202 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380645555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384104001 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.378359036 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390699518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590331328 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891621049 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948862811 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379942394 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377700488 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132795905 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673439841 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378616343 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380430514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380054385 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.391357085 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39415501 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.389436055 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380529318 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532330785 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643424445 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061256503 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.410577135 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.407425677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.153926245 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395555002 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636342481 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376915982 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605401806 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980746222 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101280246 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644467677 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451615982 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602615809 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.380069858 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529453349 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.378859973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385940826 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380888738 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22856213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.378910657 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391071352 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98572874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646828447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.386698491 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.381977917 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409676634 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.3926472 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604682752 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12712756 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608649834 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39170557 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386816327 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381476398 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985908803 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651173882 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386855056 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387575013 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628434977 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383854743 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410207251 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.836559486 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.38094445 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949334601 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35559609 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405000863 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391832649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.10649802 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98803509 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.389312034 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895004859 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386057989 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394951221 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662011771 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389124453 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39104828 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665777613 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388931772 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384594351 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612465339 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98175571 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165473206 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.396957066 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385320598 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.386267002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38459525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429965627 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38627625 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392288037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.819025901 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40467941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386124587 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397805749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.386287144 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397328215 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.385868596 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384821969 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.391748159 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.382353913 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.388688959 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400359258 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487730362 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959527415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412698715 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.051334008 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715129106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640981952 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385285002 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.377327308 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.389714857 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385819632 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386661799 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386409755 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388947698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955297431 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.38845558 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.402609642 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390524232 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.602857019 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597933919 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387522559 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616525007 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387363471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407075203 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.372868338 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38656521 seconds)
  done (took 974.867845924 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402334533 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.426872284 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.401789355 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.476305122 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416401566 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421953247 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.449184194 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.398320845 seconds)
  done (took 20.680711448 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.397602503 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.400908249 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.392244149 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.400696151 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.395160735 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.874606287 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.408640468 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396367212 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.396768234 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389721659 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.387391597 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.093179659 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418808 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.397716855 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.385539036 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.395322246 seconds)
  done (took 32.825186727 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.386428005 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.545231214 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.38219581 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.447046669 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.403419034 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.389362968 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.639261258 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.403903572 seconds)
  done (took 26.885941848 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398712053 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399166018 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.400675097 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.398196213 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399012709 seconds)
  done (took 8.285297017 seconds)
done (took 1237.170242809 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.396622222 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396807129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.39509657 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396631853 seconds)
  done (took 6.874782254 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.377071356 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.376781157 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.377118928 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.390056989 seconds)
  done (took 9.810225809 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.123418322 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.04631631 seconds)
  done (took 5.45949275 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.391851051 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.154924512 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.14026835 seconds)
  done (took 7.977302681 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.694798161 seconds)
  done (took 2.986464131 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.802430814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.758448438 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.588006759 seconds)
  done (took 6.440697852 seconds)
done (took 40.838263897 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39330836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.640086946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.549805188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397888666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553905621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547705606 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.124286372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389710406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391229318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394235076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391408056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.552485322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.108733852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.641006571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.108174901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.736545305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.554899085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402832944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.390284033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391658893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.125255095 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391840654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39101568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417098907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.554795969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.536076345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39892908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.738010158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398733406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.404672315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.538089728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39363142 seconds)
  done (took 83.24061503 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390632801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391333422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.396427594 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397229709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.394070339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.397069559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.395210141 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39447554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391495666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419612584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395826813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.392090744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393760143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.392201958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411250896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394309789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.412605132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392791846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393565985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410269296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.395371346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392822977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412871305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393572257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411340276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.39380934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418760685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.39209443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409696837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.401898618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393968917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416867826 seconds)
  done (took 78.08365495 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.393882723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394002305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394164278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393276855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.394342022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396152775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.397482997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393798991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393893866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394054289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394531919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394217472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39539847 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393580851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397079659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405205844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.394232678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394643031 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406391431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394631831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39812521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396236209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.420595521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.3944255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.395907217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.396809017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409647887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396159983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395483089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396033837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415943216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.399974214 seconds)
  done (took 78.027160254 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593621219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.403928387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.407319167 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.361249181 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.405855279 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405399768 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398265658 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.595553448 seconds)
  done (took 14.868728482 seconds)
done (took 255.511491872 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.397676747 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.398653338 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.611955388 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425843402 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.397868935 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.444805662 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426522282 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623440414 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.39275891 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.648480186 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.428053923 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.422387615 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.39776253 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.442162059 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.681637515 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.551839269 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.294740534 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.397751787 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.743641862 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421277971 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.674610355 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.398918076 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.675033206 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.360763635 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.41912757 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.415636841 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.416402026 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.290083541 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446142097 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.75421892 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.407370142 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.406095401 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491749421 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.510015059 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.620131687 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.565811106 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.410885488 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.486721269 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.637096997 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.405915452 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.399977835 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.182914713 seconds)
  done (took 84.222950909 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.407680489 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.527466792 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.408364671 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.407531455 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.407159635 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.527665741 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.504790196 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.407260981 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.408818937 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.406200303 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.406569251 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.408227587 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.408821521 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.40758907 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.408526851 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.408497244 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.406250271 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.409423155 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.41137568 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.457014547 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.531742528 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.433265907 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.402667658 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.408335162 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.511520814 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.547765468 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.407163532 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.402455773 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.453165047 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.409966472 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.411438108 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.460208097 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.409877527 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.410220342 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.526225367 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.511747474 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.431143759 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.408356961 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.522548543 seconds)
  done (took 57.446778114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411245063 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.660334193 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.850111285 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415552665 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410342196 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415293977 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.489605135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416030505 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413964128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414305922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.580587561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.416365411 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445532351 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.881269447 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.415171567 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.414024917 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.413424319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.412700669 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.67034046 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421267134 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.512813682 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.418042082 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.49070542 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.423332138 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435266241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413438659 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417112695 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.005394128 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.416228662 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.581256044 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.217109985 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.494421218 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.966011585 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.86796995 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.233578078 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.420568121 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415347426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.587931606 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.417238214 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.41282633 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.493109601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.414405172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.854821798 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.080565455 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.432760242 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.414812395 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.023209636 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.587299416 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.6630088 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427616681 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884717948 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.421647976 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416673945 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414865274 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.662174217 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42578775 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.413361074 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.031229245 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441399441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.493699219 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.417033005 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41472971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.677077788 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.414070708 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.665860994 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.41738302 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422288494 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.435892123 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.858402455 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.421522497 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.095305442 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433446011 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.416514045 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.582559556 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.666547479 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.059108719 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.423018047 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.681574416 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985669129 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.49748883 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.423407461 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.995606445 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.501701919 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.424788224 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418406408 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418801154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.417429627 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46471879 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.493446124 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.030831187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115756281 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.059455156 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518858939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.433137649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.41814569 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.032769408 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442113652 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417423277 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.86372609 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.101531919 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439941254 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424462535 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.106668072 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.442735356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.496626663 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423794339 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.868121679 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424802479 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467652621 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420261479 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423912664 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.441757432 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.497185442 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426197806 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.419873013 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077717228 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616987753 seconds)
  done (took 186.814866624 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.412446544 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.410776337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410766913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.42804836 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.410113803 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.420310753 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410998797 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.413008829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417295514 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.411169467 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.411583423 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.411862127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.412837267 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.42918705 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.423646551 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.419061717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.412479361 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.411476052 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.412190656 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412641671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.41355793 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.436418743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.412756233 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.412478161 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.413985115 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.411921536 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.422256459 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.415263055 seconds)
  done (took 64.95233833 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.422462385 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.986697211 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.421272016 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.553034175 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446635106 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417930754 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.551616468 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481833293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.423734991 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.418594331 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418684656 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.722989724 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.423495264 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.937359346 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.615421871 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.575981251 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.935556502 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.440678921 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42040373 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.419373902 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.554295332 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.434343425 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724927281 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.988241097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.423711594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.989588171 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.413492069 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.423080806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.419843149 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.989494892 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.421463002 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.727122869 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.499712141 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.481788091 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.993922655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941829568 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.960820894 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.572320976 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.424486688 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.42119727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.421276059 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.412489436 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.990942964 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.424901732 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422925575 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.988223732 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.442559451 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.426513408 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42926303 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.422692573 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.482312522 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.508567282 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.735841544 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.998443758 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.502930089 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.435447616 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.556202378 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.824001683 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.426229745 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.940702004 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431985572 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.99886758 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.445537315 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414849214 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424918589 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429048211 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.574718699 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.558321921 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.94296156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443533658 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.942076245 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.593802787 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.424812419 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.424369127 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.428126384 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.996736748 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.943979783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.595327896 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.561527402 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.623768807 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42173552 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425649548 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.416635864 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.502646588 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.426061184 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.011027402 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.968690501 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.446608079 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.429169963 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.429055656 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.42926833 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.605019018 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021949557 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.505557885 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.942625161 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.752569019 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.734449814 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.429945205 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.487494875 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.448692009 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.736321378 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.429192571 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.485508062 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.914275977 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.737699436 seconds)
  done (took 169.285630878 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.671065599 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.440201792 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522437314 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.580191427 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.033165747 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015263275 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.427751292 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.550411266 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539794442 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.690047539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.423633164 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540648669 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.642746824 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.503079246 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.146231918 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.496779704 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.521003785 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.576700024 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.568310392 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.437601994 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.08746835 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.730054632 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.614691792 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.444798728 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541262182 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.205200725 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.018890553 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.960520671 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.606253458 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.422735322 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.954628661 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.423254738 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.35883572 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.109324212 seconds)
  done (took 66.125665185 seconds)
done (took 630.144651638 seconds)
SAVING RESULT...
DONE!
