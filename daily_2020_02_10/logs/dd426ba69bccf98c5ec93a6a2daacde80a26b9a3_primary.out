cset: moving following pidspec: 15617
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.427156116 seconds)
loading group "string"... done (took 0.608679175 seconds)
loading group "linalg"... done (took 7.887565041 seconds)
loading group "parallel"... done (took 0.178475118 seconds)
loading group "find"... done (took 1.198268998 seconds)
loading group "tuple"... done (took 1.945703192 seconds)
loading group "dates"... done (took 1.301574436 seconds)
loading group "micro"... done (took 0.243092462 seconds)
loading group "io"... done (took 0.967621657 seconds)
loading group "scalar"... done (took 39.182490319 seconds)
loading group "sparse"... done (took 12.209829431 seconds)
loading group "broadcast"... done (took 1.048782497 seconds)
loading group "union"... done (took 12.662224959 seconds)
loading group "simd"... done (took 4.725586711 seconds)
loading group "random"... done (took 9.345563012 seconds)
loading group "problem"... done (took 1.72791809 seconds)
loading group "array"... done (took 21.639801165 seconds)
loading group "misc"... done (took 1.699535842 seconds)
loading group "sort"... done (took 3.432091372 seconds)
loading group "collection"... done (took 17.910889096 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524631098 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129116791 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131597888 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123686495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151588723 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119013834 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130884563 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090697086 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.841317514 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154250887 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12252771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441098438 seconds)
done (took 5.229352727 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177406532 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085837381 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086565669 seconds)
  done (took 1.256038418 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069310817 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128948294 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071112121 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071064631 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071085098 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069704266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070149035 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069342261 seconds)
  done (took 1.636875656 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076565525 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072000483 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069170685 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071872785 seconds)
  done (took 1.376193114 seconds)
done (took 5.609866545 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.80857272 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220226047 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192296586 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429236522 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133860672 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164595296 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664435436 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333917879 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19314103 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083988401 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113434896 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353096114 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113088732 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635333993 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078460694 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095073552 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140785909 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428592625 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070890961 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085302613 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092553816 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131629031 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0930333 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077807074 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148413625 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071051107 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140787933 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083667188 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069883036 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224406064 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175742844 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662692993 seconds)
  done (took 10.436452113 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105155601 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104686096 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072583552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129838922 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104556844 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072622514 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078964681 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070871496 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094769242 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134779519 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096421987 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107365764 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069031474 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072635915 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089186861 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210514628 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084021322 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085174382 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074551417 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083983881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112065182 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082239327 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084441016 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08433487 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133739655 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184184938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102815736 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101055353 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070269643 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087088706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118040655 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131661498 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068991235 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069970283 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131564493 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098119206 seconds)
  done (took 4.726261887 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047218697 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149196926 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095565802 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141236895 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068721676 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113397011 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069386818 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085512503 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216354039 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.407903208 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638209283 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114966358 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110386426 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071142891 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071990248 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070259709 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.5849438 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100859013 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112184063 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085904498 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073700055 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072482243 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359095922 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071183887 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067729828 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072176404 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060695348 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130377969 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07145213 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977498073 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168815626 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069989335 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104222204 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171916393 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093398866 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278731358 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073690255 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068862663 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161168071 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074923525 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070727418 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089319711 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108166209 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123331446 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070272238 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071325864 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173056447 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069644891 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083824958 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.10511388 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156719565 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102455345 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068938942 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264226062 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093792736 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073549039 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096875628 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068568887 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211671006 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13254153 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071729656 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070713561 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072386596 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072967344 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363755599 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070039138 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.163444913 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071494717 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081348041 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07351288 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07331414 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077041531 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07719605 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091142497 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069839864 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078073613 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069816111 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069257804 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070031109 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068090671 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086131174 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.400746873 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070297361 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071668987 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06843994 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093297235 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099685241 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070114547 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.171792713 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103817686 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07319923 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070471141 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113132163 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070828606 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08735108 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0734913 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117076223 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070446453 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068192832 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.12703738 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074021487 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100576865 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074093874 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067358346 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102312839 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084156759 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073898075 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.447304169 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069132156 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068993751 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07296543 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070022931 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071186829 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070436825 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083157489 seconds)
  done (took 22.521841684 seconds)
done (took 39.817583086 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.267553565 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078171277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077722504 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077867852 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077073203 seconds)
  done (took 1.759663237 seconds)
done (took 2.919681938 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1276577 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105279568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068437619 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101372916 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068321612 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105811867 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105107113 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081781248 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105139568 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068315268 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102786271 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067943423 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067539838 seconds)
  done (took 2.355827325 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088090953 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087986976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073197962 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086776915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067913994 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087191393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085599851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093461502 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086496165 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076632014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06742481 seconds)
  done (took 2.053369449 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087570471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088672572 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073291546 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087015549 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067119079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085941932 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085779288 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090445881 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08661516 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078153429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067714021 seconds)
  done (took 2.049162517 seconds)
done (took 7.604448372 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081810164 seconds)
  done (took 1.222933694 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.605377475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.139674344 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085404977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115549893 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197345502 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122188181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.269466912 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089146915 seconds)
  done (took 8.951000251 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093916423 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07168382 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085355015 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075230367 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073987827 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0748106 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071935912 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075823906 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072017053 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075270871 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073602572 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07504936 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073231812 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072172488 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07645864 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076879459 seconds)
  done (took 2.43747414 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096272256 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096072828 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076868447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078440049 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07576999 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075023834 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077587512 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077363523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074763322 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075852141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07814713 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076761511 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074676264 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067858276 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077338368 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07858554 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074300245 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077420265 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078092727 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078792768 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078761686 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067837765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075737276 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077304156 seconds)
  done (took 3.120291999 seconds)
done (took 16.880923843 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109126955 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07075069 seconds)
  done (took 1.328800546 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086047569 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086395761 seconds)
  done (took 1.3289821 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085929044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068726086 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093975043 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081208111 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069654607 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069388822 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091693816 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069553022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068983233 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069539392 seconds)
  done (took 1.925422975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072302202 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080589992 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074686928 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084800533 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077019896 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067362175 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075963775 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071698586 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080717186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066242903 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07491261 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086616852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07442512 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08829647 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075024158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072676194 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074036677 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071480171 seconds)
  done (took 2.528723905 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068750851 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069899156 seconds)
  done (took 1.300752741 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070517306 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067187388 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07022772 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070848405 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066435536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065698132 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06661451 seconds)
  done (took 1.63626641 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389442214 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119724989 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325233442 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07505685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085968294 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268918055 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06908955 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074757838 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074275153 seconds)
  done (took 2.686906289 seconds)
done (took 13.897997997 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084438323 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090920273 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101270699 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392529241 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095028187 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069653713 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116953472 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192131278 seconds)
done (took 2.315907532 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217107215 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.720104218 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.445516658 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218182339 seconds)
  done (took 2.551493886 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358077222 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093124882 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062404784 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070468219 seconds)
  done (took 1.760564584 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070015874 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072746317 seconds)
  done (took 1.314868419 seconds)
done (took 7.015890722 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070083512 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09097527 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070004976 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067327729 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069314044 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066977642 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067014858 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070022204 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066934584 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069536176 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069359498 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069200785 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070198018 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067251771 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066963754 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069602986 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066839524 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066901314 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067232602 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068942214 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066838237 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069045156 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066949498 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066676122 seconds)
  done (took 2.869220859 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088313904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070093676 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075199424 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075502322 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072761249 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074616275 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075040242 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06909889 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074798796 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071450766 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072861905 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072334965 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071652887 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07247317 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072281764 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072633058 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075322593 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069773169 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071336645 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07332636 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.182407463 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069919758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072927806 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074159994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072211529 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072455081 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071760208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069453237 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074768862 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072474244 seconds)
  done (took 3.483440598 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073430481 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066144846 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068149026 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073875074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066452874 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067860515 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066359966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066808874 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067477012 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066568367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068671422 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066064274 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066552241 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067258865 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067428389 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072045519 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082809323 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067210315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066496429 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067458303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070749121 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06689857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066965443 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066368859 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066577626 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066131946 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067458842 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066489351 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067552018 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066382951 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070101473 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070482319 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067292518 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073684709 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070307428 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066792388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071212562 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066385961 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067916276 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067286789 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066312725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066748536 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067038659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073736958 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066845241 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068731065 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067016848 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068077132 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067589676 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069313297 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066508561 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066867377 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068926533 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068025263 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070994276 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066374355 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067630432 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066307757 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067489352 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066755727 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067233122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066729503 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069765101 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067823212 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082935244 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075103891 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067044994 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068894755 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06816903 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070261588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068707146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081676679 seconds)
  done (took 6.132031679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093406497 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090984719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069174951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068640516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064984717 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067344279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073358131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067536425 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06931879 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085722817 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06715904 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068837252 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068389199 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070709673 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067619235 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068692451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075661226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064913929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067221655 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070805662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068512468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072828189 seconds)
  done (took 2.775988966 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159347494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073946404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110179153 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078912946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073769015 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078992669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073011548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073954594 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073526074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070633528 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071139337 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073894481 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073168406 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070845506 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071614273 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070928838 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073137386 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070741828 seconds)
  done (took 2.629914769 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079635528 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069194349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091121642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069084044 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070245183 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071768573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073644947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077810239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071971321 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069295332 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078181783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071742774 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072104848 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069327096 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072457842 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069390156 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071901562 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069472519 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077153378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073339283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073768906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077121884 seconds)
  done (took 2.808838777 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083146242 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071702127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085632166 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071511462 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065203111 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067936483 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073566998 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068994049 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073540936 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071181582 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069108224 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067528692 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071959883 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068984189 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071898247 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069422691 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071627574 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069078594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07148467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065610197 seconds)
  done (took 2.618820631 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090330662 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072079499 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071271112 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079529498 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071407735 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070982534 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079667876 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071588911 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071577502 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092277997 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071905925 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071800204 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078510158 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075814438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071428044 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079067356 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078872543 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079233645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0709102 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071529041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092608911 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071815989 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078723023 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071296444 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071744598 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071674726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071078475 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076028503 seconds)
  done (took 3.316239151 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069821968 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069680978 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066801842 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067214168 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06663555 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066681881 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066740535 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066752378 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06940179 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066907879 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06950897 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06993905 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069389103 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070231268 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069510926 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070270974 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069490902 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06816763 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066727912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067037921 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069790309 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069498076 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069493924 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067120119 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066989532 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069345242 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067244271 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067514121 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069404926 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067063746 seconds)
  done (took 3.244857936 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079202168 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076685902 seconds)
  done (took 1.349030176 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066626771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084643741 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067346521 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074139012 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073252721 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070147807 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076580264 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073194783 seconds)
  done (took 1.775832764 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085908903 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081681734 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070729544 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083845576 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080629437 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087133349 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141257546 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070498413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077053203 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067887489 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086362056 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069020288 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07651676 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070304914 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075874888 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076729552 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06740057 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075505157 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072186819 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068142901 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071079595 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078403689 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072683957 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065057001 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071458706 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093287868 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08081986 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069843786 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073066453 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077640183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075877369 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06394417 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070280449 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070844875 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067940048 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080169413 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085050221 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073261539 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078753079 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073444736 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079617694 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065486288 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07497224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077444892 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080462526 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070436258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070195283 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064352279 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067797756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074429391 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064762585 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070010127 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0645966 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076794769 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073363284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080713933 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068588781 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071909156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073436582 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073404627 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076522406 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071750539 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072980831 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069958475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080177655 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07506754 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078828304 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065073824 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063890669 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067649498 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079710371 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093739706 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076114661 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070609663 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071015277 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067516274 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073279451 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071174941 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075543756 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076996553 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070043394 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075128018 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077138928 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070319619 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072521827 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077491238 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068142385 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072071062 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067925946 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085323398 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068039314 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066679449 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067036286 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079789119 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07237473 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069035064 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066655458 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076633352 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062917292 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069289106 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069776888 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069950485 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078969422 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073036784 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0735211 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078470433 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076355036 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069916364 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071544137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066290169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069878407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067950461 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076351929 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063055871 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071745747 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196710632 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072540242 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0807268 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070123308 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070960896 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079300352 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077396677 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070561192 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067069559 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073953822 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.07122019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073821192 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079638261 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069448126 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064799577 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065504807 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0736268 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070599958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074131484 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075202741 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073897199 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064857021 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068335967 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075661597 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079610162 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071331644 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071830962 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07588897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072105829 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069658989 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07706429 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073093254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069893885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076820443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071069335 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06572365 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073067479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073011475 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069466461 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073958325 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074360779 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071896872 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070392645 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068633996 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07690729 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070028101 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069903107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070913879 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068694479 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08100199 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071715451 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064472694 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066980025 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078688908 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068855963 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069071783 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069101144 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072300564 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071244785 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068607041 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07109803 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072452012 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079569119 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074091856 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072219015 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076272089 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08227314 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070806211 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072059557 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069526135 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070273836 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070136279 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078792784 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076200625 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074198356 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072553567 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066293916 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075688552 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078111558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069300312 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067174717 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068723276 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073328674 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075583251 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074223992 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069831318 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067971052 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07123095 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073231537 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072306841 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069771159 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069164394 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076082472 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067647559 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074740182 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069561767 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078929489 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071935237 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063887437 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071239158 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067236115 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075867028 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064166869 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067862236 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068281356 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069549941 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06836099 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071739997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063195353 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076287577 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077077413 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069025563 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068390523 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068616583 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075478405 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07057312 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072333602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072835714 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.202702351 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083574318 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071772517 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07491316 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081684325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071368514 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064981635 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077078964 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070353388 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069782524 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070313835 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069654373 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073866749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079177906 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077132687 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06380601 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072443264 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068846433 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070102854 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067024625 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075072641 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074256613 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071279439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077041339 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071248733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069832353 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074440074 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069327196 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070815172 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072079994 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073430198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07142189 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072392034 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069320677 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073866798 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069465271 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068383983 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07322011 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070726302 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071501643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075540333 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070048865 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070280831 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073380531 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070997583 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070987394 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070585623 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069725595 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073441131 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071355002 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070762177 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073191386 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064757745 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077989077 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069017438 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078010153 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070359771 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067058517 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076547289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072877249 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074838306 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070594675 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070179702 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072024009 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068727539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073213893 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077310965 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068059832 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081027346 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077576835 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070774246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073803095 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070450038 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07167806 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068823602 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070850358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070918884 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070152267 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069848239 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076083028 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072452818 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070524222 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071978975 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070636138 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070288365 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071202605 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063953419 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069099349 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069502752 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072060274 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079459102 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070749758 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070310968 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069124239 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070926887 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06965991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066412119 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077396737 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077920523 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070357687 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076122628 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069608078 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070318021 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079173497 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062938886 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067462434 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06641751 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068062581 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076011396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0693994 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078227959 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069603309 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068174043 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066006446 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06929839 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067093204 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062765392 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066651688 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072841261 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06797043 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067805183 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069086098 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071384637 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069583744 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078098585 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068063154 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069687444 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069007912 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065792318 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067828093 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067896515 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071469172 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06929867 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066716658 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06599142 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068472314 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070122986 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070873269 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068769822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070264708 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075961631 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068452041 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072241432 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071461157 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063281516 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071263592 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068864308 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068801527 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067963748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072426241 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072186407 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069345057 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077777357 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068372029 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069667977 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069208664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066357373 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068261689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068086726 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067122048 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066945546 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069381638 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075188643 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065754879 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070320914 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068023023 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068800336 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073998767 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068348076 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071519469 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072800493 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068601876 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07009817 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075881705 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071636495 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070367922 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068666913 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06959742 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073619216 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067972029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074692818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068799392 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068710019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069406078 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066228427 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067776194 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067850513 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067472491 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073666892 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068259345 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067149339 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067363437 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065870596 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069044887 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069915122 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074976204 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069885044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071398579 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063099019 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064907302 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068561668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065583029 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069857244 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070523239 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073726389 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069477484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069219422 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06691979 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07725353 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073285505 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072117746 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065869211 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071212387 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069074752 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070439304 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068909342 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06909481 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068891917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072719831 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070460334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067754408 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074829666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07250742 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068080558 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070178745 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069631377 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068161914 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062502556 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067430502 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069218864 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072888483 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069673249 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06764652 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07804936 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06567243 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06784855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070110384 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066413582 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072186816 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062108861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069034236 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067803928 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068280743 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.297342359 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072158807 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069617911 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.075727803 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071345104 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067712992 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084422557 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.082344484 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076663802 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071248792 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07036303 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.067580479 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.067040086 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071481854 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073267177 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073402567 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08274083 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070682824 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071407223 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067167105 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0719736 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074376636 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075379554 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069282661 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066811641 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070918747 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074619385 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07794008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070285186 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071562519 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074588487 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07473832 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069665436 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074094026 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06836593 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076123449 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084743613 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070771005 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071761851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07743291 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079527981 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071696258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066319082 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071739143 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075117737 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071757412 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071685723 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071956553 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086348985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074401554 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070131238 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069418978 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073443863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071079395 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079492217 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07247267 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071917739 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075979668 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072761519 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079304168 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074857085 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078129679 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073529659 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074237993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069887248 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071226031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068658824 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069672068 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071314136 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07146011 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075132937 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079046238 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070173408 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08160961 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079704677 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072553119 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067892003 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069988297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069952331 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065231754 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071031047 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068549974 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068915325 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069182951 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069724309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071602298 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075563098 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072155223 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07030767 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06994877 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063840794 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072738479 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072044733 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071794649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066649202 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070975128 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070973395 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074660639 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073300839 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067924878 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072385259 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071720738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070710722 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065606187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077031682 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069735528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071618383 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069494371 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069883934 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070450969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072902221 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073790352 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071266815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071881827 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073528867 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07215775 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067075283 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066980433 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074932232 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067388768 seconds)
  done (took 44.529048787 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107847628 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067950195 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066172014 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067542019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077033575 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067529812 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066278536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066972877 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067081025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068729486 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065617557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065938964 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074330856 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081721768 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077042689 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069967489 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065387315 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066519883 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065391723 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06643321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074068234 seconds)
  done (took 2.850174645 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077631096 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081575369 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079976939 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086093698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074834827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073867515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078601277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074595109 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082136421 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076017234 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082519736 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074499572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075856164 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076119552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075971256 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07416971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084774538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074886197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074007338 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078830011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074341624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078989204 seconds)
  done (took 3.018882896 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071566376 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06950045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072274068 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065345148 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069907312 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065446267 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073072244 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067489599 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073065172 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069426047 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06936185 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069081716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071659372 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065071436 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069874701 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067410319 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112181858 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073469339 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070269466 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070898173 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065571416 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071686291 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065560454 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066069583 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069006521 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073447823 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070550223 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068039376 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070587376 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069072532 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069729915 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067715053 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071894458 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070574441 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069208869 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069569417 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070018899 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069840938 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065879737 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068580832 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070583687 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065540957 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07147429 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071436085 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068220277 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067854613 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07287832 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070528683 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064937188 seconds)
  done (took 4.75383932 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082884073 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115735032 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071099685 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094485705 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083061663 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076324253 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074020192 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094622034 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067015933 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067908887 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084521574 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082419461 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069274135 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073545928 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076181287 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069096082 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070107259 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068118677 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073275231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069005403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072938272 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076345176 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083629205 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082070498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073469546 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068239048 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068507419 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073762356 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081108227 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073945375 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074599195 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074646332 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084283913 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075040938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06838813 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071424593 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085602882 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069235686 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071705713 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067345925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071785707 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073429599 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076704054 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085046448 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069085424 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074178235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06991681 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067210592 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081448449 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071834961 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07721473 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082560323 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073054383 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069316757 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073245982 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084531924 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069654249 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068103929 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072117984 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080701747 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067081759 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072741461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082017918 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070978661 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076533225 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082683689 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07419311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073618712 seconds)
  done (took 6.605308596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080903558 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100706974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088086791 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086925003 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079526535 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080039331 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079423012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079948687 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079890771 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08427977 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080019416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120528537 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075498249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081900932 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079490169 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079066891 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080118251 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079560965 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079541156 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08003309 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079780924 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086709626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079452892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087074674 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091222893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074788882 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078971974 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07902577 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086770222 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079836818 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083628202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079024083 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079459323 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087125998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083759054 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078873365 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069249427 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07966848 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079629666 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079951962 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074949712 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086705679 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078955899 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074667512 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079841943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07964437 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086857231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082777293 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081748414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083547668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07950426 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086975572 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078933587 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079079731 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086758239 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089243145 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086275497 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086892404 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080038854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086383556 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08664736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089364257 seconds)
  done (took 6.458233168 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086340557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078157255 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085829219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065599624 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0678358 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075601373 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067790866 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067785044 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077520707 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077428927 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079772142 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075418617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078361498 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079701423 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075271778 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078023502 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075237074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075791327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078061066 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075417799 seconds)
  done (took 2.854408089 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078112538 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088359152 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07068233 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076299196 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072657757 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07483178 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072579184 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072608169 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070526364 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07293907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079339939 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079220932 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070562146 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075362621 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079227881 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074710438 seconds)
  done (took 2.534426793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087152508 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076668493 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084080522 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070831626 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071083308 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065747966 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069120052 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064709942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065499392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08225628 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069212146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080540827 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06943073 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068411267 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06640005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074541503 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065921193 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066551711 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069357883 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082457099 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073876138 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067740461 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07309485 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069325377 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071986467 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074063825 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068413978 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069756022 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06686051 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070176286 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072360822 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073037819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066855517 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067908379 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068206355 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066737134 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069747674 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069743451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074600458 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069380228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067602376 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07129397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069892387 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070978898 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065537337 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069647998 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066279206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071499798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06691366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072321069 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069351897 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071629334 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069864942 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076507566 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072727646 seconds)
  done (took 5.233361427 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084235836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074022465 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065581705 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067778399 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072664146 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070995024 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073378541 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070803058 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070506535 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067340095 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071649155 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072928602 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070949442 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073365076 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071160559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07327342 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065179082 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070418643 seconds)
  done (took 2.624468693 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075233557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069889922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07672182 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069743203 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069692656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072026994 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066031716 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068161965 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068413043 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069464718 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06971179 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071897039 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070256076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07221087 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070139591 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069320211 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071694988 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068365108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069225612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065248655 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072393566 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068291968 seconds)
  done (took 2.876885022 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0983422 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087323873 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146323306 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082380384 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088785671 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075433316 seconds)
  done (took 1.91158192 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095530769 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105736668 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070455117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073679429 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079416165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07307602 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073307206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073393198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081396236 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079013431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073280131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082036149 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081706265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081239735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079176364 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07939582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073366857 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074003838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069848781 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087228774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07403151 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081834911 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074211716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073326577 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074023258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081236661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082368226 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079912561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073344435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082457648 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079046569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073673672 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082054464 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079345071 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07322393 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081985902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074265327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087404451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079280643 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081550643 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07287024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080105092 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082201667 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078950914 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082428097 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074471353 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078262211 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073989535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074965341 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089162567 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079584967 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081096031 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079569705 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082574868 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082688903 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089030085 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079417566 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080984469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079603859 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079457647 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081210321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080169115 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081261767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079534832 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079720607 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08147288 seconds)
  done (took 6.57780286 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108293305 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071080795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074197272 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080049657 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081060272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073991307 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074521817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074015248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07399579 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070732431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113313628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074188865 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081034771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081366129 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07366943 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073943521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074829996 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081055724 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070740435 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089874619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073914094 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081000329 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081859382 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081363582 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079623338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079274386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074016214 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074879837 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073581753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073502418 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078280516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074127724 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081844601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070789619 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081172279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074288735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074254875 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078711244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073721448 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079307084 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081206231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087941753 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074099739 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073687906 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079478141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073958613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073973651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070763635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074970085 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07129217 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079604047 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079735011 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079326749 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081249249 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073736628 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073999299 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073806774 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073994208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073864371 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079728329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08149026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073754073 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089047997 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074471195 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073895358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081776814 seconds)
  done (took 6.494084973 seconds)
done (took 133.495952884 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193493385 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173540482 seconds)
  done (took 1.700064482 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073295769 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103886308 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081337481 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132718848 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070813709 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105011313 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103034496 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08211748 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069909823 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070167177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06981157 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073043584 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134894316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070690324 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070788017 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072844907 seconds)
  done (took 2.729540022 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103927863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170145631 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108155247 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068967295 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105081095 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076763522 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068667439 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079379957 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074810008 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069044875 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076687513 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074112526 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06899327 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074425994 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074694825 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076391672 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069291634 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076723321 seconds)
  done (took 2.862150768 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103864181 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095373111 seconds)
  done (took 1.550923699 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165684875 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.144554715 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21404877 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360673104 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165519359 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153772074 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1496777 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148347208 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123081441 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.146002271 seconds)
  done (took 3.119792636 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10556384 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162414243 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280417934 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12373607 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077667203 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097121251 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125913268 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082780005 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084579544 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084477418 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084149584 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081270659 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104316731 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077686064 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078346582 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080893952 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10886723 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077379694 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078944682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079812832 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105390657 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070085508 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077533262 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077332531 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081283951 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081266423 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070400039 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071440039 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07963045 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079351848 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08079858 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096120257 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08114598 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110583904 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075377628 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111637005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080366959 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077327432 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078944765 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077143907 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081758161 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081888209 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07741147 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080350599 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069718769 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08085195 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070148938 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069739996 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081903573 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070945033 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081596447 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080597158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.11101257 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07066666 seconds)
  done (took 6.220302649 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110187144 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113001435 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075797179 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120209298 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109524237 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075920707 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10962446 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102622804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11080244 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074022643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072100774 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074574845 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086297168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086356874 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120581132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11310521 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077477228 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075297391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112079738 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111243675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072744943 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103697446 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097585398 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110557378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071350645 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074401252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071757106 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074153522 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080041097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081739042 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0735589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084486616 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088097554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081960802 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071321655 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071709277 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072542318 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083561352 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083679185 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082794269 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081678272 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072116906 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072575152 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074431596 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074065464 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073535394 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082269527 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084986096 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08274247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07374153 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07409608 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074640975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073637715 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08406663 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08190431 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085066182 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083815661 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0727521 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072554199 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076764213 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084806934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083681984 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083087345 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07375236 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083360765 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07251663 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084317359 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087613608 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072465264 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074277286 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072498021 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074201538 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074388701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082159748 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08139098 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073453977 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073600553 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072350319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083536667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081782666 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072305891 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08039342 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071475236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071881017 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073162502 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073138469 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081349907 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083311919 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073881062 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071873837 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073354292 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0721867 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071217812 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080029373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083347905 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082595685 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081929902 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073137307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082176526 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080845728 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073701398 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081926364 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071488584 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.20531691 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074533594 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083544672 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081936588 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084407847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074320516 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073255035 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082654447 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086180916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073739524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082202037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084787937 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083334651 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073465538 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084744596 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073425023 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083551108 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074268826 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083914899 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073317795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08450789 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073003247 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.073330789 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072700162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084679965 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074043997 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073725257 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074413523 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075232127 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084222831 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08694029 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074887796 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083855859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082698372 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07508682 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082637168 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07229965 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083534888 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073393303 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074099513 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071708717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08594851 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072837791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072580917 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073955985 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083994135 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07337494 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084168795 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081988041 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072511242 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085050707 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083914595 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082213332 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084429197 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074423786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072675749 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07233409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073110138 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082150871 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083352628 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074805813 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072511704 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082367456 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083320401 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071860732 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082186124 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081858814 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082557462 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073421614 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073665334 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083815595 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084197663 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082397091 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081579182 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081814771 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073128697 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081296624 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082285488 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071970508 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08772688 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071833205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086718644 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082106783 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080267464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082337979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08410279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084196911 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083775742 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086503766 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071704968 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072197324 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083422164 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072262508 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072865608 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081375478 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07316088 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073032305 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086279177 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072293884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081988937 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071072179 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081118028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069950866 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072913866 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.218981395 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073617222 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075794141 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08477243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074805322 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081745341 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085361237 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083333031 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071804426 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074094287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084497984 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083903759 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072998107 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072635771 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074637288 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08281249 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082589515 seconds)
  done (took 19.605631768 seconds)
done (took 39.145122348 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215258782 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157852307 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17848357 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123496123 seconds)
  done (took 2.131891387 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120996749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106950106 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096493864 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069043758 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102935204 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069148153 seconds)
  done (took 1.956219871 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31921321 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215252072 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192768801 seconds)
  done (took 2.108911798 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215332966 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19882202 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457332314 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281226355 seconds)
  done (took 2.649220246 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148919114 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092084666 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070889593 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087836111 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137309295 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164398113 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104082842 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128981901 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082631736 seconds)
  done (took 2.459049272 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152706316 seconds)
done (took 12.849198613 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.128890574 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097772623 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.106904221 seconds)
    (4/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.211111443 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.227802296 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10621139 seconds)
    (7/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.173565814 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.164308909 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100777703 seconds)
    (10/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.2023073 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117248265 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.214692424 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.075976849 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190404028 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082921961 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.238757684 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094231073 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081589008 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.192086498 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077003662 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200399766 seconds)
    (22/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115687304 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078924668 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203428288 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090509448 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077786032 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089165343 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152894683 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.213575887 seconds)
    (30/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.175211161 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077563699 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078206501 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098684711 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096813941 seconds)
    (35/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175286473 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.185046648 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078921961 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069073277 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092059984 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162166269 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076078083 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086593723 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238287113 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18754587 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.162579519 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.169852857 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.078238342 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115586711 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09941669 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077592044 seconds)
    (51/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080012728 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.223335786 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070353247 seconds)
    (54/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095329539 seconds)
    (55/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.105649392 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090179385 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104810675 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084044324 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.181069996 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065925696 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077487104 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.285526594 seconds)
    (63/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080615297 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083862813 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073065064 seconds)
    (66/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.106832605 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080900615 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115398669 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055558011 seconds)
    (70/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070571326 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076454488 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075794223 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096268719 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080073272 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172093088 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.183194558 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.069678338 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151433438 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168054862 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076304433 seconds)
    (81/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077013116 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10864432 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.161227398 seconds)
    (84/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056297474 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202207421 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086811471 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078661342 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.188274483 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073620779 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09725616 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152418458 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069590372 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094785003 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077395945 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056375838 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145375087 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080354972 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11531321 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076302551 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087526597 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054787137 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091644462 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.172865671 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080223143 seconds)
    (105/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199938963 seconds)
    (106/309) benchmarking ("sort", Int8, false)...
    done (took 0.149549125 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117073829 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080307094 seconds)
    (109/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078884047 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076892514 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069074446 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054311162 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069393092 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152239972 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075273221 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160075669 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160553794 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075584478 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055422242 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.150573771 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085927052 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075962226 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153258419 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188225826 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093744948 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212048191 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.143718278 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07822867 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077172909 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.118634158 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055200943 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.147541662 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094830251 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075480298 seconds)
    (135/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114243679 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075937601 seconds)
    (137/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079877773 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071205425 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076142482 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074910907 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068810444 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169412872 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068657248 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077677131 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07609401 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073065346 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092596175 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.118813974 seconds)
    (149/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054061027 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161397278 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091225042 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077418488 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085180607 seconds)
    (154/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057078284 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054246748 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.10057767 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.119350005 seconds)
    (158/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054732964 seconds)
    (159/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074155569 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094038947 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054152118 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054569697 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077063149 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070203585 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066063133 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054410112 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06925424 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 0.137587628 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076341794 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054943826 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160490748 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114671901 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053878118 seconds)
    (174/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.171208828 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161742584 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054942128 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080166902 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078513279 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055280391 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054245507 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078232673 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099914622 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066090449 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142373383 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.0773715 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075219053 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069229375 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054843711 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071052813 seconds)
    (190/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054136312 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054895357 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05339149 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066699273 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054818901 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131577335 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.335254647 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068841183 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071222999 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069239018 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082931491 seconds)
    (201/309) benchmarking ("sort", Float64, false)...
    done (took 0.137402999 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.201397144 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097116607 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054506624 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054293139 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.212661183 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069822286 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092380044 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069627205 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077213814 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078172703 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069120203 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054993339 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054167145 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067896037 seconds)
    (216/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067309234 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191298206 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054666375 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146746964 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191108953 seconds)
    (221/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.167065849 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074856139 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095943146 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10553027 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067649834 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055490162 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140780336 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078307713 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054446707 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0711438 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054978478 seconds)
    (232/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07114919 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05521216 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145511843 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13755501 seconds)
    (236/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080754511 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054694878 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054678316 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108760119 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069957509 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077894272 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078675276 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069338364 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072263057 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054246805 seconds)
    (246/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125307205 seconds)
    (247/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055848394 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093287853 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076236732 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068975117 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068534125 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069335025 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053785086 seconds)
    (254/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073199488 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055086335 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069223522 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076179906 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093523754 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069491793 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094562302 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076114063 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077856013 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071569954 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077538073 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093811724 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068803915 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054061273 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085050422 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070442798 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054209745 seconds)
    (271/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080005214 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075985754 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093319675 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091426652 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130333241 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068552393 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096990208 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082630058 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077424066 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069306419 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069757446 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067938834 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.180874936 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096448961 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067136444 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068727947 seconds)
    (287/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054551925 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055485236 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068652939 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076563294 seconds)
    (291/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05500698 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05402419 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072229582 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157765109 seconds)
    (295/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.0540199 seconds)
    (296/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057728746 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075255583 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069013694 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067817895 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053512017 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055322529 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053812917 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053560269 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054023489 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074721461 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069851307 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056361809 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068870232 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068670667 seconds)
  done (took 32.360185604 seconds)
done (took 33.757318517 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088875313 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097335658 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079824726 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098029074 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085112793 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079996638 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076588693 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.0823533 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083587632 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085263959 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081557547 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057718917 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078454281 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078028018 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078710607 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095652582 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083188972 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076794623 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076802097 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068591749 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076678199 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069194576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070694207 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057865082 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082420924 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075434224 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075705199 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078121394 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069959202 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069890455 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072673275 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07719154 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069039692 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081779221 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076070747 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077029068 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07855843 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080271423 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070829007 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068916332 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077887143 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068918225 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076407694 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078027988 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075490933 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074764323 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076698316 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081040179 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09496233 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070769372 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07901247 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079950848 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079849225 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076254477 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073191215 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076897863 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073840456 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094704542 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077225456 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071255736 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078350818 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078399309 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074514131 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076636804 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076899041 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079705336 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079819052 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075150966 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078581922 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075399431 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068940022 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076574606 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072332161 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069201534 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079867886 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081355715 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067978212 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074822919 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076562631 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074688314 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067777948 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070909114 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072895437 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075842674 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07061587 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05787373 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072914113 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07571977 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068580847 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07687323 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075588977 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077186215 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070627618 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079616607 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068066682 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07386131 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068965962 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068566792 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070590597 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072757345 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070210175 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070616064 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078425679 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06996344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075001889 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08206098 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068546095 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075600613 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067363295 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067875505 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082348616 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078491456 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06935897 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070924482 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067747733 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075974229 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067929968 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068597174 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068683816 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068778487 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074501249 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068173848 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070155099 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075702838 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081651654 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067779937 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072045151 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069630343 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067911735 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074125098 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203262902 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070613779 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072274051 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066855371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071885284 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069705509 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076341756 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071746132 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07751922 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071392975 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078554961 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074670961 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075109378 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075217868 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067320886 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062622161 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071306641 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071934302 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071192523 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068821227 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071037856 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068618812 seconds)
done (took 13.015610687 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070443252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144749199 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10081077 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099257064 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089059708 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07026278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078755047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103385816 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07200156 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104462104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09149498 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089712422 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117791196 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068147998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069028355 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07320724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0703922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084416164 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103001162 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090211482 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11888187 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068196494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09615409 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09282711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091793759 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107405616 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0699044 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073336919 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072977528 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096705548 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092770782 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073539864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069862157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101856564 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097435392 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089840005 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070188394 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087909446 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069571931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06942283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070854398 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102840792 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083871749 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084199965 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073987282 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079941168 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070518684 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087165652 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093190495 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082901728 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089114315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104767409 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072338137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087708123 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067672301 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089770488 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080107781 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071924653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069475974 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077869344 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069466467 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073210469 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08448784 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08481087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073432261 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088513807 seconds)
  done (took 7.070800439 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088209051 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096156327 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087504395 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08925031 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069739042 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069759311 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070204216 seconds)
  done (took 2.058494726 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070137346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091937457 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09383437 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092552707 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085490284 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091053367 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079976707 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069748463 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091733152 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071596999 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09119451 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104518642 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073217133 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077838167 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095120622 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069590971 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094265683 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069666106 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073006274 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095252862 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072440733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10015379 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073175078 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070708832 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084303185 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070114498 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118214675 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074360164 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07224139 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073303584 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067835893 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111337053 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084347128 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07840545 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070986837 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08571825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084649627 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068493331 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087484957 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079723698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083920602 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070150951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070693391 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067802641 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074302551 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08082232 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071220205 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070504213 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072658029 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090939091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070868706 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083898873 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073167862 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075513787 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071479794 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076517845 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080903911 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070646199 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090437948 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071863684 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08803024 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08674536 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084318041 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08700343 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072676362 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084179173 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083943226 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072763583 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071740144 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074180932 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086302606 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068227316 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071847591 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081637634 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072440786 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093666108 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093453946 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072050766 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083982608 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070785815 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070065433 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069845059 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093915569 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075251177 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070454985 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074592174 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073529694 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068668509 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069286218 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073821049 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06826478 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071513214 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073143412 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072844041 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073326628 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08750296 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07224976 seconds)
  done (took 9.164092997 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073213863 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071507974 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073486949 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070871601 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071047538 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072002575 seconds)
  done (took 1.951350598 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097592681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072079002 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084262689 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074640919 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110333855 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090705767 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091345401 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082037812 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087137063 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08173459 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090135882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0915483 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095632907 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075366222 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09022371 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074561757 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091006331 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077860934 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081752957 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075906205 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089698474 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075385468 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075621717 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084822288 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07929321 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074822219 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082014395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082060241 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081732005 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081590837 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075536459 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079659517 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073694798 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081411031 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092500191 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07388421 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075773481 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080293495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075729911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079636536 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09115271 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075867313 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07744806 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080075091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082025182 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.0734457 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080481538 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082771197 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090101454 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.08065334 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080613396 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074640972 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079641515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080512286 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073959249 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081840202 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080359191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091233581 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075464659 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074631062 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072540944 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07933561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080877479 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079815062 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083799483 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080087311 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07439662 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075584323 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075804445 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074671748 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080610415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072141562 seconds)
  done (took 7.334596718 seconds)
done (took 29.055812501 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538767472 seconds)
  done (took 2.015658128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.631196402 seconds)
  done (took 2.131407795 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.551633785 seconds)
  done (took 8.05535406 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401658444 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.510332652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.75090441 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137970902 seconds)
  done (took 3.345972436 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731847935 seconds)
  done (took 2.240371486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233176106 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219061674 seconds)
  done (took 1.970146044 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384846704 seconds)
  done (took 1.885987624 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.159348905 seconds)
  done (took 2.663548863 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265202341 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183142796 seconds)
  done (took 1.955981449 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488439728 seconds)
  done (took 1.990238336 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.879346717 seconds)
  done (took 6.386562444 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21857568 seconds)
  done (took 1.769946331 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244740131 seconds)
  done (took 1.750733495 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752833883 seconds)
  done (took 3.255701173 seconds)
done (took 42.923317942 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086636266 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08806792 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088627319 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084440908 seconds)
  done (took 1.84221104 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07962456 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075587252 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079557209 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076042454 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080684445 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076259637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077322441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078447161 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075410827 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075741209 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075656202 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075683096 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078416182 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077274565 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074276075 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078239675 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.0794113 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075718162 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078510859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075603931 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07355794 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077847788 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078264846 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075214352 seconds)
  done (took 3.356578816 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082112879 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075448079 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078888371 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074821925 seconds)
  done (took 1.823473648 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080843968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096240824 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092974599 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081758573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095722664 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08959 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072100533 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071873137 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074093743 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080371094 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071356815 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099007664 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091403985 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080371379 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083237726 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069166827 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07137987 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09105017 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081929484 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082234152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073486039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081211136 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071236496 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092224378 seconds)
  done (took 3.483854474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089649135 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109155965 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083934928 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093136527 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094604764 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06788128 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092322399 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09526368 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129783319 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068421071 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073792424 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068715403 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076043045 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068068384 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083945083 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111274242 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114813056 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.0718201 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100430485 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068454953 seconds)
  done (took 3.278998795 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076197425 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07357771 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07168868 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069549768 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080149896 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076357261 seconds)
  done (took 1.965726962 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070687865 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070953949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070439517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070532458 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074995565 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070259785 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069163775 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070343196 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070668852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069962494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069866649 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068726074 seconds)
  done (took 2.362235877 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204582721 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071299128 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071784016 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068610049 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074163959 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069311668 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084464899 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071097507 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095897064 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06934157 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069796848 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072315451 seconds)
  done (took 2.538770791 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212172082 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078994583 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242688528 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155075691 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114680904 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119296161 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115848808 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117135832 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145602233 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104119357 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171280081 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170747691 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111250033 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141306094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092693826 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102422732 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157842477 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167672113 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109291312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168374562 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151416932 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129506437 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150473964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106007551 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109143246 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126479413 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074379769 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082892417 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174284405 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136747579 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14736995 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114342187 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095991032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179765739 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175511969 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144098477 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151501947 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088820854 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105867899 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136542664 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201778298 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091857866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164711285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250333348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084827422 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136904 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122257219 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122792164 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108768198 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094042169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150164438 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188396031 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141767088 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091086991 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128816343 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116920101 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117788621 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117449156 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186680961 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165496518 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132362467 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075354799 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113221274 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156305199 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136080536 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113448446 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128534354 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09570318 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137644539 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158007828 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125624876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147276357 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12056685 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09175595 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121287214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143358089 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130715238 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165077533 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12738553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076175769 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126081869 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105227884 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083158117 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150273258 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078339069 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177394906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102428993 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109205135 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128875408 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112700067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112168477 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162031071 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146668174 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247157712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069728875 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110165795 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124593867 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149860856 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090680779 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112927529 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11900684 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080791811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140844176 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078605401 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126182609 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077566714 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127372178 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133638007 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081667205 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126186988 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107340706 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102699311 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136609038 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162675881 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091781794 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086353042 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17365304 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125420839 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106961697 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146757614 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159419089 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101549304 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103428069 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154610172 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183253735 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092067851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16598586 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109986416 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0868139 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091315739 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126076589 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114912466 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126991863 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085560917 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120565878 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170696657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077989713 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098440669 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136097494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08221406 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083759389 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108148838 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108148988 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099231621 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102832715 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105678458 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138964944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126176924 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107561923 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126298691 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100440499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169801946 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088497715 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102964008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105103613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071175862 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1336878 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154019407 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080660382 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16079134 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122020014 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117234766 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120149399 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084963206 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139182648 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080048207 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071699061 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143673527 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109978034 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109723209 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147929459 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115854575 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124802241 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119913865 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130506118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128941057 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129387097 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105944689 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08840969 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111380904 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125970494 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074087214 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090274598 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080349553 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104904279 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095792642 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084054266 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139629346 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122440099 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110037177 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111176162 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096606154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144999241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077089402 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127116125 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119039256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095927666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149620247 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150346173 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131316629 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098286016 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13263361 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070555838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074138922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087370238 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.371921331 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088081737 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090135582 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123371453 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152052198 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134964751 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142417104 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129016079 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125367041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158491551 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07410327 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124664349 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149896259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12629096 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106925809 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094760167 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104599071 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147316364 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112097996 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187393123 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117601217 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127607387 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15661236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104363417 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083570325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106855158 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139970391 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107753599 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146677149 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102737592 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092540258 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113215061 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07797757 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101994846 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131206502 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121704177 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137785249 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118790267 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136407638 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080780833 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118494987 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124808384 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123698506 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066794349 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122710368 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163540013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098675489 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120765494 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15595924 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081899192 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138455029 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177398303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295214689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089657523 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111860645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123125338 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131057605 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123448518 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144304663 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111290645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140400601 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113937627 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089885737 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090724892 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101064954 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108099773 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098123151 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108021272 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116348731 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0983666 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134822047 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106457331 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112774115 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120196242 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102465797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094123825 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09968788 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179576856 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121347277 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174532749 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102981078 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146089225 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166456373 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078060222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082841082 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080849956 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143257598 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087805533 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133576093 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111105935 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121315082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126744529 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145470661 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098535392 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071482911 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113168226 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13510644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127724801 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101381202 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106196778 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165321655 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102583467 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081955466 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116696171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119175132 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106118984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173778179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064421033 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108740096 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224361459 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084921111 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133064458 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158273588 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083676875 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104632 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122882259 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11603731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130339734 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104005678 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111939352 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131006486 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155087047 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132545071 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093635681 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116659021 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131311089 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158434312 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108604767 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099972026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175764128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15394605 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162350808 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090868889 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116127613 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115737512 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110632755 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140429085 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087035144 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16576846 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084795281 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1398905 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10757266 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092012721 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132198642 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111672159 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090880533 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149819412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120289258 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086068362 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080172196 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120008309 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124386874 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109228043 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078284056 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141197406 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076504468 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134809147 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162682942 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083974546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108392977 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098411367 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082298951 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253048476 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106707008 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09124693 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100190719 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176501817 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090522403 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152047199 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136207737 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117249254 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139329433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105660336 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642318027 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081050571 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153769577 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118940587 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176871428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103878923 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11950441 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111816746 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125575927 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148514531 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106634779 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190002453 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135759431 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118882773 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082432138 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105613546 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107031448 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090774385 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110601671 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115945253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117820125 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095799416 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118754448 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126641097 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084923394 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098876311 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157789841 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119607496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147459975 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143016961 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090221424 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119419267 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139865094 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083198311 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122974383 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155369084 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108369955 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103178974 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083809807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103045143 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306583821 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077309491 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163936103 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123512087 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113008768 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115565295 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11520549 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133553147 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111458636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12403804 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095725031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111994941 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117299108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084660378 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080158877 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111833474 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114737102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100988544 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100242956 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099547525 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153594505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075385812 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101742666 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118507888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147238054 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177873022 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091544093 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085999051 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121244713 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117715989 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115595405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124064595 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082136124 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084984541 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082821017 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081445058 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111903721 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115739109 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117871318 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113259783 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166590615 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086760553 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240300652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099339066 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107762036 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07374875 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0817765 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099208562 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101505534 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10943175 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113114275 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16173521 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098072496 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092542497 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094013565 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076846102 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086398682 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130576472 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112116607 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265004101 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105049102 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065954268 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112031729 seconds)
  done (took 60.366374386 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110038288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085250918 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100088984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147558363 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125547029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205213137 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156525755 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192714994 seconds)
  done (took 2.77609187 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07059214 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099481001 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106272579 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087196504 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069448725 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071606962 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233645979 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0841675 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069235868 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099988966 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080878239 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072174692 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43768345 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069045065 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070117111 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065014174 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070090243 seconds)
  done (took 3.502227793 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.401783403 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622984305 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35956604 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079064976 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.895960663 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09259313 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.11197231 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136158047 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080345229 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524360419 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41205071 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131391805 seconds)
  done (took 18.501176414 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084110163 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077376006 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091887881 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091524467 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080749617 seconds)
  done (took 2.07496221 seconds)
done (took 109.412134172 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084708335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.612509368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05579932 seconds)
  done (took 2.347631362 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085852094 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088721385 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08802011 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086630574 seconds)
  done (took 2.007007202 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077345113 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080093089 seconds)
  done (took 1.809374454 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237918706 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169458202 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099598283 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086157064 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082353612 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082988524 seconds)
  done (took 1.906750341 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075203944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077992628 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076339852 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079529743 seconds)
  done (took 1.96005444 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079196484 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054744655 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05713966 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060738993 seconds)
  done (took 1.903792635 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090091955 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082742658 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082168741 seconds)
  done (took 1.915762386 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105367228 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089710064 seconds)
  done (took 1.853996817 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085433922 seconds)
  done (took 1.746026954 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097954681 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104331337 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135131545 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114259353 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142757677 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112688612 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08779384 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089042015 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079549427 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089204368 seconds)
  done (took 2.712675906 seconds)
done (took 22.403748269 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081540443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369081918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362997329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092907575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670931453 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359511309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968027512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09594803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11798799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070959777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08803757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650931549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960709098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324144993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951347617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327914247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652674599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071152156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070509948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0717418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957282412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070392011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070488122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071205381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651817459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375303384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071767626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324551261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071653566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072746441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358546015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071825526 seconds)
  done (took 16.173579267 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073904541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124846671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076133243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08848673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072884889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072919012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074228842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072372807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138523061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070445867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088393382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07040305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07457894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071242597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090267195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071114833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071826615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071411521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07198249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071387584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090813155 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070394206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071113034 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072107763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070797521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084550624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072152676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071755017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071623555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073042856 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074105771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072241109 seconds)
  done (took 4.18729633 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117608174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127933522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077646393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107203772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114963314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072638639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147477339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096518566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130580026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070954779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088304028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07097594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105590003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071971542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091410999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071409641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07226584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071388719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07147992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071315944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090969633 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071603721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07141586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071708004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071491546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085665289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072587004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071283513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071706717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073818598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07459725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072944701 seconds)
  done (took 4.424961421 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075595118 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078242633 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086387866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087210707 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073269196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075111925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075962836 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072409503 seconds)
  done (took 2.301379247 seconds)
done (took 28.752315541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081159944 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071597785 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076907553 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085255574 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076347307 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081376336 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069736661 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07901 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075597845 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076117157 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078256803 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070217705 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074083229 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069694361 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076864893 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070712354 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082423811 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075464122 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082881494 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082821049 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073446289 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076412582 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078464445 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082117688 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082360766 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082822506 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080783318 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076314325 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071596737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073643939 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08107814 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087775219 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071945938 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082202379 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070921129 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071424803 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075132367 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071054249 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082585169 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079776571 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072774694 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079306447 seconds)
  done (took 4.896271516 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090431479 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096072223 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088365243 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064875278 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069759215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068834199 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092795267 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062771928 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061920143 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091403147 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058443284 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062220758 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066284288 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056584484 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063305488 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059645375 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064827859 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058396566 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063341745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062703049 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092669966 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05641886 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080902126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066375583 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059388164 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065147953 seconds)
  done (took 3.508030991 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077507367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.0887599 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093619926 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133117041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10894058 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082816497 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082256895 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098577414 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091884404 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070111434 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073701421 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096482353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09322687 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077091947 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070498538 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089604187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086812081 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071808657 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07730248 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097942257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090868741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088704746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099083869 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086484914 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070355342 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073180607 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074525742 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084380644 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0741474 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080236106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07359853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074206829 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072457293 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082283538 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073874064 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072708715 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098267222 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081669904 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082607794 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071755878 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079252695 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072091328 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096099334 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130052576 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070281853 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077172283 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07475758 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081314311 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0811545 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09069862 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082370519 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070401568 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073739308 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069968759 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069783248 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074156933 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07220141 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072615612 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080050959 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077232056 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095504676 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075755628 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086629062 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069974358 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079281014 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069727373 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071697166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069581116 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100850289 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07247058 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11449777 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07178715 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072122816 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079789339 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079110797 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076757469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071175372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086672815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080809271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073798931 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079570216 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073780753 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074391529 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093821493 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07285114 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072430718 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07148278 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076571266 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073742639 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0720887 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084192775 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07047137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073490478 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087773525 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070272838 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07184918 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.0772287 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075212482 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070917322 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082313862 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075634398 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071775564 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080678374 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070370391 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072971494 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082927139 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077110595 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069416263 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075050568 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076487987 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07128928 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072563218 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07444276 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072543472 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079351733 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078324754 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075270065 seconds)
  done (took 11.048781914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168525017 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161410105 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073810336 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153487863 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079831887 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082242244 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155834157 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098540184 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070996982 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071765754 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072502502 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11415136 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109726526 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119704748 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082170909 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071010637 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087846467 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119172583 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15714121 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151094421 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087713363 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080291462 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073221696 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071917081 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073653885 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081552657 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088798152 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081999047 seconds)
  done (took 4.55586432 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083011073 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109772533 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078369716 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094891914 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09496027 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071584912 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073513075 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07313494 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084716369 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082344034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07087995 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076694829 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077735219 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074488544 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07138036 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07800691 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077736558 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072503636 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074799883 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076115424 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081588013 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095930943 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074938607 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070123397 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076446045 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070379443 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066393532 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088047344 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071400668 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099191708 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070061865 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077326499 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085603508 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071720458 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071599629 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071159711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071410516 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070897842 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073221437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06962294 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069800015 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060419037 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06964227 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082342749 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077882053 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05909704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076217309 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076213689 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075931443 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068783001 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074315173 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073623757 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073887543 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079018705 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074674785 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076105085 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071693812 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077580289 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080423708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071150604 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068071994 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069344272 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075826047 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06809138 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080160408 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076060885 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069461482 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070242809 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072554213 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077597513 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070609782 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075259688 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06846042 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072771757 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075349844 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072427159 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072966753 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069264513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070218548 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071376649 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058071539 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07116798 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056767649 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073992795 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069547679 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069473603 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070778696 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075800827 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083148739 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072169856 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077222542 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072206185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070268206 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073997712 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063208858 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073661825 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082480903 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086075739 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07100153 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068971905 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084943828 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075806992 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069962342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058722954 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075202114 seconds)
  done (took 9.555079103 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093958041 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073333368 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087857184 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093419997 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091187922 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078477786 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081694647 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072524801 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086844091 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077159867 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080706463 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070760283 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081288105 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081134183 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072762999 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081497059 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075317781 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08865412 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086252272 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0709673 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080125333 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083963435 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094281666 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085338269 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084068846 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085560912 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094130046 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08141526 seconds)
  done (took 4.038466904 seconds)
done (took 39.273230224 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.763280032 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.013514856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.75649125 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.113350742 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.089286189 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.766212821 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.853990325 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.753037391 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.925723004 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.787274938 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.03338336 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.97491798 seconds)
done (took 65.517603651 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.77789146 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.893830554 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980538664 seconds)
  done (took 5.562903818 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.026970575 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.314447433 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.003960438 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.748895552 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.756119948 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.087022747 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.560440613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.282061511 seconds)
  done (took 30.443105128 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.906809951 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.968422836 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.457403774 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.47831541 seconds)
  done (took 15.554445863 seconds)
done (took 63.135889953 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.773715975 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.763179095 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.765310465 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.735652532 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.811478211 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.76013895 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.845865994 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.973774763 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.752398344 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.736147088 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.753933877 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.222707324 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.760475677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.887986816 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.764120804 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.752109857 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.793125337 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.210135056 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.911461128 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.761245663 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.757975957 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.799143807 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.758143874 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.755502897 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.787983118 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.750988534 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.115972811 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.751180034 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.556489283 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.758009646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.792998315 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.115457041 seconds)
  done (took 204.124685396 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752276592 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.68302109 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.785758667 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.789812176 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.186139912 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933029697 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.869812049 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.230493682 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.754560479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.772868336 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.928439629 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753801121 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.936808039 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.756089261 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.781160156 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.846628542 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.913166112 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.958962577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.784678014 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915961395 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.772298047 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776653815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.717615898 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.908012858 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.788129301 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.769024973 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.783554556 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.779069947 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.952018896 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.881997089 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.788058084 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.754670422 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951722911 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626224446 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.769852589 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.758519556 seconds)
  done (took 168.803032026 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.928231504 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.754583117 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.754914554 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754403932 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.761158432 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.753603576 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.882926282 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880539205 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.38037162 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.44270666 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.808432225 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.552046274 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.753415219 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823206248 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.765480115 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.754934564 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.769667787 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782540019 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755540631 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755776057 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.88134103 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.768074355 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.8755753 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764796435 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.75889444 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760854258 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127131515 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75638883 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762031834 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.996578868 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.757897839 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755724127 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615834618 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.931115863 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841147171 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757127577 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76143225 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.75540694 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973221348 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75853116 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.757013295 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.760383857 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898475328 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756624888 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.877563002 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762022248 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23487371 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.756493933 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756770076 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.476348731 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.36158839 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.760098397 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.757012328 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.758927034 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.755602455 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756232157 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.756037034 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76365756 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.413731517 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.830640983 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.758123256 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.76072069 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763096122 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.75724232 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.900414656 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758165575 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.942630742 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.820234061 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.988357489 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877357549 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760144619 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823641338 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849832474 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.757393595 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.757795805 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757678163 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.757405655 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.838467895 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.759492284 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.758516345 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.886349674 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76636585 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.758782364 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.810225446 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.828230769 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.760908829 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596420769 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.761843796 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.759069878 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020387804 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822555991 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.758973221 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.759309964 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758281681 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884268762 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880871378 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.475033582 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.762923722 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.758584247 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.409788991 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.762992946 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.892184781 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758904479 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.758753052 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901264252 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.763847897 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841521299 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765742834 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.761129573 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.759363703 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791293051 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.759683515 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.814589139 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.760414099 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.134732988 seconds)
  done (took 400.49451938 seconds)
done (took 777.095089508 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.42750321 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.392799141 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.491809254 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.412501801 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.387184279 seconds)
  done (took 13.812551537 seconds)
done (took 15.510578658 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.852593201 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.857796509 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78686458 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.854762473 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.78752728 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.853929233 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.836572881 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.787707602 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.823008208 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.787847901 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.824100754 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.78797313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.778058736 seconds)
  done (took 25.322761169 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.995365958 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.189459767 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.838029907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001286154 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.8144114 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.996495807 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.929344592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.922335897 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.917037106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.784838887 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777787515 seconds)
  done (took 22.871845462 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.001336828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.009683011 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.843343481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99481646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.815044798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015379813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933386201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.921428957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.921391048 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782028857 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.780182304 seconds)
  done (took 22.724741797 seconds)
done (took 72.624154786 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.774728571 seconds)
  done (took 3.481252143 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.804302611 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.979972349 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.782607894 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.779585037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.776210537 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.778079445 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.781745505 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.774244775 seconds)
  done (took 16.163719073 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.771861319 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.770271714 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.774220576 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.772079253 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.772230465 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.774677347 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.772484419 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.774640366 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.772925267 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.775341872 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.772234317 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.773226343 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.772125862 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.77230877 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.775338174 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.774158829 seconds)
  done (took 30.076079681 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.773495018 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.770049056 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.770656831 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.77249871 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.772862426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771532595 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.775804923 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.77145211 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.772793337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.772290095 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.772378167 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.773942331 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.77362023 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.771502388 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.774343444 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.773483478 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.772059812 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.773955663 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.77814221 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.772622114 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.772611118 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.775215488 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.774501925 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.773477251 seconds)
  done (took 44.264912553 seconds)
done (took 95.689411865 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.64504589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.491482659 seconds)
  done (took 9.843756196 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.779055126 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777866032 seconds)
  done (took 5.3306827 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.779387995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.776230173 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.778338631 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.778389608 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.777697836 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.775652481 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.774629954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.777543395 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.777243912 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.775545614 seconds)
  done (took 19.47987514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.778739129 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.777705421 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.775158758 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.778518717 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.775613823 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.77363775 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.776022019 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.777333788 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.778319448 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.776087983 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.776875341 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.774661107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.775691256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.776021086 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.776809705 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.775318222 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.773642672 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.776039439 seconds)
  done (took 33.681413394 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.777452205 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.778218656 seconds)
  done (took 5.264799368 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.775454168 seconds)
    (2/7) benchmarking "second"...
    done (took 1.777438686 seconds)
    (3/7) benchmarking "month"...
    done (took 1.775086742 seconds)
    (4/7) benchmarking "year"...
    done (took 1.773763463 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774812573 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.77578446 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.775536735 seconds)
  done (took 14.137309621 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.778963421 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.947779606 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.003968598 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.438049671 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.779390417 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.783598061 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.733294126 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.780769887 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.784079357 seconds)
  done (took 19.738753341 seconds)
done (took 109.185502826 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.610880249 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774344674 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.008792765 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.829648185 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.835836796 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.115230849 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.782790907 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.078248723 seconds)
done (took 42.745435283 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.800905164 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.104369515 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.142195126 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.799061548 seconds)
  done (took 16.756949347 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.759119184 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.293922086 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.811707598 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.365764853 seconds)
  done (took 19.971671157 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.143372842 seconds)
    (2/2) benchmarking "read"...
    done (took 2.124058618 seconds)
  done (took 5.981707296 seconds)
done (took 51.223281432 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781030372 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.778838803 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.780106275 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.776104792 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.781414542 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.776837436 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.777601818 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.779692859 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.775651234 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.780381718 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.780256859 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.780057902 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781342615 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778895826 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778309499 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781648719 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.778755303 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778130869 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.778672695 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.78116056 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775978118 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782117794 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.779932037 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.777785068 seconds)
  done (took 44.414083141 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.782306701 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.779998505 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.781165475 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.782629873 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.776735895 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.779875959 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.781102389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.778247307 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.782376687 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.780631699 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777930974 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.780089026 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.782046623 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.778354078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78250958 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.778621913 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.782806945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778568657 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780865092 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778916345 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.78269359 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777527905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.777787197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782397804 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.779266656 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777574269 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.781984095 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.779103279 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784090702 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.778886867 seconds)
  done (took 55.119407324 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.786390938 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.789598508 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.783051026 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.78236027 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.784275025 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.784611077 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.783041121 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.782830453 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.781221622 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.78436407 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.785274351 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.782832462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.782666887 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.782478037 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.783801955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.784970434 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.784254008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.782780475 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.783766032 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.782027221 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.781613186 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.784944466 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.783430988 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.784457275 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.783437918 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.782517133 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.786076442 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.784525957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.781741732 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.784590751 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.784059299 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.785767356 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.784592442 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.785086574 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.782944516 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.784876188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.789942085 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.791077786 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.783182956 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78428406 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.78368371 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.785026435 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.785385418 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.786577126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.78297768 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.78518459 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.78526494 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.785724884 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.785869853 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.783932967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.785384537 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.785935813 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.784604718 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.78408892 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.787933848 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.785845085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.786112532 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.785717758 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.785973943 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.783655529 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.78520945 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.783862257 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.785719812 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.788487592 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.785816901 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.787123465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.786302477 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.786419422 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.785003721 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78698294 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.784222962 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.786610626 seconds)
  done (took 130.224369374 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.78547213 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783075584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.783945164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.785233027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783842774 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786116121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783988764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787984903 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782890887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786596074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78689757 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783048955 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785909555 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78662285 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786895556 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783137997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784897887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782394022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.786651199 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787295991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786286261 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.785305095 seconds)
  done (took 40.991229161 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788205173 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78659657 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.784467399 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787307021 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785783978 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787277946 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.789481342 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787201823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786694761 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785651027 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786566641 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785814105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786976875 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78445771 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784725631 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786511366 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787072424 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78629877 seconds)
  done (took 33.875398596 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.786629013 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.787035852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.789051304 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786488874 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786646692 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790336477 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78517181 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790633973 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.79000524 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.785813227 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.787791394 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789180131 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.788496392 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7880874 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787951273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786900056 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78779595 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787357964 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789771959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78693077 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.788036993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78914347 seconds)
  done (took 41.056076621 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789756682 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789717281 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.785281579 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784976043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786130948 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.787402051 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.791001818 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.78620007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.790002989 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.790675396 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786668013 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789747482 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.785217875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788557343 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.786039293 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785303471 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789099123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789925997 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790506799 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787420362 seconds)
  done (took 37.482266263 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790370901 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790936122 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791385156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791059598 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792269618 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.790135411 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790633491 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.792581612 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793007554 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792478747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79284025 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.790760456 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793100073 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79243206 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791821607 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791598696 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791563405 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79107583 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793831222 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794258672 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.791740011 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794237652 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792860826 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.792042551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790776523 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79320755 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792935931 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79522406 seconds)
  done (took 51.904495308 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792571824 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.793611785 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.791048597 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.789339407 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.788096573 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.788505934 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.790986895 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.790258871 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791250628 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.789495386 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.791183137 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.792907973 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790715325 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.790783933 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792910255 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.793144041 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792020294 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.789723621 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788627819 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789343267 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.790632014 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793821636 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.791068302 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790268431 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797063193 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.792392436 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790872325 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.789758649 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793119292 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.789787356 seconds)
  done (took 55.45945601 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.811632595 seconds)
    (2/2) benchmarking "in"...
    done (took 1.81299885 seconds)
  done (took 5.349583018 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.787968059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79272324 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.795221115 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.78925605 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.789819245 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796421897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793445365 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790308266 seconds)
  done (took 16.060409942 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.793031772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.793664959 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.794465202 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.793127206 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.794147787 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.795105081 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798843869 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.792337433 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.7929484 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.794839624 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.801933835 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.799979953 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.797108851 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794375735 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.796120317 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.795849722 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.793847999 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.794188973 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.79413719 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.791899274 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793916092 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797037213 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797896317 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.793153211 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.796218266 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.804930734 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.79901137 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.79722281 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795715839 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.799487691 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.795707037 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.792901266 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.795471694 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.796198313 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.796505812 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.797173515 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804458839 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794675449 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.801539037 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796541318 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795670146 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.794043248 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.796797686 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.797467739 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7971794 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.797638152 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.795173196 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.795730577 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.796853722 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.799681288 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.801960062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794971589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.792593151 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799666929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797443286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803178166 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.798565652 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.800811982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.806292546 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.807797732 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.809712945 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.803667493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797380328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.798574164 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807208214 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819132643 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803759202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.793518471 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.793544855 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.795797602 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.802970242 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810632706 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.805175488 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.798050498 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799292069 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.798849973 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797817289 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797099781 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803216009 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.799934772 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.796888628 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797364812 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806855956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818629857 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.797708007 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.797471343 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.798188479 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.798522178 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.799160725 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807210049 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.798555481 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.798379144 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798979749 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.796688776 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.800455355 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.798660568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.796496296 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798981887 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.795617695 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.798653962 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.800542498 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.800424304 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.808862329 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79867122 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800275938 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.806062124 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.800430015 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798246234 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.803335666 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.799108163 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800486955 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.801654937 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.803870226 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.796472829 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802777795 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.806592218 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.801868655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.800369736 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.797673721 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.801272876 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807345326 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.823287939 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.802281639 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.80057169 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.803545955 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.810380363 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.802327915 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.804311403 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.80217068 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.797332591 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.799475298 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.80406458 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.800014057 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.799921012 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802556151 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80199006 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.797926896 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.800471942 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.799780328 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.800284212 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.80410889 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.801888906 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.803732947 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.801950523 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.800222334 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.801088249 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.80674675 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.797536678 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.804272186 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.802801434 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.796981602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802667769 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.80201987 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.80133561 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.80200111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803683543 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.802045365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.80240092 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801971769 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.803150979 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801356115 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.800436597 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803720417 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804239631 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.803352822 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.803159661 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.798732308 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.801892797 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.80351501 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.800973426 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.801918865 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.801105494 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.808206341 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.808838101 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.803819677 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.803220512 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.807483837 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803438092 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803539528 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.802574429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.806817049 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809189275 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.80450012 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.808007205 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.805210276 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80360366 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.803269231 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.802730907 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.80464056 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803434407 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805373678 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.811415047 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81652309 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812521385 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.806317975 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.807267765 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.802488946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.809144498 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.807368507 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.803984408 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.802911765 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803388038 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806242261 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.805817314 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.803507418 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.804911248 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.805861773 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.8030561 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.805860796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.805038238 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80271647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.805477733 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804337426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.800899403 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800365595 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804871193 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.804758738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802358937 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.804823187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.805290114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.805521269 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.807658319 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.810542312 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.801690903 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80416621 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803076939 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805645581 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.802407528 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.805012029 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80516673 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.805284723 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81099067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.80708323 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.807452637 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810875144 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.808975237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.804338197 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.806326277 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.807574274 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.803239552 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.810735404 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.815181056 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.804647673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.807719427 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.805759183 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808413736 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807294183 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.810542441 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.803499927 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.806896738 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.806757763 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.808988681 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.80124224 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.806562553 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.806968216 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.807399019 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.809556431 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807996689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.806770346 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809572098 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.809959017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.807195263 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.809640413 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812115454 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.81466264 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.812048856 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.806631983 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.809676234 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.810001852 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813132742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.808180675 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.808206229 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.80685334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821446596 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.816223044 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813104306 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.81043333 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.810201126 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812797741 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.810137314 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.811381822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808245961 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808348147 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.80892846 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.810102842 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.805448866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809172848 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.806676206 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808405182 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.812934032 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.811944184 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812003199 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.808562104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.808596743 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.810158508 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.810127885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.809177419 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.810405267 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.814167022 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810892846 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.808543905 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.809833593 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816831526 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808739186 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.811268584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.808639773 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.811568927 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.808541168 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.810817451 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811582217 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.81213865 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.817147577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.813909206 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.818671372 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.810594332 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819112047 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.8090338 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.813762135 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81863621 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.80808702 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.809199096 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.811544398 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.811477834 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.815553437 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.812585754 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.811503449 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.814513041 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811148715 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.811635903 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.809475296 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.810564958 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810455404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.810767655 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819446 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.812746903 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.812590732 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815191384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.808718759 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.812463837 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.811690445 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.810221844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.817933578 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.812074902 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.813289255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.81238936 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81058105 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.810864157 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.814180696 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.809408135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808910092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81027626 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815768282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.812913521 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816185071 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.810336597 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.822418257 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813057902 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816328468 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.811460293 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.813299184 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.810762843 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.813351113 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.813283397 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.812948373 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.81366857 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.815490981 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.813780312 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.815159617 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.816423679 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.814009655 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.815852961 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.814902954 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.812329619 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822208889 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833831614 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.814835223 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816441755 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.809336595 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.814678289 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.817988441 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.81318471 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.813830562 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.815386335 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822841529 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.821752597 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.815376335 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.814216261 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812832654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.8132741 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.814621086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.813317768 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.815626919 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.813687217 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.812642864 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.815230551 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817216415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.81266101 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.813431403 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817984033 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.81594677 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.823747057 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.816782662 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.818626105 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814733049 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.814759454 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.815659542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.814902836 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.812856025 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818934495 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815440679 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.814948876 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821247044 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820986479 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.819044772 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.813927468 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.814207942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.816209977 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.816637826 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813806327 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.815520111 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816821632 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.817861067 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.815787563 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.815520367 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.815808762 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.815183152 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.817069175 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815601146 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817109949 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822217601 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816728767 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.813591009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.815198493 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.816607426 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.815053287 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814750343 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.825274594 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81659785 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.8252068 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.825583727 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.821057684 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.812515616 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819366521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821546871 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813636409 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.818842757 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.81566619 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.817699216 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.816995417 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.82079465 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.819353451 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.825514929 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.816100127 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.816929011 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.828223917 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.82021575 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818461876 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.817730071 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.822254801 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.816975774 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.813416243 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.81746504 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.817580023 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82619986 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.819895341 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818834783 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816940753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.814606703 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.820193494 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822807283 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815828536 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.821026945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.815490832 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.820133056 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816581739 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818591229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.812414856 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.820514662 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.8166842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820881219 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.825510673 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.815617135 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818635588 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.818847073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.818757946 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819815611 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.819377991 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.817045949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.816007357 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.819759492 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.819214638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.819199262 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.820686338 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.815890519 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.819193262 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.820050914 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821038527 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824014507 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.829257693 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.826987792 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.81643413 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.81890915 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.819677254 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.822879911 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81974875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.819749099 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821174072 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.820483011 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.817792854 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821461279 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.819837906 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.821717907 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835169049 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.821925015 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819861909 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.820285495 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825303962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.818563698 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.816314549 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.822693136 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.823025219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.823773691 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.827866887 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.821314171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826463242 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822750159 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.82113507 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.82526994 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.826224797 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.831293624 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.825083705 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821088964 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.820161772 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.828101759 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.836787924 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822967787 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830803309 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.850345932 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.8252218 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.820983269 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.822349553 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820687732 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.822782391 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.823685797 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.82442398 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.824637335 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820675823 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.82402257 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.822628411 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828656711 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.824529707 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.823703365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.824133874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.823548937 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.824700134 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.819632158 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.824888412 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.821607027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.823923313 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.823076437 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.821911031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.825184402 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839489956 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.83378376 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.823843762 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.824819197 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.818854766 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.82673554 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.826823536 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835046132 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.831339334 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.825288259 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.824311647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.823565665 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824763762 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.822167974 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.825839928 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.825204183 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823100047 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.821525168 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.838960044 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.831664064 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.830159472 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.824907298 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825386359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.82393941 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827071525 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824000293 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.823843243 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.826188878 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.826124195 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82910723 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.826626264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822919997 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.828472199 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.831464787 seconds)
  done (took 1081.095409784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.822863772 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820573246 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819038194 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.821341669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822171538 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821681083 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821021182 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823005249 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.821426294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823290267 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.823913024 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823769946 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824215752 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823511694 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822823095 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.822251426 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823864247 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825047976 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824047592 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824669777 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.821317554 seconds)
  done (took 40.032563325 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.827586655 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.822124905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.82562511 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825073625 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822209513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.826095212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.826310925 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825605841 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82432093 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822973031 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.826086725 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825462358 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.8240188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.824313834 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825208629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827337675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.825841547 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822473222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.827836594 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823573494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825865736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82519244 seconds)
  done (took 41.907478258 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.828985515 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.826442926 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.828960823 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824271317 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.827925497 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.82474286 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.825921852 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.828001355 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.826705288 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.82941929 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.824681811 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.828038781 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.835183612 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.832632736 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.831939786 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.829288225 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.971367999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.829939364 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.827664387 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.82855462 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.825681455 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.832414618 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.824073589 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.824141408 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.828628571 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.827597437 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.829266853 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.827850961 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.830222567 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.832883349 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.833732419 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.828013306 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.829436981 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.830825935 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.828608693 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.829979173 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.832926218 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.830174517 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.827847468 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.827946408 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.838763489 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.849005956 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.828988099 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.835896654 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.830548144 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.829182912 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.83081738 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.839549788 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.826552325 seconds)
  done (took 91.560780134 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.828828283 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.829864277 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.827140268 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.829675672 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.827242523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.828494437 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.829541799 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831921837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.827603334 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.825841884 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.828174798 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.827450611 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828804357 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.83002495 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.828513652 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.826880926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.827639265 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.82914934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.826560069 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828738886 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.827989513 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.830511276 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.829491752 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82865669 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.830288176 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.826723383 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82889134 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.832308293 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828765191 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.825782834 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.830054361 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832361186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.831782926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.830560141 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828636498 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.831097435 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.832489174 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.828935602 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.830778809 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.827931044 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.831136914 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831549509 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.828739364 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.832737158 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830195562 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.828837967 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830263406 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.827211194 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.828623836 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.831809438 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.832418064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.828719444 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832658425 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.831810358 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.831569061 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.833002828 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.829495859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.829200991 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.834106247 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.828353081 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.829927851 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833692157 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.828667606 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.833029713 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.832276894 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.830814827 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.829845654 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831293784 seconds)
  done (took 126.186327514 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833919288 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.833875987 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833118926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833760755 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833897049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.833350897 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834247282 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.833854062 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835941745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834427706 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832973591 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.834838273 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.833652422 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835071505 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.832852647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834780221 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.834817061 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836373225 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834065002 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834901389 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.83205495 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.834581937 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.833590297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835573403 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833415604 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834419222 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836631892 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.834492227 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83468933 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835735047 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835422872 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.835473422 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835452412 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.834691223 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.836742497 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.834792665 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833807524 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837693086 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.836172406 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.834477502 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.833937608 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836451393 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.836001607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.833564791 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834611163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836049131 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.834147368 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.834649636 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835973124 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837069871 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.837487377 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83679393 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835401077 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836269133 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.834818662 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.836964054 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836048077 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84001206 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83597209 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.836115106 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838197586 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.835794594 seconds)
  done (took 115.542133613 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835682045 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836452036 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.834110287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.834148446 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838945959 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.832401213 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.836618794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.837050846 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83653942 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.836037094 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838337265 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833323731 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83510969 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839874979 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834436423 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836540077 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834410883 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.834048375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8367911 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.837139117 seconds)
  done (took 38.484296689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.834069956 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837875576 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.834725132 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835504786 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.837996247 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.834985949 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.834897408 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836676909 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834480306 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83741066 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838667433 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837073412 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835782775 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834998585 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83831314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.838274347 seconds)
  done (took 31.151004799 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.833833284 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.836986077 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839154243 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.840730599 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.835804937 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.834526457 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.839673348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.836689059 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.835944516 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.837182265 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839980628 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.836672866 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.838860184 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.83766632 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.836721719 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.839082109 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.835409212 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.836043419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.838410312 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.839781782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.837581027 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83544578 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.839520435 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.84047225 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.838874068 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.839121535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.835983898 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.836417466 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.834881511 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.837820386 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.8378277 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.838811984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.836808016 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.836845909 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83999023 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.835244821 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.840631037 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.840183948 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.841911422 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.839762112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.840008542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.835226492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.840330474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.839510888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.837730566 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.839173122 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.835366441 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.837185684 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.838474362 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.838865224 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.839031559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.842724055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.840124826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.840546063 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.841421879 seconds)
  done (took 102.868461776 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83773854 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841662184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837979082 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.838595726 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841873836 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.837499278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.84163963 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838206072 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837679599 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.841118486 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83798391 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83981083 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839611776 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842823717 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840106961 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842047229 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.838546105 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.838386472 seconds)
  done (took 34.883817583 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.837774258 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838238316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.842502762 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.840380733 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.839332912 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842888615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838005809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.842072288 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840689572 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.838302227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838623066 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.844122371 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84434924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.840762509 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839761203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839643088 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.842719067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843727494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.838982669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841088154 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840463963 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8440137 seconds)
  done (took 42.271239964 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.840677967 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.842281173 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.857976812 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.862093554 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.861871185 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.875819568 seconds)
  done (took 12.914634406 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840135283 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84467452 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839182551 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843592255 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845852785 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840370254 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83974918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842204223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843423377 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84230364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841283158 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843336794 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844540513 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841280538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84529841 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845223742 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841056166 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840155301 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840345122 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84234382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839192816 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84338806 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842239599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842519104 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841077744 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841394836 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844038796 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841768406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845116884 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844451296 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844974649 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841727727 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845167517 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842725035 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845129481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845362509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84297136 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845463728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847114585 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844177151 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847758589 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846192581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843671518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842980417 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845919023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842532079 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842869885 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841465933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841989988 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846040856 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846153382 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843484595 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846213023 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842385163 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845582954 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845987715 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844064631 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844216421 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844826429 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845922355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842427054 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846968639 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844588296 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843977541 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845714581 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843316774 seconds)
  done (took 123.449412821 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845191078 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842362904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843185425 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843479068 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843307625 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845241073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844974609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843953211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84454936 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843508016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847830294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843221911 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843498492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842582053 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842279238 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844142572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843676161 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843148581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842410382 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845442905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844120835 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84699579 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843989036 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84436754 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845807838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845741257 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843518355 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843765648 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84342824 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843240879 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845078051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845119219 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844109087 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84474348 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842988283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845393036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842736908 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844689322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845708048 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848418853 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845025431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846424674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844956125 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846830966 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846492456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844805669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844928029 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846144001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845440851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844130651 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845788453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84597487 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847031737 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845417155 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845291363 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847170744 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848076148 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845014433 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845751851 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848724789 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84422051 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844773118 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849300364 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846462754 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84451943 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845676841 seconds)
  done (took 123.54537947 seconds)
done (took 2519.540898355 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.900875476 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.922701327 seconds)
  done (took 15.601406176 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.00863164 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.966828292 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.8492511 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.848316292 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.848639111 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.844956325 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.862207105 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.849295041 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.850348585 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.846966221 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.848003936 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.032863313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.902894328 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.847633662 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.849694286 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.941525193 seconds)
  done (took 51.984223213 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.854129517 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.853445353 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.865172883 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85498786 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.853897407 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.864842372 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888959795 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.85493804 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.886715082 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.865505383 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.923329299 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.86372027 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.852745258 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.901336465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.866807384 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.866748331 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.947816928 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930922273 seconds)
  done (took 35.57883152 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.931976348 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.854333157 seconds)
  done (took 10.575921133 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.8567759 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.885345827 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.909514735 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.89000205 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.877427469 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.860665447 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.862194554 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.867498886 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.88286114 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863600466 seconds)
  done (took 70.539753021 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.864744161 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.862238786 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860350297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.859309635 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.853366699 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.85757171 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.860033222 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.857906571 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.526827818 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.898116739 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.868757719 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86789479 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.863289097 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.861113513 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.860655345 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.884203053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.953228562 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.858027888 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.859819198 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.866969265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.861420092 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910969601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875386046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.863938519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.891207367 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529830611 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.870063148 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.865773127 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.951350314 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.857536899 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.860410171 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.861951182 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.863328977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.245427291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.134033673 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.862273685 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.874124566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.867904731 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.857229607 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.954213476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.859712558 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.865182226 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.51131521 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.113891119 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.972005137 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904304538 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.171192485 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.879098452 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.864560872 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.889277532 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.86478657 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.861422453 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.877418717 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.342535436 seconds)
  done (took 131.674730729 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859924759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.211782737 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02900171 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.859880744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.148612374 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073669574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858065993 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909874934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863223807 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089164107 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.118165755 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967746648 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859654776 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.854322657 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861108056 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.855069557 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019381895 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.932691033 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861700748 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.85593148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892438488 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107353078 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.986562545 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862983349 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.888156481 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.074193364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.986749284 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.968669364 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.642336633 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.854104531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924336221 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86082746 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.858476985 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.854966834 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.018009095 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.958647894 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949551596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.860908077 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859317694 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857197291 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.530882655 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061755517 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.960635242 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.00241993 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.060217854 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072099096 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.646317034 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85769271 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.604794558 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026729555 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091952888 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.093681516 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98750131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.861485152 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.186909436 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857446811 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859300711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111487464 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009232084 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965640804 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861446413 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.86229549 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857553549 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106619791 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.860581802 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960078529 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860289025 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.857582498 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957656016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965711291 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.005501336 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076790883 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89406775 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.812848929 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.395449125 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.110607435 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931710289 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114542948 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8636351 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859151732 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944094767 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.713719259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118960741 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117607195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.118470107 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899996362 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.590177435 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.858684621 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.088175254 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.0856231 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112662351 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.066985062 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.106595739 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.191682164 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.861691378 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.858190244 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.087620317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002071821 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864394973 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.205839578 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100164653 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.439041432 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885759833 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173879053 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000617643 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867577389 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.506664692 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.858737756 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090241336 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906897933 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.861728601 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859769296 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.085525585 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.83998189 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859861938 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.515201908 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.925748443 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.863041603 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101065086 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.862423813 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127149251 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863114934 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105361648 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.449430968 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895008299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.04004845 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.069536711 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.866730798 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113177895 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.110563861 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983908455 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090908617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.483845061 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860465078 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154612232 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.862630405 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.861847921 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037767065 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861037216 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012372976 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.868408764 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149216392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890302249 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105074595 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864833675 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.118955591 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896909109 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912766843 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859997994 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986826063 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860421081 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.790175263 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021132017 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862744139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858147072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.418139869 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.858570438 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018303161 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.092109291 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881423216 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931906453 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.530458496 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85566336 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947716665 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883380741 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.252460674 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.853070374 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.111508813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.860109769 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.855398067 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.853993001 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.098890801 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.043767388 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.856672387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856153524 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.755464545 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.855349056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.854676672 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040600878 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.189160649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.855475918 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06811561 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860932733 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987323065 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860059633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940390041 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.193857454 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.853485479 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852975434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.85461394 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.857043724 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856248293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0705605 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88672805 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.3985551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.998400641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128595643 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.172235596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.1082038 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903704408 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855936929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122225105 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.858798669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.922398087 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.858382201 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879530221 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095465577 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860353731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.125949806 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139133083 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.898963364 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909454788 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.859252184 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854484188 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.856201489 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.010317194 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946746866 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859090999 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.858624268 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97614633 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985971231 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074219822 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.858579476 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.897357596 seconds)
  done (took 900.639247885 seconds)
done (took 1218.371035653 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.857788188 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.857597021 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.848676568 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861670699 seconds)
  done (took 29.220585783 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.8687736 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.864234405 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.865275281 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.863045954 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.864954235 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.862643416 seconds)
  done (took 12.982293996 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.893447301 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85948854 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86177332 seconds)
  done (took 21.407753643 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.933421873 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.249598901 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.979950738 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.28790953 seconds)
  done (took 10.244917936 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.86764423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.866187318 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.866723957 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.865647321 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.867119418 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.868971499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.865756337 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.867393778 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.868472262 seconds)
  done (took 18.600732267 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.295326044 seconds)
done (took 98.543098813 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.046347853 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.69493524 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.99606924 seconds)
    (4/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.998226409 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.057552266 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.432693927 seconds)
    (7/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067621775 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.284611063 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.887877742 seconds)
    (10/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.989161304 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.953430803 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.86050095 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.005332606 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.859954669 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.900372547 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.284863797 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.821453578 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.870142899 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.726132477 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.891445896 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.846195577 seconds)
    (22/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.008015879 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.895709308 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.846785385 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.409972553 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.891210111 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.70037748 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.939672482 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.198948516 seconds)
    (30/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.312683221 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.893598971 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942002064 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.102663652 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.864370156 seconds)
    (35/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.434131125 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.864528721 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.833365116 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.152174844 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.034154842 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.087713246 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.966762881 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.856930322 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.176627854 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.864463789 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.844714133 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.704185502 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.940236352 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.850199683 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.958570344 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.086474878 seconds)
    (51/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.909923018 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.281749668 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.863846758 seconds)
    (54/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.988828888 seconds)
    (55/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.06289089 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.117158618 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19142667 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001150877 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.86058787 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.962385872 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.866476745 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.416165146 seconds)
    (63/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.893242522 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.556036504 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.933663845 seconds)
    (66/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.962070934 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.871881263 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.4094759 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.841048533 seconds)
    (70/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.965324439 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.888185654 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131776528 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.552942886 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.961964949 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.338347451 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.965410513 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.567488897 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.862993212 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.064232535 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.959462295 seconds)
    (81/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.242730424 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.855438687 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.937575598 seconds)
    (84/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.932711826 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.109713343 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.385395904 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20418052 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04889612 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.937113511 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.191826951 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.963602683 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.117797165 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.803215295 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.896186423 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.849260751 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.933237116 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.956629514 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.852224677 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.577298465 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.378827904 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.942372229 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.815479896 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.315292533 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.996458787 seconds)
    (105/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.931278376 seconds)
    (106/309) benchmarking ("sort", Int8, false)...
    done (took 4.980749139 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.851088229 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.544746972 seconds)
    (109/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.999423964 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.066452932 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.165236047 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.972956181 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.164513084 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.870004113 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.896911236 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.103961601 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.108631267 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.033881685 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.366701545 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.975697668 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.388269591 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.098727541 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.872018822 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.17714007 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.923026577 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.862049027 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.166493485 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.891767625 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.119072443 seconds)
    (130/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.087623119 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.85741123 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.052472236 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.243035384 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.099248471 seconds)
    (135/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794261489 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.125222719 seconds)
    (137/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.868973915 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.95888975 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.308643684 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.01420461 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.149623768 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.01616973 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101012493 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.896497987 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.00316235 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.93218032 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.82675334 seconds)
    (148/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075736645 seconds)
    (149/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.45093766 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.946767398 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.895468833 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.891871791 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.778695091 seconds)
    (154/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856545667 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.137379279 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.887327973 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.111049193 seconds)
    (158/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.973395786 seconds)
    (159/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.976109568 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.192539995 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.510171532 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.996628355 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.871851452 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.631141144 seconds)
    (165/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.052518447 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.230600513 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.553480654 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 5.56155606 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.905463224 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.857553314 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.882709882 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.859411519 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.269040261 seconds)
    (174/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.366806792 seconds)
    (175/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.13636824 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.94902459 seconds)
    (177/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.898090277 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.899234234 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.05746316 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.183424375 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.964882533 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.922584652 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.108703668 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.878378996 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.911063101 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.887426916 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.95738903 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.155886215 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.940652432 seconds)
    (190/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.953166787 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.227761478 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.975079836 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.85768066 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.953993798 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.081633302 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.79065063 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.935403614 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.873593916 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.700482654 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.964382213 seconds)
    (201/309) benchmarking ("sort", Float64, false)...
    done (took 5.615476618 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877353413 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.524003476 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.054882727 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.927821813 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.859457213 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.500837276 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.948850395 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.263107787 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.100810453 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.51075013 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.493873648 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.861415942 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.133043986 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.964259314 seconds)
    (216/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.11877704 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.174463959 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.19682614 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.878269101 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.882573301 seconds)
    (221/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.507865289 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.895057315 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.518071268 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.95713247 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.917751467 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.318235618 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.005788931 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.873025829 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.561948029 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.983657327 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.859805754 seconds)
    (232/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.987891499 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.226197771 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.745913983 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.903920864 seconds)
    (236/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.888181155 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.949684008 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.250833963 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.956006966 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.875473418 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.992165026 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.896034394 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.219432346 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.020580819 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.074020946 seconds)
    (246/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.883383608 seconds)
    (247/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.299176004 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.829304538 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.272260705 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.05556419 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.977044832 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.879016957 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.438494864 seconds)
    (254/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.967284423 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.860513332 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.362432412 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897829896 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.680806128 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208658671 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.868313886 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.381021312 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.225272049 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.025887023 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.872477891 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.554431981 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.978576303 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.2198854 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.725265507 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.862573624 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241791511 seconds)
    (271/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.868212052 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.977824615 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.895396805 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.039682886 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.906115236 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.25826714 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.988759623 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.568260767 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.979457079 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.10612308 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.872164042 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.025208469 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.218320307 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.983359227 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.001334957 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.863866865 seconds)
    (287/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.55882096 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.138975603 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256920949 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.573100111 seconds)
    (291/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.352729352 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.782726393 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.880645224 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.958803461 seconds)
    (295/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.965412642 seconds)
    (296/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271299495 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.90684522 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.862516799 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.109761137 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.009619238 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.86808105 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.342798244 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987214402 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.059863026 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897233325 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.872226308 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.022753153 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.956746377 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.347969352 seconds)
  done (took 1009.584005346 seconds)
done (took 1011.642187172 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.909149488 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900776429 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.883705703 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.902883915 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.997293832 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.91012638 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.890586426 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.883327422 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.929883468 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.930297778 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883674652 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.901259942 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.880697428 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.877709201 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.876604022 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894756722 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195763543 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.91103653 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.89438615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.885003659 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.89569759 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.876145861 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923981996 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.898984338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.880745821 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.879741968 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.880549902 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893712469 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.985941381 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.879978923 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877232063 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.8907558 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.189252787 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.903410182 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.868385632 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.893623804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.883383728 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.879441495 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.875396017 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.903994488 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28583703 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.922861146 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.872785401 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.871589482 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.870725298 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.872361823 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874477183 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.870372221 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88116484 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883079764 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.278916902 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.92564264 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.87052489 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.8695632 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.877867803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.869650689 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.870173721 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886598546 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.88831667 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880308469 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.174825574 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.900750682 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.87492994 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.884836892 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.877398124 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.312340609 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.903677403 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.868940519 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279416162 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91691585 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.313095235 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.920611876 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.869326465 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.881355322 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899869093 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.183865648 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.893222304 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.866591438 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.877002737 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.86480282 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.878117847 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879067313 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.873720251 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.866437122 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882603348 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.894755468 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.878848515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.868263565 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876957529 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.890619448 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.876191252 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.881059496 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.872768357 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.866103626 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.879726684 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.874537436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.868972535 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.871809725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.874271663 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.878316353 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.280810083 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.931977991 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.86676472 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.866004092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.871142488 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.886101711 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.278490119 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.915356462 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.893582761 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.914966699 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.872053353 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.178866599 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907425183 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885138436 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.878434301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.874734995 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.864283018 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.176196965 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.310476695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.929490869 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.870072915 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.873738019 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887008745 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.870233773 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.869486868 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.189253849 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.903965483 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885535303 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.992700891 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.881681054 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.904603328 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.870027949 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.873076756 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.897938797 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889703371 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.905053124 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.873430819 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885936956 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.888654958 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.869880749 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.884264619 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.881588093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.872507763 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.877590218 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.865607128 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.900781136 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882634241 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885673706 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.894522598 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.991993473 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.870577955 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.182821599 seconds)
done (took 294.49197756 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.94065668 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.867065803 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.965441957 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.8699815 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.951636577 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.955311809 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.865263729 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.865993326 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863248671 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2385303 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.86457092 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.86568851 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.866438459 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.864349818 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.951215095 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.865421858 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.866385874 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.202339286 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.870721202 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.942381692 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.866113034 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.864662887 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.871722782 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239000422 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.863043074 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.862245457 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.939286775 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.868488282 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.207273534 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.866727937 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.861969079 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.206974301 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.960337448 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.888819647 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.877694194 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.878357043 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.951735583 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.877308773 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.951131524 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.948328747 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.964541024 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.910544757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.867118372 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.872085915 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.875488046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.872048928 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.865505594 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.900143901 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.868909679 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.865967059 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205647496 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.880650507 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.866444601 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.866010605 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.867807812 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.900322915 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.864296287 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.873102738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.96083789 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.874640432 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.934988582 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.246374142 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.239609664 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.872480452 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.861197353 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.864995286 seconds)
  done (took 184.230749487 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.92967208 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.936011562 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.934196433 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.869392367 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.918949037 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.928447088 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.868673117 seconds)
  done (took 15.178141815 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.869219695 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861123002 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910508886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.913058066 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.860916796 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.006845962 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859311186 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.872480746 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.858576136 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.909876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.857626722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858511959 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.868088522 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.852532569 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.903465137 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.867360414 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.968015552 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.8523134 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856890371 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.005829435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.85244439 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.856200853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.902438238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.859873995 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849621873 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.855908901 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443198936 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.850447349 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847153927 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.849095813 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846894667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.891322973 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849201766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.84823006 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848569849 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967536986 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.848185486 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849497211 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849858923 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.846694067 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.847555192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.850682664 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846504249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845285344 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.847401264 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.87093431 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.846335487 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850674865 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.847824712 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848225948 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.894664885 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.84934902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.841972219 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.840535315 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.896400357 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848415742 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841610228 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.839187504 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.846842362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836670049 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.991834459 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887691912 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.839260331 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.88945636 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.837128902 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.837304189 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.836916694 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.837940877 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940781528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.837003741 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.885944072 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.835755923 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.994363356 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.860170559 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.840022933 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.837070709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.835911979 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835180366 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.826147624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.835266552 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.826528658 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.831307914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.846880687 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824577239 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825359447 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939632152 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.936250865 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.828852162 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.839089705 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.83506323 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.82136786 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.875172983 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.825873209 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.827984782 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879402109 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.941455955 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.879009472 seconds)
  done (took 203.356447311 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.83122879 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.827407888 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.822563977 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.838006035 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.82192178 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.819574377 seconds)
  done (took 12.70629915 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.823213476 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.822275949 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.819332657 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.818179852 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.826394211 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.8239273 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.819715455 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.82547865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.828433241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.821250708 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.821210824 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.817635041 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.819159757 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.814670601 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.81883913 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.817313584 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.818170117 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.812524699 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817027108 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815060248 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.965510808 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.817239867 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817404211 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.819465651 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.822209089 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.815352579 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823444967 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.816984425 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.816307201 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.825149811 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.821224212 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.819020189 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.820436443 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.82449268 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.824811722 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.81832305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820906496 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.820173099 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.813188025 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.815650929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.820585423 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.817140906 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.816294601 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.82183634 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.820664977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.823918151 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823032682 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.824459486 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.820229918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.820179341 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.820440012 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.817076022 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.820704745 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.819952745 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.820050541 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821689826 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.825318728 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.821681042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.820179169 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.818700927 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.822840171 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.822488914 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820936618 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.822405073 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.826603558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.819648818 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.819782474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824805306 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81839972 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.819469904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.822307277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.815112092 seconds)
  done (took 133.954172099 seconds)
done (took 551.235301968 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.947999027 seconds)
  done (took 8.690222703 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.910473656 seconds)
  done (took 8.7317857 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.443301437 seconds)
  done (took 10.226547535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.875259364 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.888166475 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.858461512 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.85165361 seconds)
  done (took 29.281487002 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974457865 seconds)
  done (took 8.757776708 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.872592814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.850325023 seconds)
  done (took 15.537840581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.902296943 seconds)
  done (took 8.687523387 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.964821425 seconds)
  done (took 8.773284784 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.861918989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.876220813 seconds)
  done (took 15.532757947 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.831979525 seconds)
  done (took 8.613543716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.448921147 seconds)
  done (took 11.326889672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.868139991 seconds)
  done (took 8.756953456 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.933116039 seconds)
  done (took 8.715588824 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.964081264 seconds)
  done (took 8.746652639 seconds)
done (took 162.11888444 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.851633175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.851634007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.850108604 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.847802346 seconds)
  done (took 29.183483478 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.889253472 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.887565496 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.889718754 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.899558997 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.892444312 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.88832008 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.88141422 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.882480315 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.899228094 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.891472082 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.890797456 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.890600812 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.888624183 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881986603 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.891599942 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.891114442 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.899935031 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.890637135 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.882250182 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.892391885 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.856801198 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.899987098 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.893051543 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.857704158 seconds)
  done (took 47.092299436 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05541786 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.92688621 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.009058534 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.907946482 seconds)
  done (took 9.682446019 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.90976655 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.909856551 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.923094455 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.960968988 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.983752928 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.918431495 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.881104768 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.878367324 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.865106316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.911144918 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.986201597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.905034558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.000321173 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.858181406 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043620284 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.857721123 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.859042563 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909450964 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.960448193 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.987929273 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.857512283 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.91023864 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.912745861 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.905388704 seconds)
  done (took 47.879948503 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.855643005 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.864290564 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.862429453 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.857368808 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.856667719 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.856305073 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.862473249 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.857711498 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.877948162 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.857241377 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.856596407 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.856050812 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.85610258 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.856417926 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.855979648 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.869487239 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.871294553 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.857060953 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.859545057 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.862616451 seconds)
  done (took 38.994307625 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.851344467 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.720888299 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202948235 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.105558481 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.851246612 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.854048037 seconds)
  done (took 31.371611024 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.871735844 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.86492813 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.857789216 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920732865 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.002014192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.870096256 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.860151628 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.873962559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910911077 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.926788926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.884706876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.892306963 seconds)
  done (took 24.521246661 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.860819333 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.846443846 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.844662376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.863229521 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.858019214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.856671659 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.854193049 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.838984977 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.859057722 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.866272645 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.854862171 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861143151 seconds)
  done (took 44.053296176 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927776964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.728536664 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.875266567 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557587808 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373414849 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047087074 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365363161 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181538615 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.83744674 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109277943 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.783726846 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084530836 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096439506 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841236156 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931615919 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.282191579 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140966027 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075397493 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87222697 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562209678 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028284223 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.507609477 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.670683104 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031711646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115701629 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.038996859 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.164684452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.860811575 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039797793 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944679436 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914124573 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905820279 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177971982 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290168554 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0187468 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915141249 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559526483 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.622022519 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.893007349 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.618778501 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.72562893 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037528795 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913262094 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905238965 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8409729 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.542007608 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249427911 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.910361797 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608704833 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906539084 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915023874 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994434317 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906100446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718254609 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851975808 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179718417 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.892663846 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902717787 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461992622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958733068 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.603922573 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.831590541 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.986108522 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636445815 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36615001 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.041485235 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.895069942 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895599552 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826948103 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.548503616 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01632691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037603298 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.911438515 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544212624 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198477728 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.922084989 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976360072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184264639 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.762728777 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.830713847 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120489882 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843710869 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827256242 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.754886729 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82798602 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165323193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931210812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.515287959 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936826868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.235865399 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906128923 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918872821 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901397353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119023757 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.778547151 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894685706 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.637055181 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178877929 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915866891 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23132897 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830580858 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.899139088 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150298547 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.106434712 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2316016 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.337071435 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055861432 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895108399 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.981704377 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.904940453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905269787 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.170268383 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954563776 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968507637 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026756335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854162776 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199292117 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923309253 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.068208634 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.850485125 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163436705 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.208771142 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147895614 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979697779 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899875639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896475225 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635705195 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.521140779 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.120308968 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.897836607 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479211944 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907796812 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.897891379 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832062423 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.553838787 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841928973 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.01725747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120264643 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.935465801 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171787548 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830958525 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042313256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.011878504 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.11980284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.546241701 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.980235891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157350581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359610161 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.223941629 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039577116 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917767327 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9902348 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918789536 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.303068204 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28321564 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.901483132 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.901377552 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.642824362 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.966686568 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90067433 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.903887874 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.695244896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181263688 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923633023 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907508282 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.787381335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.911253875 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965804946 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903136132 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907787049 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402035785 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652181148 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.911447477 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.560312796 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124584327 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909124594 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.634318022 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092007145 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982639826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176158366 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959680079 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.833967742 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.601810239 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.60245589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899816403 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834601539 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900248099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90858905 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911390668 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.099588486 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182906404 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944171967 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.648505839 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.015014759 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910888906 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.904586768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899616125 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394613723 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979637742 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475635594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026129981 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037402642 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.914035648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835407302 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904037987 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905747918 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901251823 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.859932266 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953875677 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.55394815 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360505758 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161801343 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.549396529 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919646409 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.677062146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.030252052 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92371118 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.640333366 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952703219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.010933718 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984974072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.922645238 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.564529012 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.693645958 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475505609 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220269343 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226108575 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348634875 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.372943168 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.248779288 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25022077 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146373539 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440306089 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973921878 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261391252 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856933034 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998940815 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561324699 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273069666 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931959073 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14002268 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300104602 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.769030075 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074613042 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124277731 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950526517 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.797098297 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954322544 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.118018368 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067871868 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.631254412 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140187515 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251663406 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667073795 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.02101304 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.911358227 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.612059443 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998765305 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.623006406 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.276307289 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.561775362 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.881042308 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416811979 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922424226 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35933308 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268784349 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332704822 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.003902948 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849921006 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92487936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924505572 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.914702732 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.893114058 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.765582768 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.165907121 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925130007 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149747001 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276308464 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178033718 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.820024917 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.919503983 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914273289 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215597139 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.728802921 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161518513 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.327903236 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.498563206 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925071329 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849337589 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849446115 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.617968409 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917076769 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888992776 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142900583 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.026592089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870451816 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360906282 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240579801 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171141313 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.929035222 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190694654 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193787915 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.651000692 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945215618 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.017174763 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664642 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.619783728 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138647968 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152888732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716301536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146504742 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.965753277 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.886503123 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.914871865 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130842075 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138817689 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.884822005 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171029049 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.640938603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.923811487 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288206957 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974432819 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.924541112 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132701808 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010918468 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927484921 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997190747 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926749963 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.928077559 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928168143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965270798 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9184295 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.053567996 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.930983198 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011589833 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993467678 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.500831334 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.928151775 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196520037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27295553 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246958867 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977940085 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917614507 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918814858 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853157862 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056942641 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36421078 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191312533 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049372563 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.060325214 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944760535 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643426811 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268335334 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242252303 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193755155 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.814103267 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918339807 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029464405 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.143965249 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93051095 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.129783143 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153204576 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246854689 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391426343 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.135935318 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368395412 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193530993 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285321126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919459057 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513507193 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.927252642 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.685327922 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.963333012 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887720501 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209880331 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930632477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299667205 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942220557 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.114909746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.436571697 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576067141 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286230792 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911999233 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982332782 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198519784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309307472 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23409604 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988526489 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931749054 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.620091418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058215905 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.767984444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.14526193 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920524828 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132353109 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.633819113 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931857134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201575567 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232118925 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.91766916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.797090176 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94395112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.931952516 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144979175 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191618744 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174032807 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93190845 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924639382 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.737915644 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202678757 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981111962 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856587727 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.925826576 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020888447 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170847137 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943230135 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452422223 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62602052 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22249677 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.843400012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944148111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393888439 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373005483 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252418573 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.445074674 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156559116 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495993214 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.837983385 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307348623 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.928268517 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385787626 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310111798 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.927046544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.492214914 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044908113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.197928751 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246932136 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.930784028 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721161866 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.970105497 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147006879 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516484126 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86902077 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927880903 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.986459395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924628103 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.054877791 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935330862 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.833012333 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851969284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.773924564 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416987371 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.929939791 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.917861408 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.707528907 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.580237589 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041641347 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081480499 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932692472 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.634859784 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.216068171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179817675 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.494843763 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.002816041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.928814432 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925770509 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853239166 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120860264 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.147267988 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233801323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.351019429 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.044547002 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9294441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.140967834 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137657852 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.885074272 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08570169 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379148953 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046416724 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.846435379 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.640686041 seconds)
  done (took 1705.694411583 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924482954 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.961954841 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.973877832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.924294227 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968142602 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.995897417 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.035109943 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958342901 seconds)
  done (took 57.601474452 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.926356979 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.143992881 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93449398 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.926120442 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.983759826 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.926451451 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.151173831 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.939294531 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.980698962 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.938602015 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928310085 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.943514073 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.333558233 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.953328266 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.927816263 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.939181712 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.954381476 seconds)
  done (took 75.744003782 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.927137897 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.107150906 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.963633217 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.948996557 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.801241496 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.940088998 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.879151288 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.952268598 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.930600591 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.101302474 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.267874528 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.934069099 seconds)
  done (took 90.614189312 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.942791159 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.933592374 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.934323523 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.934055234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.935244622 seconds)
  done (took 11.548591293 seconds)
done (took 2215.778050486 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.176187608 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.15188767 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.165463564 seconds)
  done (took 6.177699418 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.079681465 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.126929259 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.247967584 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.251488846 seconds)
  done (took 10.572176889 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.214838136 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.30026422 seconds)
  done (took 6.376524389 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.26294217 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.951852327 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.320289924 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.926843352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.933225401 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.932295306 seconds)
  done (took 22.659069034 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.932509052 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.935414884 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.932894012 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.935689016 seconds)
  done (took 9.596829702 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.912196948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.648496047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.917839792 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.931125723 seconds)
  done (took 21.271267477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682750466 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.330477134 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.677211093 seconds)
  done (took 9.552420969 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.452670554 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.85592723 seconds)
  done (took 9.171130038 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.190892737 seconds)
  done (took 4.053114292 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.962135599 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20492701 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.466573744 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.455866573 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.554528271 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.810611626 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.236216965 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.172897746 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.395214166 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.392087863 seconds)
  done (took 25.513491049 seconds)
done (took 140.515588672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.347082165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960906674 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.135926689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.284172546 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158683889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.134625485 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.153524633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.275708121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.812702813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.807260995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.288378045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.159652776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.095336243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945873495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.101695104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94595033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.156338477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.371262788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.010789274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.192653158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.163506667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.937266403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.131930012 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.95033126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.180129881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.083547357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.479750132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.950721171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.147971315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.493729646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.088587215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.331612251 seconds)
  done (took 170.142165388 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933879847 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932732932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933231174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.933861968 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.214761058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933210296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933560622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93297992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.960150915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.940460331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.934520149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.205658538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936633649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.933594156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.933561402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932293399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.104221316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.934376192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934472418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.932697972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934145187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.067169789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.933773702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.101326795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.096586974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942813392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.935041847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946079606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.950465454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.948195034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952044382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.934647233 seconds)
  done (took 209.040429027 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93324168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.934454738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936750551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.934602315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.936711511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.940875629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.935936014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.935660164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.431777366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.452184439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.951300704 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.939453333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953725204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936318259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957879937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.93508614 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955626681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959028912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.960380686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953477732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.956807304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.612741145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952460142 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.625736221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.949445367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953191185 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.935487738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956438431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957983225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95321752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95707482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.936259449 seconds)
  done (took 222.509093528 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.126512626 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.942748306 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.944331833 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.860018427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.943878204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.942366964 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.936711697 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.126321644 seconds)
  done (took 19.716786178 seconds)
done (took 623.278113842 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.393897959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.243108598 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.119866106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.967788702 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.219958529 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.002881794 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.962759332 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.029864123 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.692654266 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.035220513 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.654958935 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.986454573 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.744641825 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.993148287 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.087133588 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.023183452 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.552947961 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.650432404 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.142133088 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.015197438 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.137046237 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927267408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.049204615 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.732714933 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.770265491 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.985383868 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.150668055 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.560024 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.97628815 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.124433818 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.717087323 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.370023515 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.978949248 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.962967463 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.019945142 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.997151775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.323221973 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.978142064 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.085655015 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732715827 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.038329134 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.576241841 seconds)
  done (took 106.581805699 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.934238646 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.932018993 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.93129 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.931523979 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.932465283 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.931487105 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.930951008 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.930208916 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.932720005 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.931433132 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.931985549 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.932749568 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.931704043 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.933199325 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.931628827 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.934025089 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.932778324 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.934261049 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.932704743 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.931021528 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.932903548 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.93231637 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.947931679 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.932547793 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.935747489 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.935950525 seconds)
  done (took 52.14235822 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949592752 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.102376897 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.18806288 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970865253 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.948025167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.951094736 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.966455242 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.953903433 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.951267433 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.951129367 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.060502002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.955085938 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.967443618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.183534169 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.96680756 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.948724425 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.947798476 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.94847676 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.10963677 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965260561 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.969718456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.954634984 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.96807664 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.962676878 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950349375 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94944419 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.953552998 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.446649696 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.95962846 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.059500834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.994284083 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.973524643 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.364772977 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.205342865 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006569811 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.958868988 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.95017877 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065615003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.956376181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.951413761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.969050502 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.956292259 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.183883865 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.441000019 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.966594561 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.950898182 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.457340021 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.072520761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001902682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962653189 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.186976925 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.970548327 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.951515158 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.950597499 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.988474967 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955655677 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.950950309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.300845732 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.962470693 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.968455788 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.955446381 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.951250998 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114811364 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.960703626 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102631219 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.960810957 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.958611585 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.951822562 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.187075023 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.970102568 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.437605483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.96811497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.952979486 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.062906734 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109729038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.488142647 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.966745741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.116850806 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.383463459 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.978741594 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.960788183 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.439409258 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.982591405 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.961009305 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.956855345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.956034027 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.954322597 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.002428291 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.969932481 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.379862593 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.452856973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.324642249 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.982110961 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.969047542 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.955435842 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.302279474 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.963764533 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.95447359 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.18294785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.452528923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.970180361 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.962747999 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.430776736 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.972312539 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.974476116 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.964390607 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.193336458 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.972928243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.056797366 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.955686227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.961220002 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.9582195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.974641102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.963082287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.955810719 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.422545286 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.088082843 seconds)
  done (took 242.073950486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.950379742 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.95318878 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.94860095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.978227244 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.948254267 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.956095062 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.949018424 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.950003239 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.95599749 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.94959597 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.949555351 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.949952219 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.952111169 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.949806963 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.617599692 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.957291142 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.559472014 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.952475086 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.950003716 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.966500443 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.728996967 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959069045 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.951390987 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.950484115 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.952318864 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.951237387 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.955486122 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.081156038 seconds)
  done (took 170.758694908 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.958108311 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139464407 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.976675547 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.99846685 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.967655395 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.955486425 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.981678551 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.97957279 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.964616962 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.955263823 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.955745113 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01878172 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.969798 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.09603564 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.991234255 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.99039887 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.064372491 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.967144398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.956104226 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.956487254 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.988779209 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.954657997 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.019393085 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.087555626 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.978574784 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.076457214 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.963754042 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.960582916 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.957794495 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.07811491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.97574649 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.019765718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.988070846 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.977202961 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080307588 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.078658515 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.070495954 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.993101482 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.964430038 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.957254314 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.958681127 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.946515781 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.078369828 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.978916874 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.960764544 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069035577 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.979603936 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.961536239 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.969064822 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.958316704 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973046152 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977603928 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.02724377 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094072627 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.993814856 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.987619332 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.98597909 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.234700155 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.974029766 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061387797 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.957904232 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.081097223 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.980986866 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.947618259 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.961483801 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96580733 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.988732371 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.99164346 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.06756983 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.971431777 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061611291 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.999494283 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.96702675 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.959783685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.962321078 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.080829222 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.081430189 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.000598303 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.99805395 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.9921204 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.955919471 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.96094767 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.949565841 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.978595717 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.965089765 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.080144427 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.081662712 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.972482175 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.963093546 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.963416665 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.96348845 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.988659004 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.08741764 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.998299719 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.061838522 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.034856208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.035922343 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.975809586 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.975013841 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.965234532 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.024974678 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.977064047 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.973448384 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.281314054 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.033858916 seconds)
  done (took 212.337254341 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.433666458 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.02092794 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.019444652 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.280217525 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399485441 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.823905876 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.014448044 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.012279552 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.036057658 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.196851363 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.081533683 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.030448545 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.998672473 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.985789019 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.01360077 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.03308674 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.02541291 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326374785 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.130723481 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.146948544 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.995669749 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.281377978 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.334151775 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.424917582 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.047456395 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.345781247 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.701687656 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158012594 seconds)
  done (took 64.195223086 seconds)
done (took 849.955886289 seconds)
SAVING RESULT...
DONE!
