cset: moving following pidspec: 29622
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.100903119 seconds)
loading group "string"... done (took 0.630488424 seconds)
loading group "linalg"... done (took 10.923601489 seconds)
loading group "parallel"... done (took 0.234891106 seconds)
loading group "find"... done (took 1.712226438 seconds)
loading group "tuple"... done (took 2.574002387 seconds)
loading group "dates"... done (took 1.855694579 seconds)
loading group "micro"... done (took 0.280742676 seconds)
loading group "io"... done (took 0.689916494 seconds)
loading group "scalar"... done (took 59.726687647 seconds)
loading group "sparse"... done (took 17.941897604 seconds)
loading group "broadcast"... done (took 1.571625576 seconds)
loading group "union"... done (took 19.113942076 seconds)
loading group "simd"... done (took 7.670517975 seconds)
loading group "random"... done (took 14.299814069 seconds)
loading group "problem"... done (took 2.588424676 seconds)
loading group "array"... done (took 34.604971285 seconds)
loading group "misc"... done (took 1.356712224 seconds)
loading group "sort"... done (took 5.173685921 seconds)
loading group "collection"... done (took 28.099332355 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.727405022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149437029 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.188039226 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.198392894 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.224534955 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161168479 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174085775 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.58600591 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048522444 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.245305894 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.16210076 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.601405496 seconds)
done (took 6.323789423 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248986922 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.466079812 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141688088 seconds)
  done (took 1.370957099 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.084435109 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187940181 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.12070205 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105774721 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.122728545 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.122232958 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.122071342 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.121839754 seconds)
  done (took 1.667408103 seconds)
done (took 4.144024751 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519453459 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.859611327 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.500453599 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.139144675 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.174702919 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.167922197 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.355312784 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.176710642 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.131110268 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.126984876 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.193992377 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.369567392 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.535925379 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.02679224 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105820891 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.141214147 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.109167602 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685728925 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.09271342 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142762713 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.590078985 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119265294 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.108142325 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148137302 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.210218884 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143358559 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172161218 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.119495146 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.688608425 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107519538 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.200498703 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.112539623 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.194997343 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.249065869 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.105158182 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114279057 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66501803 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202765205 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.134847569 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090293607 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678238963 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086326671 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206364796 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.115857066 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120957429 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.201882331 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120034459 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.108777013 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108305551 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.095982452 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177120964 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484040739 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.114853824 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.157310413 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.118907715 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700143398 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104253074 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.165965536 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.146495058 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114047779 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.087373593 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120989235 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167392446 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121000292 seconds)
  done (took 20.520540857 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.127292738 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.154467086 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.106392137 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.169373719 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.151296755 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089049707 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.108612662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08794544 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.140121627 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.202848351 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14949499 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158567782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080643476 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.105258689 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128070704 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.261270763 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112577741 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.13354538 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087161452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.119163955 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.151995031 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.120460171 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.100936527 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.122497349 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.180450046 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.213103797 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.131496992 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.131510166 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100028225 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10876656 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.15407679 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.168387036 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100225572 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087204527 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.198641003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.131528683 seconds)
  done (took 5.659591827 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.211303946 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.129850027 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.214604074 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196831965 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1608908 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.203293283 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129589191 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.284050316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.240492345 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.196442808 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135418361 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103019061 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102981705 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08683246 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103869586 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.801274661 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191065003 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157373486 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132362289 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111847241 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087307437 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.390040833 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106802144 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087130324 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109739982 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.078148097 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.204018301 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091315056 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.397534337 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125400231 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095520929 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13996188 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212367622 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.119348882 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141115978 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153428028 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112293412 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086739964 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.2456414 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115597148 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083927218 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132060499 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138530633 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125025549 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106703398 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118217263 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.254444298 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087257479 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128165507 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.14773289 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.217129039 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10264846 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103767755 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.378637417 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122921292 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092401045 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.138930714 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.104786525 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.305617228 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141994014 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086670844 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101128853 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090649982 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103108574 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429951693 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113531815 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.003113206 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089792927 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.174805989 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106621039 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108999401 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10868617 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090867063 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126849791 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084853066 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10205878 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084425541 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.102997261 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106774422 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087516681 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122347312 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107818763 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08479258 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169574371 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.107747632 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124271979 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131571674 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089716601 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.10282285 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133227682 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087187607 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107087573 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.157184968 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093233589 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.106870553 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120897925 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104316412 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131802609 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100663025 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199766539 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086746027 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.131628805 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106187249 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117793947 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125497607 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104451207 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089854112 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.102056694 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.103324498 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153424341 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085100856 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101401395 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105805642 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101641489 seconds)
  done (took 25.14455858 seconds)
done (took 52.08735725 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.468632839 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120360761 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101346599 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.119889925 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11785763 seconds)
  done (took 1.779341018 seconds)
done (took 2.606737623 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.385515146 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197498103 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127629865 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.200902422 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.112732095 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.206312269 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186901864 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12818404 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.239370173 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.089506097 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.215735735 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090834076 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112082251 seconds)
  done (took 3.146318045 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10019284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124444748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086061225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117853394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079608857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117218235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096937856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.142919521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117041882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091473768 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099286645 seconds)
  done (took 1.996802407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097027835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120909683 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086499569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114539155 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079986751 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114601531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094823035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124656583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113913831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091715784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09906938 seconds)
  done (took 1.959589181 seconds)
done (took 7.920074195 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.088412829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.336978697 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.127576695 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.175622894 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.367036246 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.202621131 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555172468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138752721 seconds)
  done (took 12.038540032 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.152795422 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087547445 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105365282 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089519288 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.105428609 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089910488 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107581283 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089538145 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105043513 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085670895 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106129869 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103576098 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087851649 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104933677 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088584846 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10431225 seconds)
  done (took 2.495123389 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122099876 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120674256 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110885212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.117637211 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09135935 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.109187144 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109464672 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0929039 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108098595 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091676708 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115121998 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114459075 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111988325 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090044958 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112168054 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.099197873 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109319103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111545682 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095660435 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11304965 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115713704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092507314 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115570195 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115254737 seconds)
  done (took 3.530988146 seconds)
done (took 18.887076716 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178890477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107544417 seconds)
  done (took 1.111819936 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.109900871 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.128433893 seconds)
  done (took 1.070577297 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113417962 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.104315443 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143775155 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123676958 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088916303 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104892143 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138111681 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.088074281 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10446964 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087487674 seconds)
  done (took 1.929977548 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091061562 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10886533 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097524851 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.128048749 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117861933 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089983985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.110724274 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.108929395 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095052003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103856065 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096961069 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124906079 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.112509248 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12727733 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094989338 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112021847 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114770166 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092834005 seconds)
  done (took 2.765408365 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087529961 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.105400077 seconds)
  done (took 1.029213001 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08989872 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102648404 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090107236 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107098007 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101493539 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087084458 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103682853 seconds)
  done (took 1.514160549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.562879841 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.254076945 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.3601174 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124746955 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145878651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.403532688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147136057 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.122176278 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103242844 seconds)
  done (took 3.099731738 seconds)
done (took 13.350673404 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.098624444 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.329266265 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606114325 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.127795121 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085089586 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.168452609 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.279522498 seconds)
done (took 2.533212405 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384513017 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116847099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.096564124 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084993863 seconds)
  done (took 1.515775412 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086204358 seconds)
    (2/2) benchmarking "read"...
    done (took 0.109828398 seconds)
  done (took 1.039326952 seconds)
done (took 3.397311814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086069342 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.137170156 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083360381 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101929865 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085722642 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.101705564 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082027651 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103971592 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085183474 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102580585 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084248157 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.104635836 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085663769 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101356175 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082832408 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103368213 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082370377 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.100396795 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081969968 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10125573 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08227915 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102771786 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082333003 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.099974783 seconds)
  done (took 3.1427869 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106038873 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.105267348 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107126047 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091196669 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108450236 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090782764 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10859245 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.104504337 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091823443 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105439931 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088705615 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107313121 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103708208 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08951656 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106601089 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.089009213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.109537668 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103467397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087696036 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108187154 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090699407 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104085413 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106420579 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091028177 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10749401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105950968 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087718133 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102862197 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090964285 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10838677 seconds)
  done (took 3.852894288 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093563387 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.099444498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0831632 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111855264 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08314843 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104860661 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082126455 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100616655 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083905797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099764262 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084819053 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099705931 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083267033 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100920733 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083881302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10691563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101271865 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101618506 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082537617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101583503 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.104683729 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084372737 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084801955 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.100320723 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082322101 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.101399631 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083032556 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.101039831 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082701668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.102296772 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104499392 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.090617539 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099841226 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096861651 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107227134 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082804563 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111020995 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082793657 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.102092389 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082541074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.100827804 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083439759 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.100406464 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094449703 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.103916105 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083959533 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.100710377 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084504349 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.101791667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085914545 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.1008419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08267111 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.103178923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083963162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.106653845 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082641435 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102055189 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081676482 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101189854 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099579249 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083845855 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081931642 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.107973509 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100595338 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107692104 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11274313 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082540985 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.103011968 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.086603104 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.109405625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101823532 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10323106 seconds)
  done (took 7.689946169 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088030026 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112379316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0856742 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103673295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081836324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102896717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091297244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101504775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102333368 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103638146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101421159 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085084375 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10388481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087926073 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102606684 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084765192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112702548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098947842 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084930524 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104649988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08502546 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110170211 seconds)
  done (took 2.992412565 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234450507 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114793499 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15097004 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121202495 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121299027 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100810668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109006337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109666198 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091829869 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11337637 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093477036 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109698495 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123769114 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112151702 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094099485 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113877991 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108378916 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097233435 seconds)
  done (took 2.975972588 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099780584 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.106154133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110042463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10538783 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.105019563 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090076177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112747387 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120228537 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090806724 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.105201948 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096600473 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108946095 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088153748 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10530541 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106624109 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087197791 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10619726 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087339754 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115436907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110382217 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093760035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115858288 seconds)
  done (took 3.129709455 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103981357 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107993095 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136060715 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090846616 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101583191 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085311739 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112261176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.087232917 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114991026 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106961544 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08791223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102892365 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.093415852 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105583549 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.111109361 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090382716 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107803326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088524188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108221455 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083560873 seconds)
  done (took 2.886494073 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130346641 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122576247 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121142355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114636225 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121575865 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120805138 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114534245 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122462132 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12154127 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116266612 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121598637 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121151685 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114747619 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128298751 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122299046 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132069413 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113844586 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131947198 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122613037 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10283334 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13435538 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123230403 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131922469 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104224428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12522037 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103354657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122574793 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13017822 seconds)
  done (took 4.256537053 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087193107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085331266 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.103855376 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.083320739 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.102751167 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084155328 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.103140425 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.083555648 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105357891 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083610908 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108420041 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086574554 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105458143 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085892211 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104786054 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08594686 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104956415 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08416216 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101608113 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08389023 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.104687701 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086142573 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.105077982 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084198533 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103486941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086202424 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102637968 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083814079 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104302812 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084186127 seconds)
  done (took 3.683154834 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097386251 seconds)
    (2/2) benchmarking "in"...
    done (took 0.11303585 seconds)
  done (took 1.080568436 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.085639695 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123666863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083805187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108994272 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092622725 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.107137139 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115094497 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0933944 seconds)
  done (took 1.678225309 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.113321569 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.128353332 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092620733 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118335027 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.126669708 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.108030487 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174150581 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11218093 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09427849 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.108056175 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.126549034 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087627591 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115491509 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093377227 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.115136566 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120118547 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086800508 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116548968 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095437778 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.108036674 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093632402 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123370272 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116900082 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096425373 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.110477201 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.099422601 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.120598364 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.117560005 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093333002 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.118630704 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095004773 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.101241583 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109819662 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094302649 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10386544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107763479 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124428851 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110266105 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097678205 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111479282 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097646539 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.103422113 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097797593 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113048658 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118486387 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092758221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112642939 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08336292 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.108159954 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091176865 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101756086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091272903 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103965331 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115192084 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098435003 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126073592 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089193341 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110933854 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110762309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091733319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113239685 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092487265 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118257832 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.091105197 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116578194 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116674012 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096616274 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10222566 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.081678445 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105382087 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096827269 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132201609 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.119526389 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092937795 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112909852 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.103829902 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094686463 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112572785 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096097798 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.118204695 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.11050989 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096229463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118758517 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091735569 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112206185 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094844818 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.109733265 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090268866 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.107859899 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129672603 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090584945 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104847437 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088609026 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.118651755 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110098743 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092144877 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10682316 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098813678 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100531389 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093557235 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113788688 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095251677 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.120205848 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112892744 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09530227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116734703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.100178961 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11317856 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109787282 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.085402489 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11254767 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090971174 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115593127 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081896913 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113483218 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09198687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113001684 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11825892 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090789576 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.11089819 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099916289 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119291264 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108609641 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08540896 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110482444 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093490647 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117068193 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101821417 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110649996 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.083387319 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.102250366 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114952138 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09368903 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.114772982 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094908068 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114680702 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.082831019 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.106887074 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093070715 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.119066476 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110072027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095482415 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.118455467 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11329237 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091965834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11724284 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091546691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.108115187 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09902834 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.114249572 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100847144 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099288033 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11187535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090756425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112946354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097787517 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113776076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111579905 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091264316 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112254264 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094818794 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106749627 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094181637 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110988102 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100604472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112434034 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101823741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085725939 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112976462 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090289333 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.111494622 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089010921 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.113003882 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09413873 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107356932 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091293727 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.11265167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123541762 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102388138 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115216915 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09599834 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.121962986 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.111229434 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095676344 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.111023138 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095445979 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114790587 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097445708 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.117685172 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111973416 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094041836 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102824595 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095481312 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120614729 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09069174 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106397101 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08829487 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.114172828 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119594749 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095606339 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113861545 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093546157 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117648458 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098405884 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.114921307 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.111537665 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090559559 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111729299 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100065543 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.114464263 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096241438 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.121826609 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094422256 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.105161087 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117015021 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091765126 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116260148 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084686156 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109904304 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090383529 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115333546 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091894954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112734568 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082689396 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.120251676 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118934756 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095849673 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.110460192 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.093563266 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123336894 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111292363 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098518699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113442762 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.096397764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128419889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107636629 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094059365 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.122421624 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094675592 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.103927821 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09660714 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111624219 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.107041829 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093744261 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.110110706 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09755395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115984094 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095325488 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.104386078 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094081398 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112335665 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.091039333 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106074896 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.118474087 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.097063208 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.113233392 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103168401 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115666959 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.094179902 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116693968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.112795043 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095662695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117091898 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098098614 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115857915 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091974145 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.110305174 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113259354 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089715026 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105570927 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093758289 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.113006308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095178179 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117342249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091803034 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121126057 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114626129 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095702231 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134248435 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110202053 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089427645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115354734 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096717845 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.11593417 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112308387 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085125029 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118794562 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094428564 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120646609 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100900373 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.107069258 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093710265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114883558 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115207536 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.097572619 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.115275031 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094361294 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115107303 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093341186 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124686245 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.110261755 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110242249 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118104609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095881281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.116709601 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.114010936 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.093582515 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108815211 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09553855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116393215 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095112619 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.115407819 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.096229883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.116491348 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112861454 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093396734 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11552905 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094967564 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.118463502 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.084192156 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111468832 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089414138 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115948369 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118125155 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096285214 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.112790393 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.093292526 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11815041 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092626908 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109043513 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098137197 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117277421 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11461977 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105236428 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11011391 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094965555 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125696802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083128994 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.112876759 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107266323 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09312682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120927305 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09534273 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.122666391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094845769 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.112464409 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08675555 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117242954 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111992019 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085100127 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107729377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098967571 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.111626955 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093289593 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116600966 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097540192 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116424348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117734263 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094242614 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113934711 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095569433 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.107224972 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090544744 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110882589 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094628537 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116564153 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08972583 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10815954 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093340922 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.115803593 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114237899 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094433404 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.112897051 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100400213 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115516597 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095091931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119842948 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.104606497 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095305095 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.114125712 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094271927 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.11038473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09662293 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119182344 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0964066 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119964142 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.113720525 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09752012 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114678186 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088431566 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115316525 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.094571583 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.117734335 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090210517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116642004 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.12126735 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088658379 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.115760514 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096104904 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112352664 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09587979 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117442089 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114699698 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100286947 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.116180554 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096262947 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118734578 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094605436 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118233358 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116702054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093892705 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121810429 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090480136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.121983189 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115706077 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096584359 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113670864 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.092746044 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114337841 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094361026 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113835712 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102454888 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118381833 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109564775 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091295125 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108042728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095136047 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120064684 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10134101 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.116096727 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115709456 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.087267261 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106661025 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097248229 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111389503 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093970182 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.118649894 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099729527 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116743842 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.112240997 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.093932509 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.120734528 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099500332 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.119099979 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091337052 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.118940017 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.115538528 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095734069 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113076957 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094679165 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117091788 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097016335 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.115264046 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.110958981 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104691555 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.120799274 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09661606 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115022207 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117696643 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095401764 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106510039 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096629329 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115265018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098634191 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.1163392 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094647094 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125612492 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110012535 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09451725 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120763673 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094454491 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.122172631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106207314 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096177274 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117778 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097356085 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.106801518 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091109172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.112794032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095926259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111964145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.086281413 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126811668 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.120983015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095656215 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114405893 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093530883 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.108689976 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085829236 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.1123688 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116931076 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095413295 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.124197637 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091462235 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.112140495 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086521833 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116067441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096566221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118563116 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107929865 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087287914 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11218856 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.096599444 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.12411952 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093343262 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.116544454 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097051447 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.117074302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.109659316 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101812888 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.108735259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097063888 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128875142 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.117432505 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102147624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.120364256 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103038417 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118229813 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087124567 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118546006 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117201769 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098191766 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118502078 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098703661 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132726747 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117575839 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09229336 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.115164622 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095719788 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.113208369 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103214039 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118852477 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117485089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.099606844 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115455286 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099001349 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.125143669 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118404427 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.098112052 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.116926695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095088092 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116973005 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094725888 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115562067 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098487054 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.119126844 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115804488 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.099820733 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.112825486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10764618 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.124447965 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.117575959 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.089845452 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11233257 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093402225 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108063005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.098628307 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.110178804 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09399974 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.113699035 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095327536 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120776497 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098031944 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.117401067 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117533128 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096282502 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105545345 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100311877 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.117519091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099147041 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.111519989 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09672958 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118242726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120622378 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102877448 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.114943815 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097393426 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11620984 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099206421 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.109185023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119237623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095868163 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115768501 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093117342 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117489744 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.0990285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119721637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097907725 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119724583 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116743808 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101521852 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11965357 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.089973921 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.111098842 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099846191 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.111879542 seconds)
  done (took 64.175816486 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.161294819 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095076912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110000889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087737256 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134276824 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108682466 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087972561 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109892239 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08946769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123282964 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08758758 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109269861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.131207762 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139776633 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13482805 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122942285 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088306168 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108889222 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088191042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110570479 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110042173 seconds)
  done (took 3.268300995 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113200972 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127669389 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126261883 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.132168621 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099987098 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126843052 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124901793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126207001 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109888704 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122898394 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129729849 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127679195 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101650923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12112616 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122093815 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102906457 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.130847072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120440719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127567607 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103872784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123916346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125430563 seconds)
  done (took 3.579058753 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.101837503 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.11558554 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101377885 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109870326 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096021749 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.110130334 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.100737228 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.113286778 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.100482332 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118288252 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093141792 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.118850906 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.121814967 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.090675952 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.115340037 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09287824 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121272573 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09615965 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.118387979 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089979601 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.13814967 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.110761029 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09140016 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.114776702 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105001691 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.118132576 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096216323 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.117822629 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093061967 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118095344 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.092719145 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.120937903 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.121045999 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09408431 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.114695726 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096435499 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.11754348 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.090280064 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.114994505 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099580738 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.112717643 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.097222794 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.124745618 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113677864 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.092707965 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.1199176 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.096121998 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.111678855 seconds)
  done (took 6.092455161 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130911423 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167543412 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099105544 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136096302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133477153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.133183776 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099723431 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133529748 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.118185619 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118584694 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120304214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134294062 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124010441 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127867955 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098973627 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118891676 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099020307 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.116967022 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127511317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099465258 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12310541 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121581351 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.131952072 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11607257 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12287967 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122382473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100290039 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123366208 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129219563 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.103669555 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.126062814 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128165401 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13580554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100137556 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117323123 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10212756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.140203227 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119109486 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125550475 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098693044 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120380048 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.102990461 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.123025658 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137045569 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120432061 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102427852 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118291113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09607545 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.129872749 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126768438 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106490804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138476258 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125721145 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118810803 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103492327 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135528097 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119333747 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098971896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125129833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129210856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097361106 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123386751 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137365603 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.098831323 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13614343 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136091224 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121432689 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10401131 seconds)
  done (took 9.29221932 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104909403 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.14351442 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134483273 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133681909 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1025396 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123421789 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122533622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103310703 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1235351 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129388466 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103031446 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.174995482 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.1171792 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128602109 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102792619 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124473423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123335091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10335736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123955804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102198076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124962667 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134563578 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.123334902 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113873571 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137625456 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116914072 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122827073 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102897004 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135733157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123937866 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135904958 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10258053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124468773 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134567016 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13648291 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102962319 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11463317 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102517491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.124454816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123861408 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095310912 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134024076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124917237 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096216817 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124816019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124333479 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134975477 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116434332 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13027318 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130634957 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123850119 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113910995 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125793587 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123560062 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134496519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142552194 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1135806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134278955 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123806181 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134995675 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134899348 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142989568 seconds)
  done (took 8.574860686 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095382904 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092865618 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.113284702 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.090687672 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115939864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090885003 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116703712 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.093410837 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115184098 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093269148 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115901205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091035134 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113470107 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093552768 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113340224 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090990038 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113952018 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09155744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115293122 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091025775 seconds)
  done (took 2.997228366 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104504988 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136933644 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093761303 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124352413 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.119758218 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101624528 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.118157985 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097066353 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117465546 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118407247 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107324472 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129596379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116447218 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102639915 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127942219 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122860647 seconds)
  done (took 2.7935498 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116097495 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130136307 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.143227037 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099326877 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.115222961 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.12384965 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.094586665 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.111576236 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.091344732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125138825 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101133881 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127438976 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.095108172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.114827259 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.116216533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.100658045 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111783717 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099127053 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.117113381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120853706 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123053937 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.119752227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.095212638 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118815711 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096833851 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.124903378 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.124400419 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.092310783 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.114969658 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094569375 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.119502854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12523529 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.091582782 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.121271941 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.092981076 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.114589932 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.093987409 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.116788176 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.121768056 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.094891109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.113698061 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098456791 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.117825026 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096006249 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112237803 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094930108 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.113533402 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122057574 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097009126 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.119827056 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.094784592 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.124336382 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.101393374 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129051457 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127307325 seconds)
  done (took 7.068862376 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109969351 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122030776 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098791996 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.114857047 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097820859 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.12618389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.119986433 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09743182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.120099234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09189937 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118785581 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098658804 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120733682 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119778359 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097637429 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120732307 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089720005 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118568923 seconds)
  done (took 2.943530589 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100758079 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116651187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101954423 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.117305929 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0944312 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119901074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090106071 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.115302352 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092793182 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.116774456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094657077 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.118496349 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114163959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.097929149 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116150422 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095100552 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118323175 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09368993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.117477383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090384995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120811121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093165913 seconds)
  done (took 3.298244867 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117526794 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.157059835 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.13413239 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143196013 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.125753865 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122342627 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11160363 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124223354 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141773436 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100092178 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121512616 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.100456935 seconds)
  done (took 2.465430851 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122156757 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157189224 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114709965 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09872306 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131295967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100569814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122574569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123426779 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134004405 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114282751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12386173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134682318 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134357342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132539722 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10875241 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131606098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122038517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101513104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119224696 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144974626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10028143 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136532468 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121980578 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100570465 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123818172 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133600545 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135086679 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136172983 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100920171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135436585 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131385393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1003962 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137246089 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135954875 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120718452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112522922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122844473 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148093047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131549912 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134234767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097767341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132093694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134601775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108193321 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134908812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124175099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129497913 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100072302 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124776301 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152128819 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130748021 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133340297 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109686266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134843032 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134319989 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153822635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137353308 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133512308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108307768 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137003537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134074467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131331482 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134429611 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136165549 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10898593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134078382 seconds)
  done (took 9.273934424 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136480876 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118807799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123027914 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136525029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113525992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122653585 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123089875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100907194 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122966134 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097162925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196340882 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101399918 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134427719 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134167614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121998635 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10346729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124498626 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134380812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097323055 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152745029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125121127 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136052154 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135310745 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112155681 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138314843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132542671 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123170714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101359087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12456136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123289396 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108505919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124830367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135351897 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094314067 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134921741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124972971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101478653 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132069307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124418117 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1319268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112498311 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148316392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124529421 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122875616 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137297022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102433795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124474508 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097851504 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124855549 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119291406 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114469453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138783886 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137053508 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136196513 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123465143 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101799377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125317982 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123015367 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101167517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132700187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136048771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102242591 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1777268 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102695684 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125968934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134366236 seconds)
  done (took 9.16214248 seconds)
done (took 173.196069418 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11530431 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.161067265 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.133573166 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159151589 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.118671272 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130719518 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151804745 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.112185158 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.119385609 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095206565 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.119550413 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09860671 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.187044678 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094601044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119052411 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.121620389 seconds)
  done (took 3.017629594 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199473937 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.31880287 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139138332 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105282381 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.12659314 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098632334 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.127310157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102115905 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.121860132 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131194434 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099466869 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.123547017 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10956103 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.124437594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.119244958 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099177771 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.132883954 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098774307 seconds)
  done (took 3.357767585 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.130889615 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166925146 seconds)
  done (took 1.284434085 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133739083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.203939694 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.338260048 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178251499 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.15001203 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119139124 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.179317263 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140939894 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.213817917 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1459112 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.145170546 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126488268 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.129754901 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.132930917 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.130675085 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103368344 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.153983849 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.128703369 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.105229311 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.128068899 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.151239558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105923015 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.131319578 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.127898346 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.205115483 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.143189867 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10583197 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.128894306 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.104457433 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.127339805 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131616741 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140307049 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121603766 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.213636274 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10876386 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.211843823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.135203963 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103702963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.128575455 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102049914 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.131739235 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.131545241 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.141907357 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103755974 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.128649815 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.112829719 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.130057722 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.127526869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110598751 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.137145991 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.135277773 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130799498 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191065601 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.137449409 seconds)
  done (took 8.646812899 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.912286492 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.382929497 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128792804 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.019753584 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156318824 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115577697 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.916410842 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12708974 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.290800804 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.90306237 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121268354 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139544813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25887376 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.277267973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.173467685 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36397619 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.772667584 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.139367495 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133873851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.172972082 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131301004 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15309605 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14466784 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453348984 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104587767 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124099194 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130108357 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114684179 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207915488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101914546 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128396775 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20672155 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.311800415 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20331309 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127215832 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101204763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123814025 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193011094 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295194669 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.24699556 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191716895 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119678408 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100733167 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137087519 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144629808 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098270846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209728054 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198316606 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198559162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127638902 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136171136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110780967 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135800176 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186210374 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122606702 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371901335 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367818286 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100534105 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13375466 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.143951945 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.293288756 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101130303 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254053475 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150992453 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240378598 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100535564 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813853797 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19141847 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123784673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132854684 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108442586 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129835266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136600377 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185615636 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403542887 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139281078 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105102815 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123628972 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227325349 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124318222 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100790974 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211364761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104935128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133280091 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140334732 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137214 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.198249073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274716939 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138682682 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131986057 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106774576 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13749092 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.127234479 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238470583 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24666087 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182875642 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.259492841 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114702344 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.213056219 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193617543 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135700777 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196425858 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132348923 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142272387 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114725223 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24314501 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160913758 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125194645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106694623 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132862805 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165473221 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127974933 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109074406 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.218256339 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486826781 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.21303862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09910311 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128361666 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110689433 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210143963 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109517045 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291066104 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135125385 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193423783 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132627099 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09921586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134090858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189271034 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138936577 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133929741 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136618928 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110403659 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.299285058 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226508496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.141346739 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26163278 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201032747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135477461 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201435614 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133364511 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196882785 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134521234 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113015139 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12863333 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807242312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137363534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110149827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130414679 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.211338604 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101492654 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127506422 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101505156 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121899307 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835522498 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104954897 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123198005 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104145031 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135039207 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133689642 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108229327 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130592021 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187300786 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261291075 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137831835 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132596634 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102364137 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.210290838 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106820745 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125699664 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102377455 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126213979 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111451183 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129694874 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103323423 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.223872387 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183764671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249085608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570816909 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102019817 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125426335 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259286005 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101362135 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336061517 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133355435 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.255164204 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.193972605 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121779651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364091645 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.196551737 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21322169 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128258188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20015702 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09879114 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132406259 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186809673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125858071 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132566459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184989643 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14265112 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139190736 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.159365181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12597184 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256621817 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122139373 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196616402 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129131318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137017776 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32202197 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12601212 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14613768 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188600462 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130029015 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103153394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.765618975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103151048 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136990186 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134847206 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253461835 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.193352885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133317934 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110196035 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139676465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188040781 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.258155255 seconds)
  done (took 49.274847126 seconds)
done (took 66.559537951 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321183996 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283520612 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.331009835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239037699 seconds)
  done (took 2.269284426 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.196661309 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169588181 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.164568048 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099436248 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173090952 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122453813 seconds)
  done (took 1.938768297 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.514385917 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.427417326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.370204257 seconds)
  done (took 2.332828781 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281387264 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.303210036 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.384355951 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.469105725 seconds)
  done (took 2.566824385 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221058876 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142441344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113408645 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.158664093 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.191778248 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214883178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136295629 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19041076 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121835407 seconds)
  done (took 2.55499183 seconds)
done (took 12.682396833 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.193812703 seconds)
    (2/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105690615 seconds)
    (3/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.312291512 seconds)
    (4/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.104882519 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.264389134 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.149564511 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.139811543 seconds)
    (8/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116240179 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.251695928 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.163860859 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133117678 seconds)
    (12/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.271469994 seconds)
    (13/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.156263181 seconds)
    (14/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.140132517 seconds)
    (15/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.115418058 seconds)
    (16/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.34472791 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.130439709 seconds)
    (18/286) benchmarking ("sort", Float64, false)...
    done (took 0.18951577 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.194199358 seconds)
    (20/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.243325314 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.326543066 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.129228048 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.144936309 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161258248 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.294879182 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.154753178 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135692414 seconds)
    (28/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.25021105 seconds)
    (29/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.129468377 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.160452527 seconds)
    (31/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.119258273 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.219089952 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.138117373 seconds)
    (34/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.263087092 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13202943 seconds)
    (36/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108072399 seconds)
    (37/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.138188026 seconds)
    (38/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.111233859 seconds)
    (39/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.258900675 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 0.249800969 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.134518713 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114794721 seconds)
    (43/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.149191118 seconds)
    (44/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.227491499 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.23138454 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.221223291 seconds)
    (47/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.140860859 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.210113935 seconds)
    (49/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233327476 seconds)
    (50/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.138032281 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.167690038 seconds)
    (52/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.140163847 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.127063319 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.116484052 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.111034353 seconds)
    (56/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.266328183 seconds)
    (57/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.221550869 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.211507068 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13464871 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125219313 seconds)
    (61/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.144473972 seconds)
    (62/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.206891114 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138498445 seconds)
    (64/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.123383354 seconds)
    (65/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.198283521 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098391739 seconds)
    (67/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.223645095 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21915964 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 0.099107015 seconds)
    (70/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.111996495 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13119623 seconds)
    (72/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.194864381 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.114978108 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106191697 seconds)
    (75/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.178542511 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.160454062 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.238525501 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.132953446 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22266052 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109333121 seconds)
    (81/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.137589922 seconds)
    (82/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.108185302 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131548005 seconds)
    (84/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08814496 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.111855187 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087328691 seconds)
    (87/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.212374169 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125533941 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.113133609 seconds)
    (90/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.138490251 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108012093 seconds)
    (92/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.173369177 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.132918059 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.088001721 seconds)
    (95/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.221216075 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15856955 seconds)
    (97/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132511088 seconds)
    (98/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169718568 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130926703 seconds)
    (100/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.220016661 seconds)
    (101/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.217515535 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.106585658 seconds)
    (103/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.113714102 seconds)
    (104/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.249710428 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131597851 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.124388873 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.130916704 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.220894374 seconds)
    (109/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.172158897 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 0.20826412 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.114420101 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.144345344 seconds)
    (113/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087851164 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.158914056 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.14368917 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.113314052 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.13443104 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.139410076 seconds)
    (119/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088018497 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.142330972 seconds)
    (121/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.172415494 seconds)
    (122/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.154002586 seconds)
    (123/286) benchmarking ("sort", Float32, true)...
    done (took 0.223516101 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.138986203 seconds)
    (125/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.13011703 seconds)
    (126/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113930541 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.138707846 seconds)
    (128/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.208254457 seconds)
    (129/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113700307 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.12699377 seconds)
    (131/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11538212 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13275198 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.151389254 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.116349558 seconds)
    (135/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.159548391 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.140241119 seconds)
    (137/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.10456706 seconds)
    (138/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.172018477 seconds)
    (139/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087927714 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.133361335 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.141279207 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108713422 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.15856616 seconds)
    (144/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099197064 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1825068 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.159858186 seconds)
    (147/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.10634649 seconds)
    (148/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137954637 seconds)
    (149/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.096136357 seconds)
    (150/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.112739734 seconds)
    (151/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115931575 seconds)
    (152/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132027387 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.135252338 seconds)
    (154/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11591851 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.133663205 seconds)
    (156/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.118376857 seconds)
    (157/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194677105 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.163566474 seconds)
    (159/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.112988612 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.234550115 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.106038269 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126563036 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08855105 seconds)
    (164/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.128870926 seconds)
    (165/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113153647 seconds)
    (166/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177164274 seconds)
    (167/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.130781075 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107441438 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.131835234 seconds)
    (170/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.095081771 seconds)
    (171/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.131882605 seconds)
    (172/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212015326 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.115170728 seconds)
    (174/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.137350098 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165564013 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.088900611 seconds)
    (177/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.14511707 seconds)
    (178/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.088533854 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.127557653 seconds)
    (180/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.108725069 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.246913503 seconds)
    (182/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089017549 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.131016869 seconds)
    (184/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.130757915 seconds)
    (185/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.114955951 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.155655668 seconds)
    (187/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.180099749 seconds)
    (188/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.144685836 seconds)
    (189/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.088455295 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.143755114 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114915726 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.114471155 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.140262723 seconds)
    (194/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.088164306 seconds)
    (195/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.11270105 seconds)
    (196/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.088166251 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.210660299 seconds)
    (198/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.104019757 seconds)
    (199/286) benchmarking ("sort", BigInt, true)...
    done (took 0.262375048 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.104178082 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.115910651 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.117131307 seconds)
    (203/286) benchmarking ("sort", Float32, false)...
    done (took 0.194276259 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.130870021 seconds)
    (205/286) benchmarking ("sort", Float64, true)...
    done (took 0.227333204 seconds)
    (206/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.088445813 seconds)
    (207/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.115027772 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.088277724 seconds)
    (209/286) benchmarking ("sort", Int8, true)...
    done (took 0.223085522 seconds)
    (210/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.171561822 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.131548981 seconds)
    (212/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089166746 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133993283 seconds)
    (214/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089049442 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.14275496 seconds)
    (216/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.095757038 seconds)
    (217/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114425306 seconds)
    (218/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088625175 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.11412102 seconds)
    (220/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.108852985 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133587419 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108448277 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.138102638 seconds)
    (224/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.099262423 seconds)
    (225/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210771594 seconds)
    (226/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127832391 seconds)
    (227/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.140757723 seconds)
    (228/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.123207309 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164635649 seconds)
    (230/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106250807 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.134676984 seconds)
    (232/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14236469 seconds)
    (233/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106841854 seconds)
    (234/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.132785105 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134023381 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110080841 seconds)
    (237/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227658667 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.136669171 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.089768072 seconds)
    (240/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.121812728 seconds)
    (241/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.088760273 seconds)
    (242/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126769357 seconds)
    (243/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.088922009 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.146630112 seconds)
    (245/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.088621028 seconds)
    (246/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.113334319 seconds)
    (247/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.088845893 seconds)
    (248/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.132310967 seconds)
    (249/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.112230769 seconds)
    (250/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.122270246 seconds)
    (251/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08883967 seconds)
    (252/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129874409 seconds)
    (253/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10248293 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.129628323 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.102698417 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134639362 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088295386 seconds)
    (258/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131244882 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.134174595 seconds)
    (260/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117814091 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.134791714 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106324918 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.134266634 seconds)
    (264/286) benchmarking ("sort", Int8, false)...
    done (took 0.219513859 seconds)
    (265/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.133468153 seconds)
    (266/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107611721 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.116829577 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.105807745 seconds)
    (269/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.115565338 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089167738 seconds)
    (271/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.11491454 seconds)
    (272/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.089393473 seconds)
    (273/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.122286217 seconds)
    (274/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106760939 seconds)
    (275/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.128324612 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.123173427 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.130688692 seconds)
    (278/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.114425963 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09031064 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089498376 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.135805716 seconds)
    (282/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113158387 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089264955 seconds)
    (284/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.088965711 seconds)
    (285/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133334347 seconds)
    (286/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.131950616 seconds)
  done (took 42.610033891 seconds)
done (took 43.641918917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.116247141 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174412003 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.139610814 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134870302 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.143388554 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.145794589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.113384438 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.140097463 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.115447475 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.145472987 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.142908836 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.097621526 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.140031641 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113178997 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.140942444 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162121141 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117247884 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.135638448 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.10535023 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.130737421 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.13091369 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106460544 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.132943357 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.096906728 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.141259977 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.137896883 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.109665209 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.140028646 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.10583871 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.129193196 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.104269587 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.137475989 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.129825453 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.115749763 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.134753509 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.105716102 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.140828348 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.112544149 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.133376479 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131753116 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.111270169 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.131536849 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.109618316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.136745344 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.106458973 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131413306 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.130667657 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.11690693 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163367262 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107688069 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.138353369 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.138987774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.116022333 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.136047424 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10378849 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.132249532 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.107561959 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163391244 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.131055233 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10752832 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.137160628 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.110516392 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.132220254 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.10524528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.130598878 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.141275936 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113150873 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.131316129 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112432464 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.134996301 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.101466342 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.132911523 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.130009182 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.103390244 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.13813514 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.113902576 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.127331198 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.106072364 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.136434264 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.108478132 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.132826414 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128630661 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108914212 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132570279 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103861105 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.123549804 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.104998956 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.133919987 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106653591 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.131959302 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.133665811 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.10918906 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.135133454 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.113475704 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.132133743 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.132613252 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107277071 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.132724544 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108161597 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130737674 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.101560935 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129472252 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.111200168 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.130517787 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.107206451 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.141682581 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.130807886 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.108656472 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.132169659 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106883786 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.14614643 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139306372 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.107379738 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135297488 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.103456925 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.136211632 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.104405647 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131304609 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.129684873 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107180969 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133668382 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.106584271 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130518384 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109315916 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1428915 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.128617377 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.105933837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130124805 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.106867161 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.136550484 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107523322 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.131834549 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.10606592 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.128077055 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129649571 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10523157 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135479414 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104438539 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.132589568 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.106761487 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.133112045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.108161726 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134903796 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133010324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.104187876 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.12558675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108409107 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13010321 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.107786408 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.133218764 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106716754 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.128485259 seconds)
done (took 19.935004503 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114171712 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.203630286 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.166145513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.170098469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.167864182 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.150556417 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116156573 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.16323337 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141279902 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.163011151 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162638575 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129730542 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.172773693 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140934282 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.151270765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113264967 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13877214 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.148322431 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148032613 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1601243 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165563195 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140857613 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159601706 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133027624 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.137754565 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.170299666 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.141399574 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113693817 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.14225027 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121154772 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.156374154 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.142412633 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.140266711 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125349724 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146682461 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.110747462 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.15050941 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.136130714 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.138775479 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114415951 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.150668434 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.149604361 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110515977 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147007085 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138872633 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117071675 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138878109 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.136667113 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114117794 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.134286536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.117906575 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159357123 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139233465 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140076953 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116206476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.139174025 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.14054017 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117578761 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.142654852 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142481841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113922642 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.142831447 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.144010432 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130088609 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.139421794 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.14150474 seconds)
  done (took 10.393640248 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129840773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.171432923 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.147330414 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121036966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.14386063 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129454478 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102544953 seconds)
  done (took 2.043388468 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104479274 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.161812853 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139382442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.165405225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.153819717 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.170069918 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120871771 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.130646077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.154885683 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11439361 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.16035482 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187776445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1046651 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145566366 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.168694055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103794482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.169707059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130597374 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111558314 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.166888759 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136457838 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127027712 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.146399471 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.131639601 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.128219927 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.132518847 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.201918235 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11558195 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131222982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136554431 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109987534 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205492807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154990037 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142139125 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103460077 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.163185263 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.153650846 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110391869 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.158252692 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109024485 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.154291196 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.137900853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111876971 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.137840508 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.137988896 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.121134373 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.143415194 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112670629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.137998709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.161811249 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11673183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.157046418 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13290792 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.108898753 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143215563 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110685886 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147312886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.136065449 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135339628 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139751934 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.160470393 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134079703 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.156532425 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.160946185 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148427133 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129817296 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.155075637 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110047435 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139926002 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.139638666 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133986793 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136251365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.143384445 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12169195 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140515954 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13428846 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.162947749 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137077716 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117952524 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.137398854 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.107380281 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.133069794 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.149870596 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109008384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1331512 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123411136 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146285342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137515868 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109188696 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.155581626 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.136433887 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117492668 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.142887123 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.134731132 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122087913 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.162801254 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.144621132 seconds)
  done (took 14.523454968 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108142823 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.132311177 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111637277 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133683788 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107288003 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.133852743 seconds)
  done (took 1.83825617 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.137881037 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.136472702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148738708 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113138222 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.177724238 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.158678657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131714435 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142705155 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.153655437 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120765037 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.158344937 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.159708865 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138303799 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.140899369 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.158286713 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113600323 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.159126499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136021091 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121014792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136882793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.123436201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.141857161 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135963817 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130702006 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.141011314 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11381545 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14009123 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.148979922 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.120861246 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141594952 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.140856151 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.113673308 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.141103196 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.142978047 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132321586 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.140865988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108202351 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142708512 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140527141 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.114189324 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.159740454 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109988136 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.146729874 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14541614 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115433917 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.141729781 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.142365681 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115537235 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.158677421 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141556477 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1161324 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.140825446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.113227389 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.142277106 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113947358 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143700315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.142045864 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132328741 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.141765517 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141157571 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.110114009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.141349838 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142253182 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.114086188 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.140041163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115604936 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.141594964 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136300635 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110976555 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.140437656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.116054673 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.137597778 seconds)
  done (took 10.864347574 seconds)
done (took 40.757956301 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.718072749 seconds)
  done (took 1.834245425 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.927605168 seconds)
  done (took 2.039727326 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.555417602 seconds)
  done (took 18.704530846 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.577406117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.676430164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.059311225 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.187646534 seconds)
  done (took 3.614975294 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.02520858 seconds)
  done (took 2.157381783 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.343342334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.292930331 seconds)
  done (took 1.754486251 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.904866643 seconds)
  done (took 2.033226069 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.616337492 seconds)
  done (took 2.742968144 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.382335267 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.219830482 seconds)
  done (took 1.738303646 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.61788922 seconds)
  done (took 1.74909586 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.980298116 seconds)
  done (took 16.115741876 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264886371 seconds)
  done (took 1.41013927 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.323804908 seconds)
  done (took 1.456039534 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.705834498 seconds)
  done (took 4.841632131 seconds)
done (took 63.315608876 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118179972 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.148517615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121030736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146041268 seconds)
  done (took 1.66156889 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124979454 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.143738088 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120361812 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141385789 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.151791113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115855699 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141609062 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.148924258 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115629994 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144454191 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115536443 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.143317878 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14391435 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.113732916 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.139085017 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.118145476 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.146712774 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.143093907 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.115957381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.143997634 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.113777485 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14410583 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.144883166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115230386 seconds)
  done (took 4.328178482 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117726163 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.137452634 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113956248 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.137113009 seconds)
  done (took 1.651935565 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.123838223 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.159913546 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.158773748 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122798656 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.160444945 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158350027 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.111075746 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.136659268 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.112335859 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.15048815 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112215001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.164559644 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.159526151 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.106037979 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153386373 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.130055394 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.107676937 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159838002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121865118 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152661764 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.136400815 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122989257 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146396672 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125797892 seconds)
  done (took 4.434387794 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.228201447 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12331384 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.162334699 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.194549341 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.163784542 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.108494695 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.164630271 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147832492 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.113897003 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.138086063 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.109633607 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192768719 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147706861 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.140493963 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112131619 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146280168 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146905955 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.120689646 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.139880965 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123009276 seconds)
  done (took 4.073485103 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119015809 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.138053253 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10633092 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137430092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117617023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.141017131 seconds)
  done (took 1.909876371 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106531635 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.13118939 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106156618 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.104891979 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.137585229 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104696976 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.131651572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10471005 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.134552172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104754057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132470366 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103683404 seconds)
  done (took 2.549252059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.550322145 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.139774448 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.140464573 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111714934 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.141754155 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.136248977 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126487527 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.137626617 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.199365432 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.138277172 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.126325353 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196282066 seconds)
  done (took 3.296634138 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235670895 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115714435 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304042549 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.407333482 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186792549 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190257312 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.300762013 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18858579 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208753242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159665027 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256649499 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152831985 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178588068 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204350377 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162679157 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.211295103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20024124 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255273713 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143569826 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270617719 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188493112 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192460095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215673723 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17496125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160418335 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192028491 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.110069337 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154748555 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195804502 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193987509 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223417166 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143157859 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161284621 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252192275 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248272147 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228532103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335006256 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171999793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.216790577 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219817596 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.310571772 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163210246 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221977679 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178488019 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1542346 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206491286 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179495172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206813245 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152296526 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13612478 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236284901 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202094859 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205550786 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175175033 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325876252 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175159973 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167360323 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203006464 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214723898 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254231324 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191276191 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116377837 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235766932 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21959375 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20684907 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168305263 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191123235 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144259432 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203178755 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232221354 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210987596 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191846177 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.249688683 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158137553 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189816127 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203086819 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177739922 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204469997 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184459462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114454088 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174130346 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164379843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148291212 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184443302 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143886213 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241178589 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158203885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.314078212 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260343933 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181634782 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183856503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189341494 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192197381 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170832812 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111525608 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170145259 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.195214497 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181311457 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154283453 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180554612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167024396 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.118976806 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176409512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.144463354 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182334233 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128325911 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190771554 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188248155 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158673776 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189266915 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172316288 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.183460881 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194689281 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221386157 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155451746 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157702665 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230082609 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182584024 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129741287 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238351866 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222373012 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.198616368 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165723694 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19738736 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220246655 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164974938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224255219 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17949445 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161249732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.174180785 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18259037 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178180959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148509814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150253259 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.176565916 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228487965 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153875944 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160419389 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20008179 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119010002 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150815054 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167774249 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162747816 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137601882 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173733963 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.161838155 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180885451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185016037 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178098326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181570883 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166208184 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225678104 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155187248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.183582323 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142632603 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.140868231 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20508605 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221348967 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155996464 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210504713 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193400722 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250082054 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190073991 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152116855 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205498468 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124914465 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.141800165 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195060553 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184191367 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186383802 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21768444 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245832919 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191867353 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.176283918 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143610753 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220762832 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208318046 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179515949 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167977357 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189578525 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196824468 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11467111 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145584235 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.148192031 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133671959 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158611558 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153048638 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206763805 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187282364 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213688853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187092579 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161327151 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218272596 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.147229334 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189523082 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198794056 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161318937 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220881775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217299602 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192850983 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165505503 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194697734 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.141544054 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117551182 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156666127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189807511 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154919917 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160828122 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142382228 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246190875 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20001619 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174877082 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229338105 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190533932 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.260593923 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.115767259 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189966183 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205081234 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183856964 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211283209 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129129618 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181737051 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243297368 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150822093 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249940159 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188343921 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193603182 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227794749 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.18138198 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158449143 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17175707 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19570672 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167831255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196023542 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169546139 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131089294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178009307 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.159198971 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146619835 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204860122 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16785022 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205624842 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19004312 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197342805 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149488516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171795711 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184612527 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169411646 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111321595 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194529113 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250811977 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165286006 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18223952 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210361735 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128167144 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343061061 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253537223 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210990183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177430978 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1715756 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186434366 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193661202 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187761293 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208179216 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172018533 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205295038 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183646951 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136594674 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161937544 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171029677 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175813812 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.176904186 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154472771 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147988196 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.167023038 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208863383 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168152116 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184260166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19083512 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172447039 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178183962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162891026 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241963116 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185863888 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204936332 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.183155913 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.200247968 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215322104 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146944669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120856469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.15064018 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208613944 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154300531 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183417139 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.207521925 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222892821 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183829447 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193360291 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16758552 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.145997391 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184501246 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143692902 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25376914 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168105339 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158169753 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227399362 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.178103631 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128730275 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188796638 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335118485 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141239058 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235949362 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11577668 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305104862 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147779281 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129716546 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196386685 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226486559 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.12408736 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210807554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193419927 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169743798 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194504098 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165474393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215400393 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234097233 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200772562 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233210153 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138140239 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181286361 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186843655 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242823555 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136976063 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176523653 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188625246 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222552445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.25093913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127411108 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189581902 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189095239 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186656302 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227489355 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127871122 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213624131 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153782563 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190641278 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167943884 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145104284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153609632 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.237461015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127294042 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238109947 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183178627 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125035098 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149513628 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185309096 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184603727 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179533941 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12805543 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203810303 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15634725 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188852526 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206454184 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152500355 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150568486 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170151933 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154472257 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171087536 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166977454 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131045903 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.195768715 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218438668 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.153524773 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21246786 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196345116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188450352 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183355179 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167634893 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.687634308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120367449 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248533425 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142083343 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244102585 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143181623 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193321695 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188378614 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174760236 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198052172 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172802617 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249857926 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190467843 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183551918 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159593813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167947431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139068074 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.154127312 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177940369 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188548991 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16565729 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129267077 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182315998 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170016678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.167973202 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163504407 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220668058 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17321835 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208549539 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210311486 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178218438 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193329378 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200170658 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152788855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185717002 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197409057 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165881435 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182641647 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.123301789 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159226978 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206535909 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.115932559 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186295775 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187196879 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185715272 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18861163 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15782654 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184175057 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172117219 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186969497 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118088206 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178953025 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183283657 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15425839 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.149853928 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151644795 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182419741 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.18554566 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148981793 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.196292666 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22022078 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.117646977 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162525432 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307474949 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182322782 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219131215 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.175779248 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158426843 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168167528 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184325498 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177660976 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183814614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.121241916 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155484923 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.15348648 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.204120814 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.188932622 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154403787 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209045374 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18540989 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244454004 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128323931 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.294466581 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164219065 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18026043 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.129317081 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.151507945 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165218023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132237673 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182195051 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243235444 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206394516 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.179746906 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.139003711 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149980822 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.149872769 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126708973 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196799304 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178691055 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184936173 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174180459 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110313313 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173470497 seconds)
  done (took 90.281877674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170597101 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1644672 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.172875937 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218802042 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190799723 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.279815789 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230577318 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250930804 seconds)
  done (took 2.929993831 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124552155 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157908517 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.163760066 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.149823828 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.148532952 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.388213436 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159237769 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117162824 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.214394482 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158866756 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143709485 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.684780914 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.145400858 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144974072 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.133754547 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120219524 seconds)
  done (took 4.394286503 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.508285531 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.568300206 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.05593449 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27511816 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.256020034 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202505974 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.767810253 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190238432 seconds)
  done (took 13.076155935 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148434793 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164214234 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.164201804 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.192591388 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1763405 seconds)
  done (took 2.107146989 seconds)
done (took 137.823778261 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.117880282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.147272324 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11661779 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150703631 seconds)
  done (took 1.775037875 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.131703418 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.129383449 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102798255 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.128424793 seconds)
  done (took 1.746671169 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.518805612 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.099886962 seconds)
  done (took 1.901676266 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147118205 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160442248 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168267758 seconds)
  done (took 1.740947878 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.127179383 seconds)
  done (took 1.380630207 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120016532 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.156725371 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.141394499 seconds)
  done (took 1.680214709 seconds)
done (took 11.484111759 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131684452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.461743434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43512638 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130176429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747648018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.397821732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.086876354 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185326011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19182963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14017662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13174077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.72084737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.006534684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.390642473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020056132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.359779845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.724791148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112846587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148670231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111639794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.060791683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138818235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112692038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14139036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.692390406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.445619936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110526244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.403378283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139535603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116606666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42993721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111048068 seconds)
  done (took 17.781891963 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114896039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.208384971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149430293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112875195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145756538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111897633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153120849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155364443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205563222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110865611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162920189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110607201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146989038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110997229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164505261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109944312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143649266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142475864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120059582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142958821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131731728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141369201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112691713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143440168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.139642282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.124135682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141337351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126176431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142533283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14487011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117190361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140828258 seconds)
  done (took 5.690125999 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16158007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.21888353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150328818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.177597318 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.163896109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143854266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.233514313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.187317665 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208362109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110261452 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133221768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141834702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152742118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142784684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164252694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111573279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144472403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113728358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14940232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112360366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163287295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139737242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113329553 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143094288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111067196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155669074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11197603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156932908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143376354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116280628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.147069443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11161394 seconds)
  done (took 6.019978458 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.120289703 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.151420702 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130506986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160983387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.113714223 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.150148305 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150856567 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.114685955 seconds)
  done (took 2.36000945 seconds)
done (took 33.113927734 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.13195197 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.146530401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126776311 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.156087514 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.12201822 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.178734067 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.109190542 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.155069943 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.125091691 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150467164 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.158023017 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111183397 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.141931509 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.109995481 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.154580229 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11647374 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.160087534 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.121455195 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.166823717 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.158130393 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.113253046 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.153806859 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122145798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.166527506 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.135895582 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.166362848 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.159358617 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118173131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.142446164 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.112676074 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.162819922 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.172085112 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116098238 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162668065 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116319864 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146425691 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.112244318 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14550687 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.128506483 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.153434354 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.147508382 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.123875078 seconds)
  done (took 7.131842477 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.143907777 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.192637351 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.139607838 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.111096428 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.139627352 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156133485 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.181445371 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.140078346 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.110116566 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.17135674 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.170733415 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.110096185 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.139480911 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.110821857 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.139522023 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.109991083 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.169566807 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.139625218 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.176458835 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.177692317 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.193408031 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.147552054 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.183598408 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.170522934 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159088365 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.183761019 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.167387791 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.182926247 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.144498372 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.140351316 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.174768902 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.148533858 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.140520676 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.109101338 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.188646513 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.183883239 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.142720717 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.187879694 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.178591565 seconds)
  done (took 7.337937977 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123688952 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.161334627 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141668532 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219637635 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.187904675 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159677785 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.127097289 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.164740877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.142124582 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.142664171 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.15452366 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.145879291 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.162101821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124448997 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149760854 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.158474097 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134312888 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145444598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120700392 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.165299735 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.131599516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.15789056 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.161220371 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.123122096 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143882509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122396892 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152516615 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.157619208 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122188286 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154517428 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116562597 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149188154 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116247159 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.155490335 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.14691087 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.120949633 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167718124 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123808124 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160422714 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.182593349 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12304976 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148314102 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167063315 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165589527 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146557952 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.120424607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.157851601 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155243543 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113080954 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163544086 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129002501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.145281218 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.160349306 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113447591 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143191936 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122803705 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145817033 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116271614 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155680603 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11714272 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168137302 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.154429417 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122341232 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.146842814 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122092988 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.14361673 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112590209 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148646388 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170624465 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121003279 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180661397 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11362982 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149738482 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15403683 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12264645 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154523636 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113200979 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153392114 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122488863 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.150414949 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123046796 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149295207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117771017 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.162993006 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.160628441 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121607623 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.150004033 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.151114159 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116467525 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145378223 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130551001 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.145826843 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116627451 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155592353 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144080272 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116545534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.150780561 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.118707046 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.144127249 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135310641 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148967744 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112153498 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165656679 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144721621 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118094414 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153903956 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127019652 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.145053688 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.118770522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.151764807 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11270154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150768518 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147804824 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113890132 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159585266 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127242113 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.151052999 seconds)
  done (took 17.923129874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.273416806 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.249080859 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.258954211 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.314432737 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.170432936 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.179258374 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.246886834 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.20155899 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113887701 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.191874603 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.207259432 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.253527889 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175846686 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.255362855 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.212915173 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112995273 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1817133 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.2052162 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.249766037 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.34401983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.179658246 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.12989477 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.193395789 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.191834072 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.168487341 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.163856231 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13984306 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.169483139 seconds)
  done (took 7.025412053 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131479376 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.186885179 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.152614833 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144301282 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.172763067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.147588768 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.118129942 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.145677446 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.12827003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.161496592 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.146789284 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122226933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.150890178 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.122924234 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.145394666 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.153162314 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.125202613 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155183031 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.116606496 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.149357717 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132537425 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.163399809 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.151127312 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120992756 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.161461014 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.153078306 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.115163741 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.168143092 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.155412632 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.17591493 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.110864292 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.154005401 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129235335 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14537642 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121395447 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.14924248 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.115907741 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.146871947 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.117127846 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.142118583 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.113123348 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.135925323 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15184075 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129929966 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152691177 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11619632 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.151235297 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.15035608 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.11518399 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.141712797 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117014074 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.148106971 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119412645 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.164533937 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.117255652 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.146908748 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.117979569 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.14630292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.125932758 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.148819423 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111276352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.151967543 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.152290011 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119711168 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.156779724 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.121617391 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.150810504 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.115831736 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.151007069 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152332197 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.116836313 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159107201 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.110645313 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.148863606 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126014564 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.159435884 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.149242829 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120239181 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.154070798 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113473126 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.134766196 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112624296 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.131982944 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118767735 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.144580636 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119542243 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.14744253 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.119395898 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162777835 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.154539734 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.121463654 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.144932256 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12106374 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149919094 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.14249503 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11820275 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.165219621 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166592541 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113339358 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.142141877 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137070376 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.147236437 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.111589882 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.133472082 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124481452 seconds)
  done (took 15.852125274 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148056043 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.188655368 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.146419834 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136225471 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.185075818 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.180198269 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.223532749 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.155459409 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.114870586 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.16768807 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122077593 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.155810499 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.152458481 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132912192 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.180194024 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130146969 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.147551898 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162893648 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.120808416 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.193177121 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135840981 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.177310122 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.183997677 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.250056825 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120862295 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.175407907 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.182558378 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.131015125 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.160214642 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.152666904 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.163216315 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.183159024 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.15362696 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.151672364 seconds)
  done (took 6.780273557 seconds)
done (took 63.317771633 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.402149659 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.594584003 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.377141363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.373763797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.41982161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.399929836 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.393968527 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.570117759 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.116396784 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.360378756 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.373034599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.372762973 seconds)
done (took 30.062764771 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.421585403 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.982468681 seconds)
    (2/2) benchmarking "String"...
    done (took 1.704506016 seconds)
  done (took 4.983772107 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.376728947 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.374565595 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.627984433 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.375897116 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.376992739 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.390817946 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.372522999 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.385203726 seconds)
  done (took 17.203562007 seconds)
done (took 28.279973039 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.436743748 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.581709898 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.65311119 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.393684659 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.377438277 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.369562729 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.369055612 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.408434464 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.373278132 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.377302492 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.385887341 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.648312805 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.384828285 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.762062164 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.372877368 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.380270788 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.385436821 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.629862654 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.380784812 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.411291327 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.363604826 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.361541893 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.390158302 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.405856854 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.379932001 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.378883067 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.393904895 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.369613512 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.605293645 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.37134151 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.415251693 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.367450634 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.375498339 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.369121983 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.474583527 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.406188056 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.568935627 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.375410638 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.35760765 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.371687062 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.575267669 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.764600016 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.372186949 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.376841322 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.373418714 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.439412501 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.357924438 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.115283734 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.371253635 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.370217044 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.436694967 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.766561233 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.376068655 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.377834705 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.390773641 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.603929376 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.393398389 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.389123099 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.398099051 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.370040878 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.379788948 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.37413381 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.37347301 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.371403036 seconds)
  done (took 154.599414159 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.36657198 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.366597249 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.366465753 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.387451059 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.362770662 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.366788258 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.365304726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.366299396 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.367565673 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.36503477 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.366577335 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.362721661 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.366635734 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.381770879 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.367976354 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.380265198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.36725483 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.366601175 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.381427136 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366372358 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.387218196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.367151916 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.381109152 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.365162894 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.39250121 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.451372886 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.395140101 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.373770909 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.362548236 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.366809588 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.399680655 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.379435497 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.927494481 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.224145595 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.383099034 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.390549938 seconds)
  done (took 86.229383829 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.366807651 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.367650642 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.368051617 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.397044772 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.370123097 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.883428984 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.886902628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.090344368 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.433054661 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.560445766 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577721499 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.364582919 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.460236834 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.382250518 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.367364467 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.38468166 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.396818081 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365925507 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.367239714 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882150318 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.382155821 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.465323621 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.551710386 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.378137435 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398291993 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.765771472 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.365231458 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397790488 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.68891715 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.409082902 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.365116109 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.679206391 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.264969828 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.365414582 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.479999986 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.367182561 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396964742 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.373049296 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.644634469 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.366421967 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.369617374 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.370513131 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984251174 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.365156055 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884386844 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.370333062 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.275840662 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.367135009 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.369499211 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.947966052 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.930518067 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.382612054 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.369753817 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.371892659 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.369118294 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370131326 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.37020366 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.399038461 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.978394853 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.477009618 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.370961122 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.372386165 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399912705 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.371896818 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.576725437 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365684971 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.017675033 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.431025479 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.471649999 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884743989 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376173177 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.463348415 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.483206301 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.369689721 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.369929725 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.370009363 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.370000079 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.475013259 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.367487468 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.370241181 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.752935613 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.534696949 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.382035717 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.556434446 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.462579912 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.368959426 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68650242 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.369128903 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.370994383 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064002052 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.46429508 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.368343247 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.3714063 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.369952928 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.371919585 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.756277898 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883721017 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.587687877 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.368258049 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.06506083 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.373508683 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.765960024 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.876987452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.983939432 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.368449459 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.484361608 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.536777093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.385960983 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.371887468 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.559586081 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.368133192 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.433100604 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.369309769 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.768480855 seconds)
  done (took 384.07759593 seconds)
done (took 626.204499216 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.07857691 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.02843797 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.162831053 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.061106103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.031242508 seconds)
  done (took 11.65618521 seconds)
done (took 12.953308363 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553694763 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553306499 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.425828483 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559179446 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.400896316 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.575300651 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.532868071 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.392173489 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.474101403 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.455696497 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.473913125 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.425887253 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.412475267 seconds)
  done (took 20.531735296 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63376798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.372488444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.451178204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.643090873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.414240078 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.634507315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.657211773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.372705279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.514893788 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.387669315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.388021566 seconds)
  done (took 19.767191777 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.618856624 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.373221522 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.437381631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629893398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.417216799 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.632654913 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.710977264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.374197468 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.520851191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.391331603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.389011598 seconds)
  done (took 19.793240198 seconds)
done (took 61.387627653 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.41480146 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.535483915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.400062142 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.3867123 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.382553603 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.382368017 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.388452377 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.381690438 seconds)
  done (took 12.579524542 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.383031461 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.379948677 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.380865752 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.384362985 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.38103583 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.383655767 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.382348207 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.384187539 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.385292028 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.378031288 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.384001129 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.381504947 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.381515506 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.384818034 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.383076174 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.380657501 seconds)
  done (took 23.417372499 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.382945754 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.381210424 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.381751149 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.377845593 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.38106261 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.381326372 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.381396947 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.38028087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.379343116 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.38153148 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.382182942 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.380357808 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.378678849 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.381779312 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.381853439 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.38114212 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.380991185 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.381681549 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.384763804 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.380995124 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.384048552 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.380518137 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.379674236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.378610081 seconds)
  done (took 34.458707698 seconds)
done (took 71.754867523 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.374100163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.371358962 seconds)
  done (took 6.045012263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.437715387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.438520754 seconds)
  done (took 4.168683407 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.377680889 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.372589828 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.36971731 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.367355303 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.366210844 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.366988187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.368667396 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.366501152 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.367354592 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.367767534 seconds)
  done (took 14.983134456 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.357102263 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.356982243 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.354387068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.356127885 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.35841697 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.356486748 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.352285314 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.352954239 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.352467147 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.349620557 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.353102311 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.350450317 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.352203219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.349347015 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.349422163 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.347260156 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.347076494 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.347732902 seconds)
  done (took 25.62223314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.362190296 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.372050456 seconds)
  done (took 4.004978497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.47895307 seconds)
    (2/7) benchmarking "second"...
    done (took 1.384795547 seconds)
    (3/7) benchmarking "month"...
    done (took 1.46039983 seconds)
    (4/7) benchmarking "year"...
    done (took 1.449624457 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.383967562 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.366631531 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.376973513 seconds)
  done (took 11.165391955 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.340805226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.532508595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.639953432 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.880751639 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.339601867 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.341274226 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.202886757 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.340707374 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.341471412 seconds)
  done (took 15.220529768 seconds)
done (took 82.507918329 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.330383017 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.357612809 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.335236527 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.343249834 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.628590827 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.378358675 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.327103946 seconds)
done (took 16.958555569 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.310787717 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.316369362 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.313925033 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.330067303 seconds)
  done (took 10.525506433 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.328546652 seconds)
    (2/2) benchmarking "read"...
    done (took 1.678445755 seconds)
  done (took 5.262582437 seconds)
done (took 17.043548969 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331500129 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.330645002 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.330406205 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.328079248 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.330866253 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.326555487 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.326883636 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.330289064 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.32968683 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.328782351 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.330507772 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.329154842 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328764415 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326477372 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326179966 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329993851 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.328678261 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.326639383 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326602997 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327882772 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.327075182 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330210025 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.32681388 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.327658582 seconds)
  done (took 33.139504639 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.329100186 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.327823245 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.331080407 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.330088444 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.328382534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.329853163 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.329645159 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.327189658 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.330606896 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.329731049 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32871001 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.329513171 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.329915362 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.329195282 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330401501 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.328221401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.331044264 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327782364 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331115805 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.328301874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.330691097 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327531363 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.328424367 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330825239 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.328801831 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328072923 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.331523363 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.329069185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33104792 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.32785892 seconds)
  done (took 41.134143218 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.336018763 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.3371238 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.332058862 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.332347906 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.330947171 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.33366678 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.33132583 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.331943344 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.330859095 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.331186065 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.331306718 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.333025444 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.331955601 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.332860627 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.332195347 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.330698936 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.33325645 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.332114967 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.333258098 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.332865439 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.332204055 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.331924073 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.332964762 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.331982293 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.33315956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.332106209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.3319214 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.333621776 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.332538541 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.33292328 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.332590524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.332972544 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.333149051 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.332791416 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.332429069 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.333830824 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.337322688 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.339436041 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.332572766 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.333244424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.333260779 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.332751212 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.333420842 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.332965948 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.333801612 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.331845539 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.332636492 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.33357002 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.332902083 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.333550874 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.333312853 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.333970217 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.332860835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.333598429 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.333926915 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.333050422 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.333346671 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.334152056 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.33445462 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.334110217 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.334661947 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.333951889 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.332601506 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.334061193 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.335556843 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.334541202 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.333197315 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.334624327 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.335774329 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.334507969 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.334091956 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.334330348 seconds)
  done (took 97.25152081 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.333831673 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332785266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.332677026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.332746849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332659273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335301111 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333789376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335315765 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334327695 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.335085679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33541966 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333233488 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334109185 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336475091 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335336741 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.333494746 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335791681 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332575334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.337268482 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332659669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332704647 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.330558879 seconds)
  done (took 30.605476026 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332374648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334743322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.330865005 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.334682679 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.331544942 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332629099 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3319142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333006148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332384238 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32970485 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329086963 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33192209 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.330866118 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330028613 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329055931 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.331486953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332105532 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330633864 seconds)
  done (took 25.223415906 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.329353138 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.329858034 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.333229843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.329922523 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.329556814 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.331794573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330213476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.333522418 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.331905364 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.33043369 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.332855899 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333586953 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.332781831 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331450041 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334965424 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.332496146 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.334344541 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33055016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333304679 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332504145 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.330532208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334841165 seconds)
  done (took 30.558084905 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334104122 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332413224 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.332049573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.331598631 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.329731354 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3337985 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.333256898 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.332411158 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.334996866 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.333064248 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331040741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.333558769 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.332427087 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33079357 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.330728839 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330739077 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333573041 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331995792 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334232429 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.332242349 seconds)
  done (took 27.902827999 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335862638 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333619718 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336209081 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3360229 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335700772 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.335835665 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337069111 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335571298 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335605304 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.337060005 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336207275 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.336499974 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337409048 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.336148756 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334995958 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335553941 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335695623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.337754241 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336184673 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336633157 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336699673 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336304654 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336950773 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.33444647 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.336346316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336406268 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336460378 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.336481689 seconds)
  done (took 38.6670694 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336345597 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.336198495 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.334395159 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.334803544 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.334218287 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.334096481 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.333793187 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.333934861 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33642109 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.334412372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.336711054 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.336263179 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337484547 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.336498055 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337041586 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.782097211 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337305156 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.334593152 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334110562 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33371788 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.337272676 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337377639 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.338380768 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.333543431 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334694779 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.336890556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334698036 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.335308602 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336973411 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.334568956 seconds)
  done (took 41.77226922 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.381856901 seconds)
    (2/2) benchmarking "in"...
    done (took 1.382513934 seconds)
  done (took 4.021847032 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.335066447 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337610491 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.337734719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.335429099 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.335742587 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.338241344 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.337956673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336203234 seconds)
  done (took 11.952333409 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.338908661 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.338500219 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.338613667 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.33887279 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.338912047 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.338443318 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347840861 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.359332621 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.339770817 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.34081197 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.345077485 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.345199434 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.342884366 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.338920975 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.338387727 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342341416 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.340760617 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.340438161 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.340072131 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.339999409 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340124492 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342254893 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341069791 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.337614575 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.340404359 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.348421052 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.343322717 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.341172021 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33940512 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.344329271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.340106461 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.338105584 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.34056231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.341415273 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.341381133 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.34048115 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34991856 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36196147 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.3474346 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341140173 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341639866 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.338647805 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.343615313 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.343483075 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343178281 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.344038986 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.341715545 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.338860902 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.339865362 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.344508227 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.345060467 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.340799311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.339078214 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345618785 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.340961735 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348196385 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.360055779 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.344061003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.348172628 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.350812198 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.353053318 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.362560549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.344279411 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.341007594 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350896333 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.360683115 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.348704752 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.355947343 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.339373295 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.341986021 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.348349555 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353290585 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.364792985 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.3422664 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342136119 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.342481897 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342316879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.342689093 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350144692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.363908156 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.342765868 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342678289 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353075361 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.361619165 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.341351057 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.342770393 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.343468361 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.342667037 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.343647372 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355509217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.362707409 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.343639978 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.342722963 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.343857087 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.344345266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.345245606 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.34076209 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344189458 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.340939349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.344109182 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343509331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345278436 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.35055539 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342737085 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343515727 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.349407739 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34376735 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343125282 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.350898606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.343936404 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344701197 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.345337131 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.349983478 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.341466857 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347781892 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.351160998 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.345471713 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.346022118 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.345526766 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.346577429 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355441411 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.36582379 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.346312717 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.346987685 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.349848118 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.354638129 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345882688 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.349015263 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.346090761 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.342869097 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.34388981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.345940916 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.34492613 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.345733039 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345840974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346931123 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.343302655 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.344957707 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.344671664 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.345487407 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346248956 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.346118993 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.346183365 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.347205766 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.345407501 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.348290812 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35498594 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.344628854 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.348443211 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.347024654 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.345314792 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347395336 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.3467099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.346327716 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.345963915 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346011316 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.345835529 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.346890522 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347847735 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.348817989 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349313549 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.346918433 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.349635949 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.34817602 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.351352981 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.346724221 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.344527654 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.347382529 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.348907342 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.346764937 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.347884161 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.347266752 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.350101142 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.354406294 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.348295905 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.347383868 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.350031803 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347571727 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.348098999 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348779965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.350286625 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.354376591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.3474962 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.353799239 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.348764314 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.348758862 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.349709317 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.347991833 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.347089796 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348502755 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.350534064 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.354530142 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360001167 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37134347 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.349822968 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.350455279 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.348535935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.351441574 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.351667104 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.347975883 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.349163944 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350314038 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34948543 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349486358 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.350083968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.349359528 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.347941859 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.350555052 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.35134171 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.349099852 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348802454 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.350809905 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350138426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.345879096 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350027338 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349213022 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.348234471 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.346819568 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.347766377 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.348841858 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.35074721 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.349650095 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.355701101 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.346373696 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350468355 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352325941 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.350826835 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.349211926 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.352525928 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354271599 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.350629139 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357473499 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.369662181 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.351168659 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356957145 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.367920784 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.349357472 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.35345985 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.349982988 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.348645198 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.353042961 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.356521918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.35121321 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.351117151 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.352543344 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352730638 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352999018 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.356074988 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.34991149 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.351710874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.352762451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.352155121 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349349223 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.352279881 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.351853051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.350975821 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3518271 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351481133 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.352003685 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351979073 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.352297414 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.351619935 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.351318332 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354044729 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.359214069 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.358179929 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.351206551 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.353621719 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.352551934 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.353871023 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.351616968 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.351619565 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.351711746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362926181 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.374853775 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359026927 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.353620312 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.352700686 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358582113 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.355427217 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.356623614 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353755102 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353164911 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.353500855 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.353932655 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.350537355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354024368 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.352704103 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354882152 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.354897084 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.356517796 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.353926551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.353456959 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.354003615 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.352119406 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.353883908 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.3546932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.354108973 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.355214048 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355911248 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.353740231 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.353044594 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36090837 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374273124 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.354249984 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.35356078 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.354435346 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.353569701 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.355200121 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.354850811 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.358305878 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.360686165 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.359276682 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.361840307 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.356787387 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363940238 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.354977855 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.358339859 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.361852063 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.351825378 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.353004994 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.354088786 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.354950052 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362322413 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.373262918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.356900733 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.358092704 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356082675 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.355578827 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.356206442 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355976255 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354459409 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.356412243 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363554167 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.37613937 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.357506628 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35690028 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.353381264 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.355145 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.355857206 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.355503445 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359509271 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.355612972 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.356119191 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.356157766 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.357332348 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.355508951 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.356526852 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.356882747 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.354815501 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.356606574 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.362613235 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.376399546 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.358155016 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.356566386 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.363427827 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357115269 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.363378974 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.376292626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.357111483 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.357067921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.356384487 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.357242519 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.357328566 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.357764222 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.357125585 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.358818906 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.359417134 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.358302521 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.358220825 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.35803377 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.358467346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.358662965 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366485778 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37665829 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.358253949 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361703136 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.356784835 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.359316683 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.363551676 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.35750626 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.357433966 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.361290032 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366692456 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364660745 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.358317924 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.358829414 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.359242671 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35897483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.358179535 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.359727189 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.359315302 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.359707011 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.35917673 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.358539167 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360636451 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.358532192 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.360053647 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359201899 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.359916414 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.367514609 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.361245059 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.360312549 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35881971 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.360632849 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.359154444 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.360077981 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.360243605 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360060075 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359195216 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.362147442 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36526985 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.36330288 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.361853093 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.359665155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.359484786 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.358369791 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.36091359 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360834375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.359037956 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360355209 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.360874319 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.3601267 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.362473348 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.359022605 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.360047419 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.360122126 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.361219099 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363842227 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.365998936 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360529837 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.357501515 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.359929884 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361865837 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.360267904 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.360918908 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.368224289 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.362952452 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.369429309 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.367039781 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.36290483 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.360494295 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.362435597 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.366907006 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.359881804 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.363415501 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.362270672 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.362646763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.363106509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.364344592 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362379652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.366901462 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.362001384 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.361482982 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37087925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.383753997 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362157235 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.363379388 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.366060392 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362893293 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.361083034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.363151184 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.362241548 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369627643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.382671213 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363162693 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364758213 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.363932109 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.364135635 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365322157 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363772517 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.363136246 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.358638503 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.363699123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36289867 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36317495 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.360044734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.363453636 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.362881948 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.36507571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.36722441 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.36106845 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364731832 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.36495308 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.363322656 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363549814 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365109727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.361292293 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.361619408 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.363200895 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366156286 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.364140302 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.366380571 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.362607771 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.363274123 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.36350592 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365049811 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366351465 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.371360542 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.369433062 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362534699 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.362489686 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.364266556 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.366911905 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363491835 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.366136145 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36483762 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.3653789 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.364162582 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.364023917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.365436735 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.367500621 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.378793309 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.385517143 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.365232425 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.365699736 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367659375 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.365758215 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.362995136 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.364674109 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.36605216 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.367494401 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.372016805 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.365054057 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372408321 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.384584213 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.366380622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.367770682 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.369407055 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.369715514 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.36913612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367480506 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.365720494 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.371112975 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.379274979 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367831652 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375185109 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390729387 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.385576196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.368021653 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.366833603 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.366697807 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366962413 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.367271218 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.367642258 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.36618066 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367467891 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.367232376 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.366797426 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370850801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.368748132 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.368898446 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.367116424 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.366305176 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.369157592 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.368187077 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.368951814 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.367950135 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.36821636 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.368048111 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.370559302 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.367698819 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379520303 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.391307855 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.367894286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.368981527 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.365404494 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.370909205 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.371771377 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378086479 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.373626893 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.367552653 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.3682452 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.36922454 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368820018 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.368566265 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.369034929 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.367424422 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.368983954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.366242638 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.381575032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391255936 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.374517684 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.369370129 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369535371 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.369331705 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36846053 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369725022 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368852053 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.371213961 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.371993249 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372797574 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.369635193 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.368140005 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.371211461 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.376155282 seconds)
  done (took 809.625684215 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.366725554 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366040441 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367252217 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366893976 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366627862 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366907956 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367717112 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367596233 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.367608678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.367500207 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.367874215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367658687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.367231697 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.366902388 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367758125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366981124 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366778465 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367839675 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.367954913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367778209 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.367093317 seconds)
  done (took 30.000015415 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.370046557 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.36810873 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.367721589 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371487169 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366522383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370745085 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.368104234 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368981375 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.370233306 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370539491 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.371738601 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369828214 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.368894772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.368275658 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36748757 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370138205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.371613934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369181359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.369268801 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369204344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371262993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.368118198 seconds)
  done (took 31.414140927 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.371455972 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.371425766 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.372660549 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.368632639 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.371479523 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.368873586 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.372298492 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.371915525 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.372659094 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.373534817 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.371676535 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.3720755 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.377179429 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.374074 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.372790802 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.371763381 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.371457026 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.372738696 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.372463127 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.369295331 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376713803 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.369521538 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.370361332 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.369377134 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.372861809 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.372273847 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.373817066 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.371918209 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.374897688 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.376457839 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.373080493 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.372559058 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.374292455 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.371888669 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.374145168 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.377265521 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.374520256 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.370909536 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.373107782 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.38240004 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.389641017 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373197201 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.379798547 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.374169983 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.373482051 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.377076461 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.37859702 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.371007835 seconds)
  done (took 67.219730633 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.953814265 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.973300345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.960462991 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.974521353 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.968003299 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.967586181 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.967976652 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.967443599 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.966614419 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.966960602 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.970081912 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.963887306 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.974687746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.976153296 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.975431456 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.96888893 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.966474402 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.967855909 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.965379424 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.970172685 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.970256145 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.976278211 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.97326817 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.97687129 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.971544023 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.974595909 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.972917928 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.971447358 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.971555932 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.969871893 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.986021727 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.975450819 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.973280004 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.970677753 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.977181684 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.976816655 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.982845786 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.972454617 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.976065619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.973721203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.978516116 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.976801083 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.980854932 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.977495306 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.973591996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.980516546 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.975670184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.979824725 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.975801907 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.977737886 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.978759064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.975721 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.978342507 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.978045026 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.977624641 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.981477175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.982261935 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.974717216 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.988559091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.980698343 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.975996101 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.982886268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.980193228 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.983999202 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.982577164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.975548005 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.981175469 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.987867759 seconds)
  done (took 135.575347088 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378017672 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.378246068 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377656707 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377321464 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.378899692 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.378517922 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.377797043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.378110853 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.379023391 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3790477 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.378401135 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378134277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.377778015 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.377685293 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.37829698 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.376975712 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378439505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.378424445 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.378152423 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379107884 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.379077661 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.379139273 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.379084798 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.378995678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.380585091 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.379807349 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37919182 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.380052572 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37895658 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.379018188 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380117328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.380057016 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.377942525 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380564347 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.379877696 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.379416785 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.379760657 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379143193 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.380813391 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.379178385 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.378970748 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379429418 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379006628 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.37908836 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379201319 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381135393 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.379812946 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.380759744 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.379465925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379898087 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.379445793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379570828 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379759 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.381033316 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.379575251 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.380644018 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381155246 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381093406 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380797924 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.381069094 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.380211249 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.380793101 seconds)
  done (took 86.812728593 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381372511 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381718383 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.378394318 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.377301574 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379841693 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.379155589 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.381391195 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.380497962 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.380992546 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.380798746 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382772928 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378831719 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379634133 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382906925 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.38038411 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380104517 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378100628 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.378965859 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382625311 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.380320106 seconds)
  done (took 28.903624311 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.379436884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.381167715 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.37845611 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.378628299 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.381882432 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.379740735 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.380982461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383738483 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379999874 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38329911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.381893573 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.382574457 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379436329 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.380798596 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.382866631 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.379861167 seconds)
  done (took 23.393641912 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.381197099 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.382486343 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.382783789 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.383969515 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.379482441 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.379764462 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.382918411 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.380920555 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.380272033 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.383396845 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.382839862 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.383712603 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.383004321 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.383150274 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.380834139 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.383834279 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.380383936 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.380651491 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.382976329 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.384764106 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.381240445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.381137547 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.383802541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.383300467 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.380889184 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.381114768 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.380443584 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.381315147 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.381044829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.383970081 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.3810691 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.381781257 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.381895543 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.38146927 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.383364901 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.382100914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.383666945 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.38578726 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.384546313 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.383982396 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.385318597 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.383150102 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.384261813 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.383978986 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.382857415 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.383594173 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.38235335 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.382703156 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.381710081 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.381579396 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.385348626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.386568021 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.384287613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.385315903 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.384888907 seconds)
  done (took 77.349752244 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.384508946 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.385727498 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.383194566 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.385914919 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.385701197 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.383631925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.385415196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.384691039 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382912541 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.384645992 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.383424727 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.388234169 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383639875 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.386247507 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381518304 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.386512119 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.383350374 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.383537254 seconds)
  done (took 26.223133289 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.384268151 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.383672286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.386403843 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.382689506 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.383649235 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.387195431 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38302712 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.385801506 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386978076 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.384982622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38298524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.386892307 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387025734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.387141067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384791384 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384314135 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.387580857 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.386748654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.384886467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.385221144 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.388210714 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.387629054 seconds)
  done (took 31.782966844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.385492496 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.386724404 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.386541996 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.4018293 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.402154134 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.386629159 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.386136939 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.387026681 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.405804018 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.435703669 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.429772508 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.403913134 seconds)
  done (took 18.101568333 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385160211 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388531529 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386039802 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387523535 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38745653 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387144718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385608022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386976327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389668672 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386629105 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385465971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38936769 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388914264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386761509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387976381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388580244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386275377 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387171244 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386308529 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38955834 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386958307 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389537187 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385984189 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387166484 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387115677 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386335893 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389341139 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387763961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389895979 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391263343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387255767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389854774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388188083 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389808615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390385976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387272609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391011604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390414236 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388370517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389281585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38995652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389551173 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387457656 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390723867 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388095416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387516762 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388795312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387760177 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391178213 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39090384 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388850221 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391059091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391783487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390478701 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391269553 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39006698 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389039009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390100098 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388507697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389079353 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39149479 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388884302 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390256189 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39122578 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388896972 seconds)
  done (took 92.95528161 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388020265 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388064776 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389574213 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389342145 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389698051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388416408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389432894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389866755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388293747 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389025623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392831721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389351954 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388585182 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389037381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388442638 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389496049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389624413 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390470032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388730692 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391832123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390134325 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390264461 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390247519 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391012099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389572193 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39349006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389825638 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390390602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390215427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388969323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389259348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389607573 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389785114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389293148 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390013904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38912116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390038537 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390796262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392870083 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393464483 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390964255 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394001488 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391281116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392342653 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390535411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392181036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391121028 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390902341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390364184 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390923418 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391295668 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390254531 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39067836 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390847591 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392062214 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391698446 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392010159 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391780443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390971981 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394047762 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390328388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391972709 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395193768 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391518547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393185479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39201214 seconds)
  done (took 93.090190797 seconds)
done (took 1935.93056516 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.557557427 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.511848508 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.39234329 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.407124611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.391837543 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.389069243 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.406518321 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.393401071 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.392334919 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.39314072 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.393194632 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.582960268 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.387299949 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.392491452 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.393209297 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.488084327 seconds)
  done (took 28.189381885 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.419135042 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.403921026 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.513466736 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.426412345 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.426477199 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.578285672 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.460491008 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.406199053 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.56561789 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.448872581 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.394266746 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.430659118 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.403365838 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.394093445 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.441684819 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.578829892 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.647813909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.394669327 seconds)
  done (took 30.644381188 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.827674388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.410516295 seconds)
  done (took 5.552598864 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.424481848 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.40529428 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.406168175 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.40383097 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.395015634 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.396153547 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.402901705 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.395360857 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.398036396 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.52587858 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.41276091 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.41540213 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.426010976 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.40598536 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.405278778 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.442875862 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.564700596 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.403672109 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.400142913 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.411200763 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.403921228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.515376516 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.444238257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.406911271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.524944758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.405387584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.413176582 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.411931159 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.559825777 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.4030407 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.403666972 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.405205157 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.407667706 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.28387404 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.875125212 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.412070413 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.428700455 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.415036604 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.401661664 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.570596246 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.407369976 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.411361516 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.397041607 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.862591716 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.553734929 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.524072819 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.41246348 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.414569355 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.407955878 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.465273406 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.405704525 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.408622991 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.44891338 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.188231862 seconds)
  done (took 89.16024486 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.408382063 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.397569529 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580389677 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.423468964 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397323533 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397635277 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.398864069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.674681258 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.449643633 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.402006449 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.685060352 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952893516 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.414750484 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.44305984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.271155936 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.460093798 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399593546 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.417495319 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.401869764 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.403338814 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.938203894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405825043 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.417986364 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.557903849 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.438589327 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.907271789 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.400176181 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.404140099 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.40383635 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.398332412 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.913901107 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42205161 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.45819132 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.402888646 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.667837272 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.765624766 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728452908 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.408868922 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.420398979 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402013626 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.421515722 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888268638 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.748189841 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.399342894 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.401335197 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.896812298 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.399730111 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.408253586 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.406543696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.650610461 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.399655826 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.401349757 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.416527432 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.399694449 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.399794859 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.412513191 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.474071745 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.906082997 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400420692 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.406564165 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399077726 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401589853 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404493258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403630623 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.418400005 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752046339 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.545585956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.402991321 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74944613 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907503414 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.417463677 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993561715 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.419073944 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.404832639 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.619217947 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409580304 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.401032835 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91542011 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414542799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.397755917 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728922271 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.400249662 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.682666443 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.416138445 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39647737 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.944163382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.40551763 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.487610756 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.392631291 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.41483748 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.393683014 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.397645544 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.664956605 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.439466369 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.392980661 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.392320971 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.392928446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.392353724 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.392471326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.394639372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963166192 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.418633247 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.391675717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.397220898 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399741838 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.39321481 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.397792922 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.395437067 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.657855635 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.398179419 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.400874538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393611894 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.393973362 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.4180289 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.54848467 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.396327305 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.691623829 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.394880893 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392052202 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.41518061 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.3940654 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.447497401 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.394924974 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.399890652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243220637 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.697971914 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.412379821 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.412987048 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.396083906 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.394637128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393504962 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394544057 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.428604106 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.395584908 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145134212 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.410172461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.408992939 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.395183024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.403490072 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.395155936 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.397559045 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.393594012 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.683006627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.668689809 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.542173738 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.396603297 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.395998219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.132496367 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.448193198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57960679 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415818146 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.39751177 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.653412018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.610163554 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.399124589 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.397884806 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.398341949 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.660101135 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.400665332 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.719249186 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933825787 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413336826 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.397102932 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.152307834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.085721606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.405030554 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.397425954 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.67935176 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.412624756 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.398069875 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.397203691 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.400394225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.414120446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.399675305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.405744553 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.397569465 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.397422632 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447183746 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.590871792 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.417367969 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.398456692 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.89795588 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.412398839 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398658961 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424218596 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.401530273 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.397773014 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452601583 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.403557317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.40569083 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.403246655 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404923676 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.915859029 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39908234 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.402527308 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.591729225 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078045095 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.414604143 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.400897774 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.41663761 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.294487451 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.957245001 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.463516641 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.699022957 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.401473381 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.438864723 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398858419 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.466638327 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923601938 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401995464 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.416000979 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050191318 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.416384671 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.916965614 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.401398794 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.400741403 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997101085 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.416710662 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.405298923 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.400440909 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401845156 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.705992652 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.400991818 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.436490971 seconds)
  done (took 512.792557029 seconds)
done (took 667.647877504 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.400017506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.400861718 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.394114395 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.406018024 seconds)
  done (took 10.924261036 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.410307341 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.407399086 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.408983313 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.405077894 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.409213927 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.406933042 seconds)
  done (took 9.767669743 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.40035221 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.400912783 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.406273665 seconds)
  done (took 8.529483868 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.602992228 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.435156736 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.720482932 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.42901952 seconds)
  done (took 9.510747883 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.40784294 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.407848155 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.408588443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.409518835 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.410472954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.412331692 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.408927283 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.41015134 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.412364064 seconds)
  done (took 14.006793351 seconds)
done (took 54.058762539 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.410227698 seconds)
    (2/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.416077487 seconds)
    (3/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.477234297 seconds)
    (4/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.427399011 seconds)
    (5/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.221517528 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.443316985 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.416227773 seconds)
    (8/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.417354756 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.400123363 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.548953224 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.437029117 seconds)
    (12/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.523525439 seconds)
    (13/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.403063668 seconds)
    (14/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.44124315 seconds)
    (15/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.443506756 seconds)
    (16/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.729354886 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.624620625 seconds)
    (18/286) benchmarking ("sort", Float64, false)...
    done (took 1.609796952 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.43227137 seconds)
    (20/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.392393693 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.590335161 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.628567475 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.422511692 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.420048559 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.489829302 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.435036472 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.457349968 seconds)
    (28/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.497187459 seconds)
    (29/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.420144454 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.508236596 seconds)
    (31/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.603729032 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 2.011913467 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.417904007 seconds)
    (34/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.155933592 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.523790503 seconds)
    (36/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.486711496 seconds)
    (37/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426074182 seconds)
    (38/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.574549245 seconds)
    (39/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.071720183 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 2.406685677 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.444819445 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.429663641 seconds)
    (43/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.411947992 seconds)
    (44/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.3920602 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.23127722 seconds)
    (46/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.560815125 seconds)
    (47/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.407711618 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.154761812 seconds)
    (49/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.428655472 seconds)
    (50/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.429887186 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.42016474 seconds)
    (52/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.503034641 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.418073138 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.594961507 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.732654768 seconds)
    (56/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.49113812 seconds)
    (57/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.062578167 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.394274858 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.465321301 seconds)
    (60/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.484074558 seconds)
    (61/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.430175875 seconds)
    (62/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.156552405 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.584532264 seconds)
    (64/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.501799417 seconds)
    (65/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.428999992 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.552231466 seconds)
    (67/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.54656859 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.398301632 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 1.599642744 seconds)
    (70/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.556196566 seconds)
    (71/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.442511488 seconds)
    (72/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.542851797 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.123594716 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.421943046 seconds)
    (75/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.406867663 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.461040858 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.287429155 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.430762289 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.401997275 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.484983557 seconds)
    (81/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.417842528 seconds)
    (82/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.423946012 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.420852906 seconds)
    (84/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.484799632 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.116656355 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.404470229 seconds)
    (87/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.536853403 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.511368546 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.614060929 seconds)
    (90/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.437975507 seconds)
    (91/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.463411817 seconds)
    (92/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.473730772 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.519639592 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.173424099 seconds)
    (95/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.597107805 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.456269251 seconds)
    (97/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.547994302 seconds)
    (98/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.592854779 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445077931 seconds)
    (100/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.416591489 seconds)
    (101/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.594249678 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.429154491 seconds)
    (103/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.485662434 seconds)
    (104/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.492448054 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.458060645 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.424503854 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.419356862 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.061315514 seconds)
    (109/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.42959256 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 1.443652404 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.417979021 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.590782133 seconds)
    (113/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.505999605 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.437986407 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426415589 seconds)
    (116/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426314366 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.495999882 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.446734852 seconds)
    (119/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.578208714 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.50235049 seconds)
    (121/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.39624887 seconds)
    (122/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.484212317 seconds)
    (123/286) benchmarking ("sort", Float32, true)...
    done (took 2.116489976 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.425441293 seconds)
    (125/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.423683359 seconds)
    (126/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.409327146 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.604460168 seconds)
    (128/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.081031382 seconds)
    (129/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.438605965 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.497698571 seconds)
    (131/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.417711421 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.430896308 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.709925749 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.523081177 seconds)
    (135/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.518627416 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.423522853 seconds)
    (137/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.411575058 seconds)
    (138/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.503710809 seconds)
    (139/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.262156361 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.471840237 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.424456998 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.466449505 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.468996034 seconds)
    (144/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.399158651 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.667026084 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.421078644 seconds)
    (147/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.432269261 seconds)
    (148/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.607828347 seconds)
    (149/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.553395434 seconds)
    (150/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.163568164 seconds)
    (151/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.442994904 seconds)
    (152/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.42723231 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.477954496 seconds)
    (154/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428962696 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.489718798 seconds)
    (156/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429971501 seconds)
    (157/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.290402127 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.78499835 seconds)
    (159/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.640370909 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.52421667 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.436104338 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.497832484 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.29560527 seconds)
    (164/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.434280666 seconds)
    (165/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.53281606 seconds)
    (166/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.562480411 seconds)
    (167/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.443613033 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.427839041 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.430356876 seconds)
    (170/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.463642879 seconds)
    (171/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.420446736 seconds)
    (172/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.23738239 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.430021567 seconds)
    (174/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.435594782 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.445422913 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.400053165 seconds)
    (177/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.495005941 seconds)
    (178/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.460705362 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.454102024 seconds)
    (180/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.432568665 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 1.760735326 seconds)
    (182/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.416628043 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.430280912 seconds)
    (184/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.43929313 seconds)
    (185/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.067200957 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.510646354 seconds)
    (187/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.553483256 seconds)
    (188/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.443525239 seconds)
    (189/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.532193018 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.525563229 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.495496638 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.070948919 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.441494735 seconds)
    (194/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.493915078 seconds)
    (195/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.500255529 seconds)
    (196/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.4694446 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.119697467 seconds)
    (198/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.424860084 seconds)
    (199/286) benchmarking ("sort", BigInt, true)...
    done (took 2.415149204 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.426103788 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.064810321 seconds)
    (202/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.451079423 seconds)
    (203/286) benchmarking ("sort", Float32, false)...
    done (took 1.570818008 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.444031742 seconds)
    (205/286) benchmarking ("sort", Float64, true)...
    done (took 2.142566404 seconds)
    (206/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.461392192 seconds)
    (207/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.577311316 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.56020844 seconds)
    (209/286) benchmarking ("sort", Int8, true)...
    done (took 1.970359066 seconds)
    (210/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.438499549 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.416304625 seconds)
    (212/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.423821818 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.484592298 seconds)
    (214/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.545654679 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.438978915 seconds)
    (216/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.465465696 seconds)
    (217/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.49757042 seconds)
    (218/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.521330977 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.541477692 seconds)
    (220/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.434694917 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.515285895 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.467950905 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.536284051 seconds)
    (224/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.437994743 seconds)
    (225/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.169164027 seconds)
    (226/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.476537594 seconds)
    (227/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.432442505 seconds)
    (228/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.430605003 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.491764685 seconds)
    (230/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.43047517 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.514421522 seconds)
    (232/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.457631887 seconds)
    (233/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.42940127 seconds)
    (234/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.427641168 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.523514871 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.423467604 seconds)
    (237/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.405256998 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.502414103 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.46528775 seconds)
    (240/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.469337463 seconds)
    (241/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.072700935 seconds)
    (242/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.558965294 seconds)
    (243/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.490862097 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.537817001 seconds)
    (245/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.544494402 seconds)
    (246/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.455505111 seconds)
    (247/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.536823057 seconds)
    (248/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.438127566 seconds)
    (249/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.439066871 seconds)
    (250/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.565570631 seconds)
    (251/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.128636927 seconds)
    (252/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.431252864 seconds)
    (253/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.437915307 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.439597607 seconds)
    (255/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.438755487 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.439464208 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.564624255 seconds)
    (258/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.447547211 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.578113619 seconds)
    (260/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.608136347 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.43536171 seconds)
    (262/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.419596143 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.644313121 seconds)
    (264/286) benchmarking ("sort", Int8, false)...
    done (took 1.564816391 seconds)
    (265/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.419709896 seconds)
    (266/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.493112195 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.413917846 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.429034985 seconds)
    (269/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.485441353 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.535417013 seconds)
    (271/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.611059184 seconds)
    (272/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.424101475 seconds)
    (273/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.600147436 seconds)
    (274/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.452748486 seconds)
    (275/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.477726647 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.618284334 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.433227884 seconds)
    (278/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.509748676 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.424491413 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.408211928 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.438210893 seconds)
    (282/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.410319567 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.177048387 seconds)
    (284/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.493842605 seconds)
    (285/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.434553885 seconds)
    (286/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.451975609 seconds)
  done (took 494.665907717 seconds)
done (took 495.98775452 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.467469034 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.477642128 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.431337409 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.465645321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.545202779 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.609261613 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.442688331 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.472343546 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.481020305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.481344809 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.439224496 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.609400808 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.433701887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.433150552 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.430863779 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475425866 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.433173509 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.43804889 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.451576557 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.473485421 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.448477605 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.43891265 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.482851015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.608581777 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.436444616 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.436131898 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.435529582 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.453080226 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.546123424 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.436226825 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.436867392 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.444215202 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.433603836 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.443475787 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.427563829 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.452660588 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.445604236 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.44314565 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.468806363 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.545474198 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.434651187 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.440668159 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.433666949 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.434732426 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.434100917 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.472685277 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.436657137 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.491916888 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476463871 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.477950906 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.424116893 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.447363447 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.444282731 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.437662855 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.446083599 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.434837277 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.492562623 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479782076 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.45370946 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48174155 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.42478761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.444924094 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.474430346 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.452095635 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.442706283 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.430430724 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.432841362 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.475288493 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.433411634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.441221004 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.43047535 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.443108455 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.436451526 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.450676989 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.468520496 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.435819418 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.435214062 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.436106572 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.443649541 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.434620002 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.482034306 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.477693756 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.486300234 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.438237747 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478057288 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.61222629 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.448074898 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.438447086 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.474963057 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.456028978 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.444565832 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.448528134 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.472750408 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.438778721 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.484424982 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.494111792 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.446895172 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.445740977 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.489003563 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.448979045 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.437646278 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483058412 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.434695422 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.43460765 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.436297394 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.559193483 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.435118931 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.438115382 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.472639413 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.486685381 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.497965687 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.426550844 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.452589301 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.484164843 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.447015826 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.498838378 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.440939529 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.4272644 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.432461849 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.560122596 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.441387572 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.442936973 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.485700186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.498363119 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.439304503 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.440592917 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.443188205 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.481277547 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.560442315 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.450044686 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.551415313 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.438317696 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.441385898 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.472911842 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483846206 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.471134732 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.500359469 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.48428949 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.454986586 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.439379439 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.450072735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.450517812 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.441858869 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.497835555 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.437822623 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.472196295 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481450601 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.48098088 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.472140436 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.561164138 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.444470004 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.429869957 seconds)
done (took 239.776290156 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.499090896 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.432325771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.555562112 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.436106056 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.539904052 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.540854708 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.432543953 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.433648581 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.432316505 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.816341867 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.433832516 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.432934683 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.435087902 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.43453253 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.523018705 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.435865476 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.434081767 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.77855558 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.437244948 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.508686467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.437546718 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.435208658 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.437234452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.821466937 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.434605101 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.434536694 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.512745327 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.436134869 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.783410794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.432033156 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.432804532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.784509497 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.53061591 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.454604033 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.448454178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.44344885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.542074187 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.454429078 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.520753423 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.523962706 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.559214652 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.477535433 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.430646258 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.429213942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.438492768 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.437985649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.434557922 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.46407576 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.434836486 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.435336064 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.7818982 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.447938663 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.445431563 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.435087755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.435486754 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.457220036 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.436474606 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.439595631 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.528888806 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.437150721 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.502586203 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.82373075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.818384173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.438814654 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.433219698 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436930941 seconds)
  done (took 111.461816387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.506240932 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.515168067 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.550050477 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.43913249 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.489936753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.55245936 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.443003086 seconds)
  done (took 11.844268264 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.444841755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439978765 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.48946855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.489386765 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.439746124 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.656930632 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441840053 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.450887336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.436860108 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.517279534 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.43995611 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.441773396 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.446456756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.436559542 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.489132693 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.453062558 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.556948699 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.441389119 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440076861 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.592991534 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438147066 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.446587659 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.516598681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.451670181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.44146368 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.446729568 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.410791843 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441208891 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.439376488 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.441011578 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437876192 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.55234263 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.441294105 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.436635393 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437886656 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.604191912 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.440879397 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.439467745 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.441479444 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.440538128 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.4413577 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.442099497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.442555788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.439062403 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.440580714 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.465479273 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.441895258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.441263127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.443926539 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442783494 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.521379534 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441658629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.439327766 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.440785185 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.52081036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449048761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.44367669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.438996919 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.443403488 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439305541 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.595808825 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.489759024 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.441734486 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.490191941 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442363234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.443868659 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.442945162 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.441145434 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.536973873 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.443302079 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.490924884 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.440776705 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.671390984 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.467516875 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.446377921 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.445061601 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.44505638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442578065 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.43932917 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.450141068 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.440151179 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.444534958 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.449326652 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.441540135 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.441158259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.628234053 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.605360792 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.441135734 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.456024097 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.450188891 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.440531113 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.52317316 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443375294 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.441052075 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496879559 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.557984727 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.520869085 seconds)
  done (took 148.792009072 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.451447421 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.453316205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.447327546 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.468427179 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.444628854 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.445151952 seconds)
  done (took 10.063419809 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.446043011 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.446057587 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.445857164 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.444311259 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.44503303 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.445268123 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.44619282 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444949342 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.447357332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.444200694 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.444407287 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.447441262 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.446732137 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.444973598 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.447220085 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.447391657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.446495184 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.442608251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.446562478 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446363887 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.443412988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.444936742 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444026864 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.448231344 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.448942843 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.447068425 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.454000563 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.446783343 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.44644578 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.451393022 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.465317841 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.446462511 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.44741717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.451599253 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.450465022 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.449900085 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.447687311 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.449301552 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.443089758 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.447995018 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.448885366 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447464735 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448085168 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.448602685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.449469731 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.451928453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.450964251 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.453865634 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.449135919 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.449486911 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.44926063 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.446847155 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.447705294 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.450419431 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.450433372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.468858284 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.453539664 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.447664805 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.448331119 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.4490546 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.44861235 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.448434951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.449410093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.452570444 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.446234417 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.448384648 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.448823814 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.451279788 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.447167915 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.448171838 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.450334303 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.446445994 seconds)
  done (took 106.6412505 seconds)
done (took 390.147078541 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.866991651 seconds)
  done (took 4.226672742 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.459519509 seconds)
  done (took 3.825253421 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.488858368 seconds)
  done (took 22.85567769 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.505602287 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.469489771 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.452671955 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.45538966 seconds)
  done (took 11.247325054 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.73407288 seconds)
  done (took 4.099646183 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.466722613 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.462358166 seconds)
  done (took 6.299638202 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.78711694 seconds)
  done (took 4.157041313 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.786129326 seconds)
  done (took 4.1560424 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.479321798 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.479065667 seconds)
  done (took 6.336354431 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.443869409 seconds)
  done (took 3.813292429 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.230170738 seconds)
  done (took 16.601106021 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.463814718 seconds)
  done (took 3.836722278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.501865227 seconds)
  done (took 3.871212385 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.012576848 seconds)
  done (took 6.382462347 seconds)
done (took 103.066861208 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.454234185 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.46039062 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.460635587 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.459399671 seconds)
  done (took 11.203230063 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.498919678 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.494536346 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.496584603 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.506496554 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.499553169 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.496868802 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.48774512 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.488188694 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.508411528 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.500050639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.498164904 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.499939667 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.49777518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.491123892 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.498260994 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.496617941 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.506468034 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.498160998 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.504428687 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.499436577 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.46383171 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.511200364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.499898993 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.462839937 seconds)
  done (took 37.276582697 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.983069986 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.536050761 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.618593503 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.515420789 seconds)
  done (took 8.024166453 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.522834491 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.532760084 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.543977399 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.581827495 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.605920483 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.541744342 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.489425924 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.486560569 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.471769499 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.532202494 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.59261205 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.525385344 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.612610981 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.462738697 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.651704249 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.464940118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.464249286 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.542038042 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.580942216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.596832516 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.465387531 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.525064599 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.544976233 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.527224092 seconds)
  done (took 38.237165403 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.464784713 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.477877106 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.462600807 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.471844942 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.463042518 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.464830392 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.464886146 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.468744015 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.46210559 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.463553494 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.462672835 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.476042593 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.464636142 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.46404407 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.470967955 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.465111739 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.470171066 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.464414409 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.465573433 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.471532889 seconds)
  done (took 30.712782267 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.459231147 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.457995069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.81093157 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.715091106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.459175307 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.459894857 seconds)
  done (took 14.736686727 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.537003168 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.680213883 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.471892849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.816308853 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.895328657 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.467516666 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.466118955 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.713524995 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.031415578 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01018653 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.523653253 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.539558291 seconds)
  done (took 21.527194972 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.461832538 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.465843236 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.465258828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.480508238 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.521140006 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.476133729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.473739722 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.458930948 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.526515296 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.531159191 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.476802453 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.522027493 seconds)
  done (took 23.235739475 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557046813 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461694381 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.460541134 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544704179 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461329081 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308122257 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.534869766 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170625122 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.483429838 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73527815 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472192347 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56155172 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.721329088 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476737017 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.46936768 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.44838562 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717955099 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966800327 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472371317 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477617915 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497439622 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464046421 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501290423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.680211701 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467624756 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462632675 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.725732173 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464153738 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746834729 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478279438 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476342338 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463045417 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738878271 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127838809 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581175121 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677680251 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482269046 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466570764 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.473327921 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.477560258 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469354089 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467972053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475755323 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46546954 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464084723 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479458578 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186970711 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.491631268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.464488159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.465552768 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724002556 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568173754 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.470655387 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.465998453 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48054687 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465618803 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.47028544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560602651 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048323711 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467032101 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502866486 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.473463952 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466158353 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498924774 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094458741 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.473616599 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.471359438 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4725643 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466454491 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479704115 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489934194 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46685322 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.491815518 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466668212 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175278063 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474796627 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493172776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03474158 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474510489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.472664369 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701183953 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466424395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467108132 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.464769168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466799114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198974182 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483963099 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.453315846 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488404437 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175718762 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.699301751 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493918133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49846709 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694437305 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.452984838 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469100827 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.471729263 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476624165 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48887806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179128847 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48756193 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.472486803 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727116536 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.681097453 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466664849 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.474754712 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964690433 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495768154 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.490025598 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467653808 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.703548612 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.051340188 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491524771 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469189299 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508866532 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469780333 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241839097 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482120489 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.574148997 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484446464 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74773255 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.285647859 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471075788 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536372983 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47153539 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471172322 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468728507 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493963296 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468081172 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.67831535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501643883 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487966917 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.470432633 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470731919 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.477881347 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474631855 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.472921688 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695249496 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483066634 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751266974 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472211823 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468653712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46954441 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.694795043 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.467493336 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.80796016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735967772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470330528 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505638203 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488396052 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489778218 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57503479 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493163768 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.471122973 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.75119311 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.475102844 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.475805138 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46968858 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495313699 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479056762 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.476870554 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474556958 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049851866 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457611992 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481035457 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360749964 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.485850519 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540367529 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478398847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687104136 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469479878 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494833823 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.47961897 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.468543016 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721171873 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48274563 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.47193115 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574633503 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.944406623 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069298937 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493384555 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.471596855 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.470144721 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.470160418 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472479536 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472214373 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471170221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686942563 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490030556 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490371199 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053535886 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480158188 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471675057 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.501682945 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485795546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.480704715 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473431564 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.469750657 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479407333 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492733381 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.491758123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618547578 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.48836027 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47264151 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.990153033 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481293204 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474448562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474763589 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509201231 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474405797 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300255875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.739273089 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49148013 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732128869 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496406442 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.497252465 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.473067861 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483455965 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491119995 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.49002195 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501085581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.486945176 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473770008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499142307 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0538504 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206085851 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016608606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481057937 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.500016882 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501413787 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19013793 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493365595 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475465681 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709006472 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192643255 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494813929 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950759954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.492459208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226892069 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740228036 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717061055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477130161 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.503720799 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741819001 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695317722 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509666971 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474948218 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497752494 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.461901468 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024476197 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497381987 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562126513 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190935293 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505820281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482244258 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.5251002 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.488513101 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888626006 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494602596 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475561223 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477892275 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480995178 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297297852 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486620365 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476299214 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101191558 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478051776 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.955632803 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4964005 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6907285 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.494536384 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.481840133 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.48141936 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.487792284 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.73868528 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73575671 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484111287 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486527445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023664217 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.359206362 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.484375866 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478421819 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246155327 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491356854 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768759836 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.497224494 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.481732864 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487616831 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477252367 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477286681 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.475323623 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48513591 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455586656 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983028871 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.504843787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481224052 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496489726 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484977587 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.737542017 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.493851278 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056929729 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718775111 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487306018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502995362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.482220527 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480051892 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.491619591 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480955117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479009866 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498898404 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.705227556 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478658779 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.467205262 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531569095 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.693608204 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481118881 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478346938 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729339882 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.48408713 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.499146004 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224741933 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520246758 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481234868 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488662375 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480995878 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502536165 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551742158 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696441356 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.499583609 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.493601336 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894165354 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499139185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488436158 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.495027363 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581084531 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481752355 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.488597079 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.257309672 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063380789 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21239193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071646192 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746290809 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48591964 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483841015 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478686889 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639511257 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474809355 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750504888 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474929956 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.482521614 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504207021 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480075202 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494218969 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699613669 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757658076 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480641005 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483717522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485387807 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.47956385 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491948611 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.692854016 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986692937 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058779331 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488182373 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493026195 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202768336 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774893453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47917712 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47966436 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481040327 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.499747128 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.513595804 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.488074748 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481831129 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626195326 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737745086 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156561021 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511970028 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.511338002 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.255981945 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48069709 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.745900986 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478400512 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.706964125 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065256502 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188998983 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751445949 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55215062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69673177 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.483770968 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645864077 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.486840655 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.488300574 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482359258 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482299024 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.479022973 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.494717372 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068015251 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759019511 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.488360146 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.4870602 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520435569 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.49149568 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.706685367 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22275125 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709209546 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492180602 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490203496 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484360399 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069779995 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751668585 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492979424 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4888674 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722781214 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483327911 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508919108 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.001230102 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.480524383 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052254251 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.465929395 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507719873 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495892895 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19317442 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07030401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.492032096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997599584 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492246386 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488969731 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767545127 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.490362148 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492368386 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766097251 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.488022618 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493535256 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709355325 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.069257347 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250943482 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.509702508 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504069014 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.493156082 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477882594 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504091961 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479736475 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479505342 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.900320527 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493219585 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474530042 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486770485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.470784842 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486848624 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.474731245 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470474686 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.477246124 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.460426918 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.467679531 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523725922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588364472 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040162228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507635125 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.160602238 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.815775813 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.742787513 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496620237 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.477545356 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.490530081 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487549676 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487085279 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486597551 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492028299 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063813335 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.50531571 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.504289125 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49081471 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.705395763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700470215 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485630782 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709906232 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505074319 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507230526 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.473221516 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486649768 seconds)
  done (took 1025.842887095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.501920483 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.511214377 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.510704986 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.551489101 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516170215 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537387272 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.537021658 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.549970981 seconds)
  done (took 21.616639591 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.492783334 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.504393417 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.489456127 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.506637109 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.491282976 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.960185356 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.513739498 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.499073459 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.506313465 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.494605676 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.498707511 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.47524043 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.5228484 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.490694562 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.480345237 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.506003776 seconds)
  done (took 34.833443927 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.436120726 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.626824086 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.318791998 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.515781776 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.487807239 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.501199897 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.701385245 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.506615998 seconds)
  done (took 27.496480508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.501434545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.501254611 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.50034942 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.500213849 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.500822701 seconds)
  done (took 8.90537965 seconds)
done (took 1305.017851002 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.494465386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.497078578 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.494689529 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.49598211 seconds)
  done (took 7.384165398 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.476326848 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.478833553 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.478886971 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.489212625 seconds)
  done (took 10.324661625 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.18668764 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161741087 seconds)
  done (took 5.750463534 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.991990944 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.986976499 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.988766776 seconds)
  done (took 7.371042232 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.782744237 seconds)
  done (took 3.18560487 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.39783779 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.356075131 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.185785754 seconds)
  done (took 8.343009231 seconds)
done (took 43.760843195 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.49249306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.732806223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.645423556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.49392542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.65035514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.646527471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.295491543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.490492591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.511670506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.506341299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.492637804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.650914516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.211266246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.741111423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.211039466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.739017532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.652933601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.494071435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.496568565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.499540017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.29341232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.490729231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.506834354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.490668803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.653287335 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.636778378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.5017515 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.740312961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.492548826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.489919112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.653880364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.492054512 seconds)
  done (took 86.499486848 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.491238993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.511538284 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.507112283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.50093904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.494392136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.506077139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.492051052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.498173124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502302461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.494025622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.498627756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503977837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.494586522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.491657764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512316651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.491002237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.510601665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.491351543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509706425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.492086313 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.493499058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.492277484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.50766681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.491993458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.498796302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.510460919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.512395162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.493840663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.508584334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.493911944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.496734123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.511076514 seconds)
  done (took 81.409139267 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.494236153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.499067628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.493934419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506451957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.497120515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.496227538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.493896766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.504505724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.496716258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.495652896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.507042577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.493271543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.492422326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.493564967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.511629468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.493437394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.493991044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501587196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.494766272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.494264363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.513580713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.495671417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.513067742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.494227957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.494230585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.494912732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.499550619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.493303891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.507844538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.501472637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.494757804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.495088558 seconds)
  done (took 81.356840004 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.77849962 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.501215055 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.503127203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.495353804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.503255649 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.501306076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.495314456 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.778613026 seconds)
  done (took 15.962578088 seconds)
done (took 266.63054299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.497604864 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.496454343 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.702237151 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.526742421 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.497008009 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.525840847 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.525146277 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.720744187 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.463078046 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.73904221 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52821515 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.522227439 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.502464084 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.520646117 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.772014947 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.649796217 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.409910553 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.497212527 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.839618596 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.518412977 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.76708538 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.501170428 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.781871889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.44292292 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.520395585 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.495990913 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.51145815 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.395024755 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.539726116 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.840478723 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.508196595 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.483991583 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.582506615 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.603942548 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.713374054 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.655390148 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.495279646 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.581991524 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.72054982 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.509583814 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.497214395 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.280809201 seconds)
  done (took 88.291418748 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.503588411 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.622262201 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.505508247 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.5036207 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.505075572 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.625509597 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.598416185 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.505736824 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.505090632 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.504717423 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.503230866 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.50397456 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.503653863 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.505841564 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.504823222 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.505384774 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.503522389 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.506726862 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.508296548 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.551770613 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.627675461 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.529473732 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.49944598 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.505784154 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.609484035 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.645843718 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.50634419 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.499960552 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.548805524 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.506080609 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.513186753 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.552556325 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.507505157 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.5086567 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.624433037 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.610088183 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.508998413 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.506472304 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.62409545 seconds)
  done (took 61.321679368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.508891325 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.754711804 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.927621799 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.520955764 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.509535655 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.513692995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.585840931 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.514457453 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.51334542 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.512752711 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.660560013 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.517736525 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.542408544 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.955056368 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.517750684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.510518046 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.509546002 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.5096016 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.761640496 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.519929273 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.606014691 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.515367803 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.587038986 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.527178708 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.533946398 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.51083296 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.516831113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.08021539 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.519095604 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.666223716 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.272026146 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.588305553 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.046013411 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.942476481 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.274441398 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.517727853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.511101252 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.670659344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.514198424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.511610404 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.587133249 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.512826745 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.938269905 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.16275458 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.530289469 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.511363702 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.110876522 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.673655694 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.749447258 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.525184277 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963771011 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.515539505 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.51222028 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.514729896 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.747890501 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.519038276 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.510899613 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.113320974 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.532444049 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.587956854 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.511223002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.510960594 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.772947157 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.513604664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.758300312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.513034443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.519564501 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.533234156 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.942132158 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.515385678 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.173444126 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.528580303 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.512826994 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.665508943 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.760669989 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.138954072 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.533002481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.764616713 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.05869305 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.586804211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.521577062 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.074860638 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.591818968 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.517899212 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.515373844 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.514709876 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.513608974 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.618459803 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.587588694 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.127337614 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.172751527 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.137043525 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.609241509 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.521880176 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.513997816 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.118502065 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.529591678 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.513487526 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.939621994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.174163406 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.532295036 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.521424401 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.186384292 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.53368543 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.593186833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.521219166 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.950919995 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.521676527 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.560688551 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.514559291 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.52093169 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.536922153 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.589741266 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.521701556 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.51356526 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.166434599 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.689019077 seconds)
  done (took 197.615356903 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.509284521 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.52351149 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.517073943 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.507872894 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.506646705 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.517203772 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.506925565 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.507713568 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.513816392 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.506991398 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.507262244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.507363401 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.507977754 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.508084943 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.521041327 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.516174731 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.508261402 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.507510311 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.507529652 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.508508595 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.508474406 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.513148512 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.5059982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.508650282 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.509642896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.506717058 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.510120623 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.512195871 seconds)
  done (took 67.710152175 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.514583192 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.060646568 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.517074172 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.644184169 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.53913895 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.515467955 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.642183489 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.572165998 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.522549885 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.513825281 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.514854353 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.806846199 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.51847064 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.013132552 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.703710484 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.649534273 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.017650882 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.539672663 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.512675976 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.516771025 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.647156437 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.526651117 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.811380069 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071701017 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.522073096 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06858926 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.512912921 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.518023874 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.517908462 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.067983143 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.520991036 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.811306652 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.598943442 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.575530847 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.077945837 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020396005 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.033204564 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.661289064 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.524660373 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.516906223 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.515016747 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.506933748 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070557943 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.524548502 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.520100274 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.066742542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.541631311 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.518823482 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.524259839 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.51423502 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.575630146 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.583171096 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.82132698 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.517132601 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.598895685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.530696156 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.645458322 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.870998646 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.522364224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.016596935 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.513521678 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.074708337 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.543942059 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.508473204 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.519418201 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.524476175 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.662973848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.646258407 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.026344343 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.542477436 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020204946 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.685855265 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.517261887 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.518819023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.519779387 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.075396749 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.0279148 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.685705727 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.650139567 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.710590595 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.517064936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.520232216 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.512411896 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.593428927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.519769372 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.075981167 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.046433193 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.541719225 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.520517435 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.52130346 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.52173818 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.692661263 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075889558 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.603789256 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.023300291 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.840086075 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.823068979 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.528713458 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.580169039 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.544899886 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.515616873 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.544825976 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.57722313 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.932343209 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.821273732 seconds)
  done (took 179.816950456 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.756146544 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.53181252 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.613712681 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.681588241 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.122265159 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.11614516 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.559204497 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.647000195 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.632292641 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.784022352 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.516442286 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.610484373 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.73328837 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.598625554 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.230386252 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.589534685 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.62091438 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.673538346 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.670684469 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.517730948 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.157949074 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.822176842 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.704548428 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.584178819 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.625214699 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.26849882 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.091724935 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.078240211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.689621151 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.524279056 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.038034517 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.516196708 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.453476658 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.172366805 seconds)
  done (took 69.358048055 seconds)
done (took 665.521294606 seconds)
SAVING RESULT...
DONE!
