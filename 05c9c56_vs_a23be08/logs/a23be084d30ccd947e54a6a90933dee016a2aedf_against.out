cset: moving following pidspec: 810
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.97302519 seconds)
loading group "string"... done (took 0.548653972 seconds)
loading group "linalg"... done (took 8.868161182 seconds)
loading group "parallel"... done (took 0.168376881 seconds)
loading group "find"... done (took 1.424196151 seconds)
loading group "tuple"... done (took 2.079447504 seconds)
loading group "dates"... done (took 1.369388916 seconds)
loading group "micro"... done (took 0.217559237 seconds)
loading group "io"... done (took 0.62619172 seconds)
loading group "scalar"... done (took 43.562726898 seconds)
loading group "sparse"... done (took 13.385109857 seconds)
loading group "broadcast"... done (took 1.084368226 seconds)
loading group "union"... done (took 14.774190774 seconds)
loading group "simd"... done (took 5.116878352 seconds)
loading group "random"... done (took 10.292549509 seconds)
loading group "problem"... done (took 2.176961 seconds)
loading group "array"... done (took 26.009854576 seconds)
loading group "misc"... done (took 1.10324954 seconds)
loading group "sort"... done (took 3.738704933 seconds)
loading group "collection"... done (took 22.182684242 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.626832653 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119530922 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.167159618 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.194301242 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193569737 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157145204 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163487141 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.55818011 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968121997 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211348162 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143517027 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.548883083 seconds)
done (took 5.794384785 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.239917611 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.435752348 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112661674 seconds)
  done (took 1.219015302 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094234187 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17813088 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094569979 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110417392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111044765 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109017173 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094461271 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110630947 seconds)
  done (took 1.481102072 seconds)
done (took 3.715351146 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.484896481 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.850494512 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.491211096 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128945484 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158904535 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148945264 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320174204 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.163765963 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121915227 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115316822 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170626695 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.350051525 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.488606349 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.943094173 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096458941 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127775351 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.086486509 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700628478 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079743486 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13417346 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.522573599 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114059908 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11811905 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140060422 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19033022 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130949202 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17704705 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109590823 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662720707 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101150644 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186370753 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098548368 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162725179 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.249571861 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.094979348 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092373396 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67514914 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190102339 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113744762 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101815713 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671275973 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082689886 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195100065 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.11566574 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109917611 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187842043 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114262697 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078003688 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101862454 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105954306 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160523992 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.474416801 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106475397 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.144830826 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109019325 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683298736 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098739277 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156636205 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141037738 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.100000751 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099662711 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107392122 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157110322 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110655511 seconds)
  done (took 19.579085507 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117001988 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14041212 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094004681 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139816556 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138715176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09677455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083675321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094631714 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124212867 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186686311 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1213463 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142816014 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091218356 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080124779 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117321563 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248657226 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107089946 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124622898 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083432457 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108472139 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142607002 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096421415 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109643248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110161759 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168563445 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20518476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108017131 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123367171 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093139099 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098243373 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14225143 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.162880696 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075871541 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094213352 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182752343 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119820173 seconds)
  done (took 5.161444855 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199453323 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115572018 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191695385 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177988285 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146680382 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166871989 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119279983 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26681671 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.262518294 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181655274 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.167069066 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111941336 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112514354 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096011018 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081301568 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095329106 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.693286927 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.136915281 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165053223 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12592519 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103866431 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081095636 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375735063 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102931824 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096318682 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085470826 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089038686 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176701106 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084583314 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.315906598 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098289181 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109684856 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131694182 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193199722 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131608742 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122952056 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10241356 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080068505 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.233839956 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107705269 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078509162 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124683277 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132764095 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117259335 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102612301 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109889952 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223595892 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09974148 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118487809 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.072035731 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.20054733 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098439601 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100013623 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.350908355 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116527127 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085862553 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099707584 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079421842 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291538832 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132352649 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100470387 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079595849 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104997069 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079913675 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405396161 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108578823 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.894690092 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097908891 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160864173 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102329115 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108515799 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082571969 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10383508 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084784414 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118936288 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081187913 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096583036 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077825857 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096766634 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077851334 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101048415 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112849318 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084235481 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095716681 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146595486 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118105785 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119131375 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11180928 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102611957 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08072224 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132477645 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102045243 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084648136 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.149912738 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106554933 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117359618 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085170904 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142706865 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099402289 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183501656 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082063197 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126388753 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103123845 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112131632 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121913237 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099585928 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085104544 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098005664 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080998246 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164026833 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082344203 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080049849 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104201102 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112254453 seconds)
  done (took 23.782858279 seconds)
done (took 49.19567956 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.462162986 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095873009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113467003 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113418143 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.115294485 seconds)
  done (took 1.646551991 seconds)
done (took 2.365811135 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.335332453 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195294105 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102002763 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195600379 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088052817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201378443 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166065469 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117512322 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196661357 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099928796 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176122087 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100140855 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087539595 seconds)
  done (took 2.810631452 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094180408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118426363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08248673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112625856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07719278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111218348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093979779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.141038527 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091767151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101417037 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075365139 seconds)
  done (took 1.817808093 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091117371 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112369404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081472273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107881568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077539234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090508523 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109379642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117600006 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092124371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104979057 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077665164 seconds)
  done (took 1.782999185 seconds)
done (took 7.123300244 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.049292829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.420678111 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119003391 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165462553 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.339340355 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210954923 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.52150064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131644039 seconds)
  done (took 11.860883773 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.112499397 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115816897 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07894287 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098407246 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082516962 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099646059 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081229524 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095620722 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.080948848 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095541954 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079923352 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098305349 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080052732 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09811367 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081442631 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098953499 seconds)
  done (took 2.256404693 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117249633 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115728769 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102444984 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107438192 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084154648 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101018044 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087280943 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101589319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083118177 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099759768 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105686299 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089928726 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104283292 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08243247 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102716637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107292331 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083759396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102808633 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08660908 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102584117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090245253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099931198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103803637 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089945098 seconds)
  done (took 3.178438794 seconds)
done (took 18.014401148 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170152728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084897853 seconds)
  done (took 0.976265368 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101864555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118439104 seconds)
  done (took 0.947579935 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10667211 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096522225 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134941955 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114752708 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083077994 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096479144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113909421 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097871278 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080869918 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097590607 seconds)
  done (took 1.750574458 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084798333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101193067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089650794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118625117 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109499353 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083535872 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101944077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085249296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103025866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079771854 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104784044 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116333815 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087132977 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118593309 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086399026 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103356303 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106951457 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085884771 seconds)
  done (took 2.497479452 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08066584 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082012564 seconds)
  done (took 0.895772807 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082966347 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095670104 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083081913 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099356978 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079669802 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095204877 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079935803 seconds)
  done (took 1.345298123 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505052495 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.255633615 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333835907 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098596335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150998544 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369027327 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135816749 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112901392 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112254821 seconds)
  done (took 2.844665879 seconds)
done (took 11.986234864 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090835819 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188226152 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.658657713 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117542881 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078887198 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158678695 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.26188851 seconds)
done (took 2.284273539 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352368705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123622529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088336484 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079457493 seconds)
  done (took 1.372563138 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079503476 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102192248 seconds)
  done (took 0.916883739 seconds)
done (took 3.028870945 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078301717 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078027583 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114321498 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094971095 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078236681 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094494716 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076448698 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078719252 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095861721 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078810278 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095141483 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078066369 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094337956 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076360707 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075320211 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09277772 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078098902 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092800918 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076159239 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093249362 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075919976 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094617113 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076529324 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075608922 seconds)
  done (took 2.829015135 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099973791 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096767442 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084977497 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10173969 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083512096 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10217736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101177375 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079945416 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102286448 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081220011 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099921847 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084404725 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097599878 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083671453 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098312247 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100295655 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085672374 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096629474 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081983616 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10051691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084724393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096385839 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083484081 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101105254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100576842 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08374879 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098241106 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079990127 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101391392 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084403613 seconds)
  done (took 3.516012615 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087546906 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075838988 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094374889 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087997096 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093479984 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080720434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093969512 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077942416 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094364423 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076432378 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096465854 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077000915 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092962507 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078030501 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078087756 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100426239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112522002 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077924615 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076502264 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095348046 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082327906 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093490868 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079180257 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093476578 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076282833 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093813268 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077196682 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076674229 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094368494 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076348659 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098823983 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083678469 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093190335 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090285098 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100303411 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077094101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102312295 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07662435 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094589694 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07599894 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09253158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076393159 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076861445 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104774196 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080195937 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093970209 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077785478 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094712452 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077516536 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097430317 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076882472 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093909084 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079707548 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095413135 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083507732 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093179937 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079996649 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07666607 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095302209 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077160766 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094003222 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077187888 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101465933 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077872613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117140164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088177359 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094240017 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078848502 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097964488 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085119009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0955272 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096547797 seconds)
  done (took 7.053446164 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083155306 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104931542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079773777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095808229 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076482175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077622955 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101355819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094030161 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080053278 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113577536 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077532514 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095963245 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079810497 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097729577 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077994524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09621319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087999927 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091903928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078037218 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097307605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078059407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100478854 seconds)
  done (took 2.71125361 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223155832 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104166738 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143305686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1149896 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096991425 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111726334 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101131942 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086176213 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101309889 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087649924 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104505381 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084772022 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115130731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104282294 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087430452 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105636966 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101531903 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089013905 seconds)
  done (took 2.707921352 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092996521 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09857295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107450522 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097331179 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081328965 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100202069 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086784878 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113332225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099615701 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080952376 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107796176 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083657893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099641795 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08094462 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099855483 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080461588 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100052473 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080492612 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10760769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103729475 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087040469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10813958 seconds)
  done (took 2.846147809 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097339775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099436921 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110861986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100933103 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075942679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096527272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088030853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097008455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106230874 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082160745 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097971887 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079780003 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104412566 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080879997 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104234958 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081191233 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100089895 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08076783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100113904 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07646997 seconds)
  done (took 2.60934541 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124825321 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11513526 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097585822 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125290639 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115225103 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09704041 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125722528 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114269029 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096955214 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12830623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097509252 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11476601 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125721284 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104103633 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114856817 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126400603 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107580829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125777628 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114313947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09733932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127247428 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11461043 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107987863 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114389501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099800985 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113780697 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114421071 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104391423 seconds)
  done (took 3.917525722 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080411249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080194208 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095197835 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077404454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094880208 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077778984 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095465056 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077987711 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07972329 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095182324 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08029265 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097652075 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080114405 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097799669 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080477649 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097302466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079894208 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077651265 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095139173 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078608076 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097338476 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080335802 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097404663 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077858291 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09524474 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081074455 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077686143 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095044067 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08004108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095025661 seconds)
  done (took 3.351124642 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089202506 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103978902 seconds)
  done (took 0.946633136 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078141796 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115865474 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078074722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101217588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086997235 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099355573 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090186947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104014228 seconds)
  done (took 1.508045921 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105769485 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118766426 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087404855 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110355047 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100266318 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11755867 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166150082 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086897553 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105956192 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082452598 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117828606 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08111674 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109004512 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104333763 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090347612 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11338205 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078996583 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108901482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0891283 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100743815 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087264682 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115583351 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093220992 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106535111 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083643082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111132487 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112650518 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093646163 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104539222 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093162737 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105848218 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075191042 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103486459 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087069512 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098142994 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.100035115 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116273336 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086686727 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108689784 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10502505 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091490884 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094076996 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092343002 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106078057 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095187625 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104673448 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08729914 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094909874 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082868595 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103346856 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076880613 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103247072 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076663182 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110077478 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091179487 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11778063 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084098537 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104004216 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085954312 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102618138 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089074388 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104010251 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109478489 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085273614 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109025454 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091686996 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108168611 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078229984 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092735637 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080170815 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109151166 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107069878 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111517483 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087406165 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105500182 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079478582 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105102713 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087786784 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108404969 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110622748 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086762901 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108019127 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092640347 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103297604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085751237 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107068302 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084661583 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102099583 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082339574 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120457189 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083957151 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097050048 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083246018 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110965423 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086654578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103613124 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083507524 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109212566 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075206932 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104360777 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087355625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107032064 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112384315 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087380299 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105959644 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09109464 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111305526 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086714378 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103375573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078005323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105735546 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084682775 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108240856 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075759249 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105039142 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08677573 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105302166 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093802034 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101293951 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086846071 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110525593 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093326909 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102143651 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07954154 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104604028 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086731154 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109617525 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093444754 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103092287 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077069376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095319496 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091241022 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104250001 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088802409 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10636988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104726544 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077035846 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080526551 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113213213 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111274009 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085635942 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106585734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092027259 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106920876 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085244398 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110293016 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085449805 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100296621 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092252665 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104797903 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077399726 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109873077 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086301681 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103261977 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087501877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109877516 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086556977 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106361528 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084292284 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105457062 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088566201 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101283512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087480991 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102727722 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112702007 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087179608 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095295326 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079655244 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088841014 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101790537 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085850447 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101660204 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088005408 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107465045 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080431222 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103695656 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087458007 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117737811 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11416155 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08911108 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108402793 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094616033 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104732113 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090084696 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104443899 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089692956 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105757063 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092495831 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10796453 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089212031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105151636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080193039 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10793593 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09376655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101337121 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081290966 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100314261 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087682205 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111793164 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087422617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10618342 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084968207 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107158678 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093030388 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105188621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086901659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100636575 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087874871 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110656157 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088770583 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107768726 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095000902 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107038977 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07877286 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110342963 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085169363 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110353461 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077880683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102224008 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084115738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108158007 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086148729 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104909515 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077538595 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111782874 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093323295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106780317 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083613183 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10644433 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114766544 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086163372 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109175969 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089002455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108893717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101268666 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102502371 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087254823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113162552 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087242733 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09566898 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089923888 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104877245 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082041865 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104347127 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085450748 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106490178 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089620647 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108041528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077131343 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104482177 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085412692 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101683371 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079033005 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111286555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088832692 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105611421 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114754146 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089362006 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106728326 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089659563 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10573154 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089038668 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107068547 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091874374 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106250293 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085872713 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100898981 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088268919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101356209 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081329954 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104008579 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08782483 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10644591 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089446788 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104246074 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093404345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105816706 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088652183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124264679 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102751342 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08332489 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107752442 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09001029 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104754172 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087555031 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096877878 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093676451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105406949 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093825273 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104364038 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080091897 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106616249 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08713777 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106717526 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089530314 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106609011 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086202896 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10537092 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088083394 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114218081 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084547166 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11277813 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08922361 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108434662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106700592 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.0888523 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104091156 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083988868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105704933 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089870461 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106416029 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087081044 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107729027 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088496804 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105057403 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085958939 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107302404 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08856329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108269065 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078400048 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101818694 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084367807 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105747655 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092304642 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106534229 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086015908 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104712658 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089780341 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104704612 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080439193 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110506317 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090853456 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107421633 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098358514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102435582 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089162001 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116913089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0779445 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103997276 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081857005 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102096439 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093724504 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107587258 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094330696 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10785394 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084098775 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099330703 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089781601 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104585777 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078350159 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100279609 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092054783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104231732 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086210823 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107204714 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09121275 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108170665 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091718769 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105166203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08826957 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107063651 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081065658 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102600048 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084027818 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107074317 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090055118 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102887941 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080989013 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105131379 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088212381 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106208717 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087512607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104986173 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094396632 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106127181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0883526 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111033218 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077986268 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106957106 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087968368 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106375599 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084653417 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107819982 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08986757 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108812236 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093374854 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106754624 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091822969 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106493468 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081713264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106072431 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088208457 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106777869 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08394813 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108918879 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094643068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101114795 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088980483 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107747985 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085432815 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108022019 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089660936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107854564 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092182983 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107404434 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08851363 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110938206 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087331924 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10855159 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108713611 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088323271 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111047834 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084403324 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113915848 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089782087 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108135067 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087108279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103398304 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08801142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106103984 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08718125 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112290915 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089073727 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102668899 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085039469 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101485628 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088233021 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111164306 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095289685 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10708346 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090069208 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098595827 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081342814 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108802505 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085604634 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106293131 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091235611 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11254749 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088586963 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104156545 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087228898 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112640737 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092833709 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110624388 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102960203 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091416086 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108790224 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089344851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10436959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088319727 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108254504 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091019618 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106325057 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084746874 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116243991 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094825201 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109285132 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087308807 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110515223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088044898 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09868663 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089696667 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107414673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091898416 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108519572 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087975361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118436418 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101684345 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088448939 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111815692 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087852815 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112789102 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080021528 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108156067 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090471886 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10979685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080820817 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102584739 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085642391 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107846571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085250267 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097653473 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09917319 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112693712 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089301804 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105596182 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086976517 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09899888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080075693 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103080321 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090670923 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106304277 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097255492 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103311062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085307011 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098449968 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089375206 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108557635 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092491875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100217056 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080215721 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103304083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089921961 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114667546 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087566439 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107651841 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090666859 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107717955 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082865552 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112452127 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081372463 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109376853 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10061766 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108972324 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091247992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112282289 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113412289 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090723176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099196399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091016631 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107623991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091457482 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108909318 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091552452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123024827 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089328219 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104530525 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088260206 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107649746 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085368531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114784924 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090179469 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11014701 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091008964 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10683111 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091356724 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115384293 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109578428 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090098063 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10814804 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088086314 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10771374 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08737515 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106847211 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091884833 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109388683 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089446557 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111106382 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086119295 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119189934 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097366569 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110468294 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081788581 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104156745 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086301644 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100175683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091200185 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101880837 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087763572 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104756702 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08843707 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109391109 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092192176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10753082 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091556636 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106839914 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079548944 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111925727 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089953697 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110436977 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083688794 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107378974 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090430459 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112422164 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094555934 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106021744 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089376311 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107351719 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092054569 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099564267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092746824 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107001064 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087999776 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104689267 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089415428 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110195578 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091865072 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109967797 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092372215 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108996851 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093810069 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111928594 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082767293 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10195816 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092859647 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102472243 seconds)
  done (took 59.014153238 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152014382 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087923534 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099645753 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081006461 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126573758 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081821657 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099003856 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082250293 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10058429 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095778135 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100987973 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080725042 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123115042 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128206913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125805177 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114941149 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081050621 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100422404 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080430572 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099928069 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102565628 seconds)
  done (took 2.948024479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105935248 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118475713 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116804932 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102621475 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112012159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117266661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09742968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119436722 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12143879 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11221095 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10249902 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118719975 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112096441 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093700457 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112961015 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114889713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102417396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110699665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118447515 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097745076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115655273 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116347044 seconds)
  done (took 3.245101031 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093755826 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087733612 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113664608 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081621859 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107679362 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082188883 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11302588 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084934753 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111886216 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089355726 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105628442 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089617307 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112694358 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082833894 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10577667 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085993787 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112172686 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089749731 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109162426 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082879249 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128493129 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102067164 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.084777798 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086130723 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118413321 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108829662 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.090031813 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088183137 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105606697 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088744666 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104046572 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091630992 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111725354 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086303168 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105643758 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08811321 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108672198 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083503066 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105104746 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093222103 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103222387 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.09038109 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115200498 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085741399 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104229734 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090677353 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108319464 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083567717 seconds)
  done (took 5.506789735 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123697695 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160674864 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094300605 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156091392 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129175437 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118215835 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093303578 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149771553 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10727809 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088323292 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126840478 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124634884 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090476171 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117427581 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093240118 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11131816 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112510266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09399939 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119358506 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089625523 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117670385 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11209252 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104400166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120695957 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113640751 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090180974 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108143359 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.098242715 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12013662 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115876011 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095897218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119606869 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128776794 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115999749 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092989834 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110944696 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106689541 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110253545 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11101478 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087990192 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11148194 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.099262532 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113000441 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125777815 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091573886 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111030123 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092458837 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110686967 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126938823 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096203754 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119004105 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123742454 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09567468 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109942877 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095613742 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127787716 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109746278 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087966513 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112941867 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120924951 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089619867 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118825632 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128920716 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.095318886 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117758614 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123516926 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092203374 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112827828 seconds)
  done (took 8.497723575 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09709508 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133629252 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126560766 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106640719 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115856749 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114531296 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096560892 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114520741 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095335921 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122236534 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11439264 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165662542 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08948987 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119924063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095058173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115476731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114270018 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095375797 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11446489 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095380836 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115648709 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126430872 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095645312 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126587379 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127613349 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10812408 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096301118 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115086094 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106654242 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115523462 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127817036 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114517641 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095593825 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124793208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129580405 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095616255 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104637035 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095177862 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115097046 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114601796 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088459815 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125479964 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114432384 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089271586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114395094 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096124454 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12588801 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128247539 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119337414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102778984 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114751464 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125612179 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095503632 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114744859 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125226667 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134381054 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106799445 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126270724 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114786716 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106645669 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126219369 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134172937 seconds)
  done (took 7.838343496 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086757411 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085740076 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104062653 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084274091 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106175313 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0838551 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105644387 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08671933 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085047082 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105969501 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084840968 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104044766 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084042158 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105657422 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084586745 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102576579 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084645755 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083028627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106028231 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083772364 seconds)
  done (took 2.674767392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095652343 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126574186 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08745757 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114211094 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08891468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114420782 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107610922 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089559373 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106382426 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090672035 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11878112 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10039824 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108607173 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113351434 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099858337 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113870258 seconds)
  done (took 2.49707357 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108012401 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119836405 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.132970153 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093243458 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104625828 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094956892 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107548541 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083048661 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102695724 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095364887 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113263365 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097895336 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10699698 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085849004 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106859946 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093275632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102651423 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091810134 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106596887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112308936 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112847372 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109509593 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088379924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108453893 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09078567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114318263 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094569435 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104030405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085831039 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106530793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089862172 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115563144 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083551827 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112955751 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084989643 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104725582 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086266096 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108262912 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091820158 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107191704 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084891033 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109922783 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086074633 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108779902 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082004846 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109038828 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081794489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114184747 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107586403 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091075604 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106316422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096322743 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113299747 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099382542 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116909226 seconds)
  done (took 6.388928408 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103619903 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11078765 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092653595 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103981952 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090838161 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115124494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091258638 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109178655 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088872626 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104564927 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089068576 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110328911 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089763065 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1108715 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088900314 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110516706 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081931469 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107686743 seconds)
  done (took 2.623442767 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093524111 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106439693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094707258 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106676095 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087899543 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10876458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08398667 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084438604 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105612796 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086429966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107336909 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089465779 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104715429 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089456779 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107610295 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086407911 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10823077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085352062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106773952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083249689 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108705243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085744427 seconds)
  done (took 2.946296282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1057981 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139832094 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101506853 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150575698 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112069355 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091068844 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121616359 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091193926 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.130181342 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109746204 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091327208 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.10934298 seconds)
  done (took 2.182654741 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114803537 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146458528 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084613563 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11085304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120992073 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09421051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112044635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093044963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125364004 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125874406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092936779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126214745 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124884736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12343643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100112213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122690679 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112575081 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09346507 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10860898 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135476821 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093678088 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125954764 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112911034 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094018871 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112410095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124294289 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105660192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126640989 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11310019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105173145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122234413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113318303 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104743654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127527519 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110339263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125677251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093792961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135412794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121283194 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104474505 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111690169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120171091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105808455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121335062 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125596082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092866522 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1209339 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113280665 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093556833 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142221679 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121329435 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124228028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101128225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127178705 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125618673 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142077341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12742386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124065605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101325107 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126749749 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123518354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121252585 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104584511 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127124811 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121194317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125027586 seconds)
  done (took 8.459902619 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129555864 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107227839 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092295287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129425928 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126376281 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112964148 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09326862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113198709 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093428064 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111117367 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161791444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113091348 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105405852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124921999 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113401356 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094925855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113683479 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125131524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090329439 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140986188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114151282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125130042 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10544103 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125068338 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126973198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121116217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093759992 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113729911 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093365456 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113774863 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120141413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094186486 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125408838 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106547238 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104714126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113706669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093366041 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12138694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113916953 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100885216 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126201958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135604138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113987789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093930923 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127374198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113278447 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093931919 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109988273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092931006 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110244592 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126373379 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127298027 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107937796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126671077 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11392651 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094039373 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114200217 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113599467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094532478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121709167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125301707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094606627 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142567149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113641784 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094439535 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126150722 seconds)
  done (took 8.307123642 seconds)
done (took 157.859125948 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.10713361 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145708906 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103496897 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172284914 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088619546 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143821358 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121510981 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124888101 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088383732 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108466057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088655272 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112360014 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154896981 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108858256 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08928803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11248047 seconds)
  done (took 2.702896834 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18397542 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288113606 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107332075 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11436393 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09550968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111962457 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.0927677 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115853084 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089904997 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12286512 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111393667 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091827265 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121933402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091610461 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11029151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091197076 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122355155 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091002867 seconds)
  done (took 2.993531095 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115299104 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152906298 seconds)
  done (took 1.112898245 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126379883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187943547 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309035857 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166306174 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118331814 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132119224 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166119117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128991997 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197826649 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131177433 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110661334 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11671415 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140741202 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101173672 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119276584 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095760288 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144268436 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117913308 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097411512 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116771375 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11720426 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11700835 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120811237 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099144692 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186161302 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131589324 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117124173 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097094938 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118006625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097342251 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121706729 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130402184 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110513619 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193699962 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100954843 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189146964 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103021998 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117353795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116979673 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095302827 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120278985 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09970628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133361975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115744759 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097258302 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12412411 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096725277 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117183317 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123939694 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105423557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12396519 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.355502953 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171185444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125333297 seconds)
  done (took 8.054739805 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.834048488 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157935187 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115593401 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.932425165 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147061082 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129435786 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.825303427 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115568511 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268585061 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.826415754 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133475634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128639753 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234676752 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260535844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154599446 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342311814 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.710470021 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129792226 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122785125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158355323 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122304265 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143483481 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112535116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.443729926 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116618523 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113313599 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101085141 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126560687 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168764139 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114181783 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097650317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207906626 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.273648973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186424565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116225333 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091401113 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113611522 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175041976 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273667103 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222662243 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179129278 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089908437 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112913719 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106507994 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13551941 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110557542 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172912246 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180321182 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202399616 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098051272 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127131201 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102227644 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12612605 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169754431 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112465012 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340903226 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346192912 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093254844 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123596704 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112039365 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271559131 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115487022 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229926938 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120709494 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221342367 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092203752 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794409787 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174174347 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114620241 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123656472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102094525 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120439556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126078697 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152028223 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390804997 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130045544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118309498 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092414961 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254088988 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093971536 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114404255 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172808492 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116213585 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102627045 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131412335 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127726416 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179057648 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258612519 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129607276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121759411 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099748445 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127906138 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094631705 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.241073972 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202395759 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186975043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.221650853 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128675475 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17379093 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17394786 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127425342 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178891135 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12327268 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132790962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107454225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220168587 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149297284 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.115288276 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099788971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123110708 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151977787 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097231309 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122442913 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176640423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.49250811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.176589938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090478786 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118585246 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101644406 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190730007 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101345873 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267610061 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12371924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17675573 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100565639 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112837323 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123423832 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172654916 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12910078 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102829174 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128171127 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122390964 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258410551 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226269106 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10960088 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242769409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184626146 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102730805 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203937419 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101677971 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199688728 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102746917 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127957968 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116014782 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765578196 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128357586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122525634 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099449842 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203242745 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115868355 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095035586 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114877239 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091182191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785842578 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096287244 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112980786 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094639951 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124449188 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102101453 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122187748 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125443504 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170602369 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239992019 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10570186 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123363763 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114680542 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170271907 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095323727 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115401605 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093541189 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115667299 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103971832 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119708164 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095048952 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.203450695 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166972803 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227126388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532118156 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11579269 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092790513 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23666321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114635604 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310966187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101133792 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233511335 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175450933 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11252479 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342918143 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178354045 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203900328 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095930505 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.202516267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091080436 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122095838 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168935645 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114791668 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101638311 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165821493 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133625634 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130124113 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.159548785 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093299501 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237321283 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112494032 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177830149 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118041907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105417051 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315413768 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115469881 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114460908 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193032901 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097900385 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116218773 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.675472446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115914451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104339295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125111276 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228873961 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174340137 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123334709 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123194709 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107641334 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170590502 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.240577182 seconds)
  done (took 45.403939736 seconds)
done (took 61.105406264 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313099312 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27506046 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.313745075 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204337164 seconds)
  done (took 2.049706259 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185975959 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160488775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131397518 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115267007 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161003809 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091103668 seconds)
  done (took 1.712553495 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495377502 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.385115966 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352706873 seconds)
  done (took 2.104624138 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270333786 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.289755295 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367509452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417655603 seconds)
  done (took 2.321415696 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21365778 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131455275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104834834 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145212866 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.179831471 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.1832615 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148456668 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159043482 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135674569 seconds)
  done (took 2.317798159 seconds)
done (took 11.376551308 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.164735148 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.234315077 seconds)
    (3/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.259465854 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.174163046 seconds)
    (5/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.277929661 seconds)
    (6/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.243111018 seconds)
    (7/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.21595606 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.158007219 seconds)
    (9/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.243150383 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225640305 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.129044884 seconds)
    (12/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206768755 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096443902 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.19217162 seconds)
    (15/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.212674361 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.248611762 seconds)
    (17/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.228417081 seconds)
    (18/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.181130951 seconds)
    (19/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101872291 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145208411 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12194164 seconds)
    (22/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.144994631 seconds)
    (23/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.175117916 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.147375489 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07998264 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.111253681 seconds)
    (27/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149752572 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.208197 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120192115 seconds)
    (30/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132492988 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.107592859 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127671043 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113254749 seconds)
    (34/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140596499 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.133227432 seconds)
    (36/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.078744829 seconds)
    (37/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19573283 seconds)
    (38/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.280758892 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.154530138 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.164827725 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.219588152 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.131405221 seconds)
    (43/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.136558357 seconds)
    (44/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112912564 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.214489673 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122362295 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.147510347 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143274968 seconds)
    (49/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127600835 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117736979 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089845214 seconds)
    (52/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.142323419 seconds)
    (53/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095100784 seconds)
    (54/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196716141 seconds)
    (55/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080815797 seconds)
    (56/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129092075 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108788569 seconds)
    (58/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.211995479 seconds)
    (59/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.12440867 seconds)
    (60/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093397282 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12220608 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099174562 seconds)
    (63/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121102468 seconds)
    (64/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.225350474 seconds)
    (65/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094845805 seconds)
    (66/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.141747166 seconds)
    (67/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109820395 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.149947082 seconds)
    (69/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166690113 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 0.092194029 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 0.219667347 seconds)
    (72/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197623172 seconds)
    (73/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.198963404 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127989607 seconds)
    (75/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.145176647 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.167198173 seconds)
    (77/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.195590884 seconds)
    (78/286) benchmarking ("sort", Int8, false)...
    done (took 0.199084252 seconds)
    (79/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.111052208 seconds)
    (80/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079831081 seconds)
    (81/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102778703 seconds)
    (82/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.250388968 seconds)
    (83/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.194027874 seconds)
    (84/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.162623655 seconds)
    (85/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128205388 seconds)
    (86/286) benchmarking ("sort", Float64, true)...
    done (took 0.212843371 seconds)
    (87/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.235446233 seconds)
    (88/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097363572 seconds)
    (89/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.103385394 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.203829726 seconds)
    (91/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.157632262 seconds)
    (92/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.215036978 seconds)
    (93/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.173070966 seconds)
    (94/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095289786 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121893555 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221339612 seconds)
    (97/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080736025 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 0.234849964 seconds)
    (99/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.13182296 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106408468 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111237783 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.107958971 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104911965 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 0.209125591 seconds)
    (105/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079601628 seconds)
    (106/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.130498958 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.221315397 seconds)
    (108/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09598941 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144365736 seconds)
    (110/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.079165247 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122548277 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09928279 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.215259442 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.105914379 seconds)
    (115/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119006156 seconds)
    (116/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.189267596 seconds)
    (117/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119664095 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127940889 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098752782 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.204968585 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201349108 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09700285 seconds)
    (123/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12283236 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096599196 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121812928 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.105363081 seconds)
    (127/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.103000728 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095160326 seconds)
    (129/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119036391 seconds)
    (130/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080299439 seconds)
    (131/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10247288 seconds)
    (132/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.088454792 seconds)
    (133/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.102181694 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.126752934 seconds)
    (135/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.101022269 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.105633104 seconds)
    (137/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101996369 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100938687 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.10291411 seconds)
    (140/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.190648884 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.147337979 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.129246888 seconds)
    (143/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.110099565 seconds)
    (144/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.103321186 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093134226 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119332658 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.209480971 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109546494 seconds)
    (149/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.10274044 seconds)
    (150/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.093247346 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115940999 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080251056 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121729737 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10049629 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128325161 seconds)
    (156/286) benchmarking ("sort", Float32, true)...
    done (took 0.213116663 seconds)
    (157/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.201428422 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105674792 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124663 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.120028325 seconds)
    (161/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103774589 seconds)
    (162/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.137769084 seconds)
    (163/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123132355 seconds)
    (164/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095285505 seconds)
    (165/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198513116 seconds)
    (166/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134557084 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099944971 seconds)
    (168/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12294077 seconds)
    (169/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.098809282 seconds)
    (170/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.10277323 seconds)
    (171/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.228723178 seconds)
    (172/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09417001 seconds)
    (173/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.104071281 seconds)
    (174/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081175934 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095728265 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204823734 seconds)
    (177/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113542672 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.106773219 seconds)
    (179/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130279848 seconds)
    (180/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080377806 seconds)
    (181/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129633589 seconds)
    (182/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121495343 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081788424 seconds)
    (184/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080991959 seconds)
    (185/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.103720561 seconds)
    (186/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098387244 seconds)
    (187/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119952187 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097111053 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.209081747 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.121135767 seconds)
    (191/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122571836 seconds)
    (192/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096858033 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080178215 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.104485231 seconds)
    (195/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16572577 seconds)
    (196/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08164648 seconds)
    (197/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079355778 seconds)
    (198/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143344134 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122630567 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093867972 seconds)
    (201/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.110536555 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109799986 seconds)
    (203/286) benchmarking ("sort", Float32, false)...
    done (took 0.181067341 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148387853 seconds)
    (205/286) benchmarking ("sort", Float64, false)...
    done (took 0.156379543 seconds)
    (206/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.130313578 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.132032602 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104032894 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116003491 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081929851 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104723353 seconds)
    (212/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116082836 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081194005 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118689842 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.145419174 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098813299 seconds)
    (217/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121244433 seconds)
    (218/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080189212 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.118774343 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096719022 seconds)
    (221/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103415122 seconds)
    (222/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.146065558 seconds)
    (223/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.111936564 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173858575 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.151875676 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12354695 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108569906 seconds)
    (228/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104018004 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113890607 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103857535 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10603573 seconds)
    (232/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.08935998 seconds)
    (233/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.115299985 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.112676123 seconds)
    (235/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11980654 seconds)
    (236/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.103597669 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.104430062 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093116262 seconds)
    (239/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.111058524 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100046384 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122217498 seconds)
    (242/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093982443 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118850141 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099830426 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123331686 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130010578 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.10841749 seconds)
    (248/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104023163 seconds)
    (249/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081667944 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081079706 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123722988 seconds)
    (252/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.222423285 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104922131 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093867034 seconds)
    (255/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095439525 seconds)
    (256/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.1544421 seconds)
    (257/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.103016155 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100615462 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123405274 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101535225 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103600671 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101225409 seconds)
    (263/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136751992 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093190097 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.103018023 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116300097 seconds)
    (267/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.119103053 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093654047 seconds)
    (269/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104135913 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100348087 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.130777573 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082958807 seconds)
    (273/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133156359 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080686942 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.120163812 seconds)
    (276/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096264786 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.13000686 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.129604653 seconds)
    (279/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12102105 seconds)
    (280/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096243184 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119897917 seconds)
    (282/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080801053 seconds)
    (283/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.105254858 seconds)
    (284/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100900792 seconds)
    (285/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.10357742 seconds)
    (286/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082556262 seconds)
  done (took 38.936393903 seconds)
done (took 39.811554338 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106203966 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1602079 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.104343859 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.146575745 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129387478 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.109895988 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126900619 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105615026 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129725645 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130625336 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108251941 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.111263321 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104668236 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127792547 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.106055082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148458244 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107077371 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.125482235 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098820155 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.120780525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120105268 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.097435591 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.121490107 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.089042213 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12734624 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104043834 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.122992119 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.105665139 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.120378638 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095169038 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119138353 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.101715784 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118470185 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123583516 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.122291229 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.09785657 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128263148 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103763023 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.12322745 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.097622512 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.125532878 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097250377 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.123389631 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.102694042 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121390627 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096087643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120707894 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130258364 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125734363 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120603441 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101947287 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12844914 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.106531647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.124994753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096390948 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12023432 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098393492 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149598749 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12075317 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098712369 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101068795 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.126300163 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096018817 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120731683 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120099025 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106782328 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12662544 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096927737 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12615292 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100418672 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.116218256 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097372386 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.118626381 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.095353514 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.126948349 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105120787 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.115182264 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098822279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.123663896 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09988128 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11987287 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096304943 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122942351 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098531004 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118485622 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088731932 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117964646 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.10021295 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120039733 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097284881 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123611453 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100721026 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122643706 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103893285 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120820722 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098930082 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121569699 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.098062403 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.123404057 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09526042 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.116414302 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096026853 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.124870952 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09494183 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.121469643 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106144538 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119251033 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100419286 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.120757857 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.097421109 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.132616414 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127796017 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09846042 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121916712 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094848902 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124534948 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095454339 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118673148 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095229853 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121107787 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0982893 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.120945873 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095656672 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.124224128 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106945524 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.117254004 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.096662223 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119225527 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.098090336 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.123928827 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099271378 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.118674118 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.097321917 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.115672067 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096087891 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.118248393 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.102370147 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119345255 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.0981783 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1207909 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097699751 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.122042423 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.098967089 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.12210555 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.095821087 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.115899448 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099536743 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119025919 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.100214192 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.121948914 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098781346 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.116444219 seconds)
done (took 18.015573024 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104303179 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193380158 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153771773 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.158055015 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156288512 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115732725 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132865964 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154110616 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106468213 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.149813052 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151432405 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143166166 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134730569 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12939652 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.139134528 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105034555 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12818438 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137503562 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.138935078 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149529923 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155295694 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129693093 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126014621 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149549825 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126330708 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125839158 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131617205 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128098562 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107492518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145472492 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121118628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133863182 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13020338 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116273719 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135361988 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102165336 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140338273 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.123694497 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10491204 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128375787 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1402541 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115685277 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125145901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135825477 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.105959872 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.132679032 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.104153408 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126871 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104863293 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122518749 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132714721 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.125050095 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127231107 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.129998552 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106121352 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129065727 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107597234 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.13149676 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130022947 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108999368 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.128865137 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107465901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135517339 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146159984 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.127224758 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107576192 seconds)
  done (took 9.459302022 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120677121 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158367548 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135411823 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112690438 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131620562 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093568315 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118172965 seconds)
  done (took 1.805856265 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09557853 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149952385 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129475393 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153168907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144102489 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131741644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142259701 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.120696168 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.119951855 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129871933 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123792435 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176118956 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120678927 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107401369 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155867263 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118497662 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131583492 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119151759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103522996 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.154538176 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125528114 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118566798 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134183907 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096103595 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142289881 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09714745 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.191282549 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13201664 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095331364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.128514839 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125368276 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.191945188 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11922832 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130381813 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093781011 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149480122 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141615824 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102000359 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146085997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100633631 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142737402 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.125892537 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.10385366 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125764322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.104015659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136183919 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107916045 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.129087389 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101485394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149361567 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130837362 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118422643 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122098267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099864986 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131084116 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102528189 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135837078 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124294872 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.125732264 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127674369 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123286911 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147673781 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.143165643 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123182236 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138477294 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14259648 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.118466829 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125720859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103807617 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129184758 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122762152 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124168285 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.131046368 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.112871022 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129356598 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123887797 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149975228 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100348615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.134153079 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124367211 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099109305 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121014197 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112958678 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123861551 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099408996 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139311204 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109432834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.127466672 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099487237 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144828562 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.125761579 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107499937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13279444 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099939068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137681584 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153109338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131344769 seconds)
  done (took 13.18188371 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098950696 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097733581 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.129173435 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122682241 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098777185 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097911368 seconds)
  done (took 1.586773562 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129022481 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126516411 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.112909399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128660543 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16714302 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.12107131 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146787024 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131442023 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1179945 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137020549 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121077362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.14867363 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.153100541 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104178509 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.147291448 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.104773987 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146963665 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124892806 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.112234678 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125722151 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113302245 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130023302 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100568575 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145345482 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129387417 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105157441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12806116 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112730154 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137208623 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106903905 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130167422 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129526976 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.105465451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130837587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.122143978 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129657225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099899126 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.133302395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129831099 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.10531981 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.148072342 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100789027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13578119 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.108181191 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132490332 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129640281 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.106828947 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128309505 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.121273535 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132138753 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106456464 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129837794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105255359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132608711 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128442117 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107793064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131999072 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.122182949 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129840083 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104662103 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128255643 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129375475 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107626359 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130104218 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104403184 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132519604 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104867889 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127308552 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101420588 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128900865 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106261135 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126376461 seconds)
  done (took 9.851547513 seconds)
done (took 36.81048524 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686983695 seconds)
  done (took 1.626909344 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.856725296 seconds)
  done (took 1.798150606 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.615185673 seconds)
  done (took 17.589882074 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.527017885 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.625419304 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980491888 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172960059 seconds)
  done (took 3.246582701 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957460802 seconds)
  done (took 1.919789785 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322655634 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271444159 seconds)
  done (took 1.541946026 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.829152133 seconds)
  done (took 1.784292787 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.577405714 seconds)
  done (took 2.529758852 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363230918 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207307542 seconds)
  done (took 1.533356967 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592963614 seconds)
  done (took 1.550922026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.242942569 seconds)
  done (took 15.205603676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236436222 seconds)
  done (took 1.206327946 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308757145 seconds)
  done (took 1.268311701 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.432286076 seconds)
  done (took 4.393024351 seconds)
done (took 58.145472646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107475046 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135376979 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111092679 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131674832 seconds)
  done (took 1.437320189 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112312059 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128945949 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10898381 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129678191 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113692135 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129984252 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104071391 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.136311817 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103977192 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132606298 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128719551 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10515548 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130931241 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10371644 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127239645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106112275 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133724796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104890008 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129467131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104983687 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.131510708 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130625273 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107527546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130520298 seconds)
  done (took 3.83480118 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107908755 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101104071 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129363368 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100777658 seconds)
  done (took 1.401343383 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112873169 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145405332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119569765 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136359072 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144311779 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118928643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12561147 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101152826 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128367769 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.11211746 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127580185 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121253334 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145399055 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120469233 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114363253 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119028729 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097750156 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144240401 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110804234 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13861477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100616068 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136455828 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109000514 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142611131 seconds)
  done (took 3.94101999 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176853441 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141559051 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149776244 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.17335731 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126723319 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124285542 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126458406 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135022848 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129353363 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.101655288 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.125687313 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15665097 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131741429 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126838859 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101255339 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131303064 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108196416 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132189582 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103001931 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140455571 seconds)
  done (took 3.610560012 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109179036 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126149389 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097594532 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124105959 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109467683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128527577 seconds)
  done (took 1.664761066 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098018315 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.096064769 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122584451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095548603 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125747403 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096352323 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11923409 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096701031 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095830543 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121848571 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095779415 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120817679 seconds)
  done (took 2.251573289 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.506645408 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.124051994 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125889371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.102509416 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.131240631 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100322655 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140339629 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100315565 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183110198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127393772 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115438448 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.180634568 seconds)
  done (took 2.904483637 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221116394 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106313196 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283851903 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38175407 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167115106 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174588693 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283189721 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175326411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19618341 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146470084 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215179456 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165482373 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137456229 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213357333 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124428862 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.194049613 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18564597 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209840981 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158825095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248610692 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175326241 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176729452 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198185192 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160580908 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121589557 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167121833 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125971704 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110453992 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181792449 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204099022 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183344861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155959882 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121542575 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235506044 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223050623 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187189392 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.336613123 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117577578 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202049897 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.223596392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261086278 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150098497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205507247 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16372078 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140687891 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189994852 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166059408 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189796196 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139861153 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125067456 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219572694 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185148477 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192516283 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146224403 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306760142 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156647927 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.129265504 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190575969 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225136588 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209971908 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176131049 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105840714 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222435089 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202255759 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190201851 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154053187 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178005226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107475164 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18767181 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241197497 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187896242 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177822127 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.194513023 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142956548 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172846451 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188883934 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163619435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188333373 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169847344 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103267447 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158855156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146132998 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110722757 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19683699 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130959114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223321305 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145041977 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.299300171 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216751209 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168527744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171175245 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173647937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179324099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156309483 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101473426 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156931918 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179968891 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167279185 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139861615 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165763331 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127760226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136150614 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160849804 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105194953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168172824 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.144062704 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177179655 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173695246 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.11097043 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173887535 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160906063 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16718527 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181066561 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205311979 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142866477 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114638447 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238150725 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140000683 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145613688 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193483632 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203418592 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180852345 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146572123 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178272765 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204591386 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150528185 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206190516 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151658895 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141893815 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.159165347 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166067023 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139457666 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164733639 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138293028 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159439907 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212668043 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.1360215 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11909171 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184473859 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135340512 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109626376 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152974726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144859645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123479928 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159565117 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148580224 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165981941 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168056103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162101811 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167314967 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124878893 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228179755 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114357058 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169498553 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157741661 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099836859 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.216998825 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204154871 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110547322 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19660981 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.205458154 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207665944 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172069767 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138378896 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191057707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112684942 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128227367 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175156045 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169506291 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171494046 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200143622 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20272517 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175419904 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163989004 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158786118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176825672 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.192894991 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166432661 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153642339 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14624825 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205071054 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105428518 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132093755 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108937311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150029586 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138901076 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114935999 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190328784 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175044055 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224291843 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170377395 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121915395 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229179639 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108527195 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17498769 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180557129 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148535863 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203623794 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199669364 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175790365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152364915 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180224713 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10123199 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1351504 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141019637 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176035979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115367701 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143383859 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152584471 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201156757 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184836674 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158864383 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214577894 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176632597 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238561172 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103870447 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172536513 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189741361 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166326998 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171050925 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140621001 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170546913 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197910664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153900051 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204121856 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169974497 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178483936 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209152097 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166521156 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139268984 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158458841 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177996979 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122674571 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181333646 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157020974 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144268968 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162588252 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117699311 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134775802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190123705 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15315911 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188580536 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176726499 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183832523 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135898595 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153251728 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169510052 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127300878 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.126795691 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181201603 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206218438 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154180736 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168471731 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194966005 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139138412 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322730327 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208382531 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196878522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148629179 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152984237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170597596 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151457703 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174992692 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221103015 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1256795 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191181021 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168811203 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15286618 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143195594 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130574644 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16096245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163111518 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141836889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162394324 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125597881 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192242852 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156570974 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169170091 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174820491 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.156283086 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.137093741 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151242917 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21988954 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169385736 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188386743 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167992978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184767548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19855892 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134662551 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109304117 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137588963 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193425287 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141436249 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140588449 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219636736 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208681327 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168315826 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180037581 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148186669 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105620092 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170162258 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15974699 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209824842 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152388326 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145875437 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213094927 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16110871 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112462753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174251048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292356216 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150998926 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195269027 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131653078 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283162564 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110350833 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139498206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181053987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182889315 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140760175 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167123571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17012125 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156627772 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180209597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147698959 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200228958 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218195207 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178710169 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18525163 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154404311 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169302875 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172991043 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197282727 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153921599 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.154440803 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17118374 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204092007 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205770826 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142507671 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144668797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172048473 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169515893 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184478767 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143156611 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19825564 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142574718 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177339266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148893851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106123299 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168247671 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194552637 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142525094 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195271836 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168893924 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142213235 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110386821 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162446398 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16905464 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15310263 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.111984143 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189015921 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13827644 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172278507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190153955 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113496873 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165778853 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156012892 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112061451 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155065939 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155513363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144850687 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.153608989 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200737272 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141693958 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196656767 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181975827 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175471997 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169407592 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155650156 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670218025 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109958984 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200560468 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157187706 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200451755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159255013 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176604555 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170294041 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158736766 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177994381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131643785 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230810232 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175517425 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169190028 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14039141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153069515 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128542809 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.140630256 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161370868 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170253481 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123176042 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148205184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164753763 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156979455 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.1267571 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149628254 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205253545 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158062226 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1941179 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195207057 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149835439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175045058 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186036782 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138618043 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170932152 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181488866 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12448887 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163190785 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139823665 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116216188 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19092358 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13356664 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172429982 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169118742 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143193149 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173472846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144271846 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170551337 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152297548 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171113527 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108210187 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164510318 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168544285 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112842122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138494032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165954565 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169087132 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168851834 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108286919 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181636508 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202161037 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105922778 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146178012 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293032232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16709511 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207935099 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162491049 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146912864 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125387941 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166196855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166315456 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169292199 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138558964 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116532263 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141954658 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192690571 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.176292716 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164644766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193473837 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142260461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228587703 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118042724 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275146578 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147540275 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136779728 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140557643 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138986338 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122962046 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144854882 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153055606 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201603461 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188496717 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164507265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152824115 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109188202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134050048 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114975564 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181913441 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163608462 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168104436 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152319811 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100103198 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154262056 seconds)
  done (took 81.936258067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155110582 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151066413 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156870205 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206121027 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177035691 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264998761 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214655463 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236913954 seconds)
  done (took 2.61745676 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109537898 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144089776 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149342238 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13371827 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132705729 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.353417702 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.119518818 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.133288131 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193815841 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.145833444 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.130587691 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623253843 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103511307 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.135768798 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121802055 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132998923 seconds)
  done (took 3.910402561 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.164267387 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523631115 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.74038871 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.235880037 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.245553961 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.16251106 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714137068 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172929951 seconds)
  done (took 12.016730865 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134940924 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15261359 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.154939627 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.180064841 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.163077168 seconds)
  done (took 1.851802081 seconds)
done (took 124.332368612 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105958611 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13499598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108293824 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135823741 seconds)
  done (took 1.534689251 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1197625 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092415989 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.12328386 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089655484 seconds)
  done (took 1.481157492 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447789598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.119563664 seconds)
  done (took 1.6629489 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.13048751 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147843068 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.127205879 seconds)
  done (took 1.472635817 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114459181 seconds)
  done (took 1.180807803 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115244813 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113625317 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.154525202 seconds)
  done (took 1.448455656 seconds)
done (took 9.841060607 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120379739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.443866487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395946063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148350719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.73247171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.391887377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.068032938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164910576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174188738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.103277084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149307406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682006754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021752993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348895528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.008298239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.347846919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713377144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102608428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136057914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101797784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.045249119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099843386 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132336149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102585635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711259544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40474635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129642704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388568635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101402073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132182341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391019313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126366689 seconds)
  done (took 17.173569691 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103914705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190403706 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108705447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131758152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104804146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131586833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.110718424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142436979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189704566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127519867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121519378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127437626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107884728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128209873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124098658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127238389 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105206677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130355444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.108353379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131369038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120615606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128008533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103037389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131433697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101774768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141803526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101772294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141273971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100678527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133832365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106415475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130450648 seconds)
  done (took 5.059256339 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150935956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200301468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137862539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136754781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17986986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13078263 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217351204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138931822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195347294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130205048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120775072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130906869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167657044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102672152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15161484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101607223 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133373498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.104472154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136435555 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104038518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150279254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100661256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131868821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.104122183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130573105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115318635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13050494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140229924 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105515107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134320753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108154753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129192442 seconds)
  done (took 5.422603797 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108038153 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136237991 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120850536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146554264 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10486195 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135772813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109539622 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131835456 seconds)
  done (took 2.062458745 seconds)
done (took 30.784950558 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119891027 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.106179707 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146689284 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.14262623 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.112581883 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.165078143 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.103367428 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.112567528 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.144081652 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110143344 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147114633 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100300455 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.130384088 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099723066 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144407742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106135702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.145991422 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.11029547 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.151804912 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117842588 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.129973136 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.114012208 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142046031 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.122945862 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.152451279 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.152146112 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.118128685 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136420375 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102452858 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131499015 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.119073838 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.157165209 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104008374 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148541668 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10611166 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135213232 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.10190845 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.132029443 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.117241777 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.141452629 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107941822 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.141766733 seconds)
  done (took 6.394883793 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.130937152 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.177089879 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.098816362 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128822435 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.099445841 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.172202737 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.169079783 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.100029391 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.129299061 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.127838324 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.158927962 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099314976 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.130600988 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.099603254 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.127790917 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.100059868 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.156803253 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.12631159 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.162527802 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.162319765 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.154045814 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.167480213 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.166251375 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.127458833 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.17673007 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.169219349 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.123112639 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.169637317 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.161554544 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.099690795 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.163473908 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.13425349 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.131304918 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098703363 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.174247845 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.169413775 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.131003702 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.176036606 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.16437998 seconds)
  done (took 6.592409453 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109917785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14750581 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129485688 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204576789 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173007824 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117099033 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144252192 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120274455 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.159860916 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101693824 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143081481 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162850148 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120632598 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141773645 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108698617 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145496371 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.123951035 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.132468528 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109235064 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150767415 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120730074 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144602777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117254314 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.142703656 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10174046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141108049 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108159688 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.147256744 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138340338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112723461 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134816666 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.110138504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134555116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114789939 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.13487959 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.112813066 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154429313 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112675019 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.147029021 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16614989 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113055077 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135546117 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.126714436 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.179918441 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10432075 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139833822 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113624804 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141972933 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101102193 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152908805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117295273 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.1332773 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147191413 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.104242551 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129227629 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111375314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103404394 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.136560131 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.111478821 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.137320822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152638509 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112483077 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138540025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104999516 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138169782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102485618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.129961029 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108270414 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157242937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107849782 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165092054 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103712566 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139189653 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111978793 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139068791 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111985687 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.134187922 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110936915 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141341447 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.109199119 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141672297 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105595835 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.137449281 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120797064 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148948149 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139451427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108535734 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.14758372 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.106221986 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.13440765 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117295399 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134374691 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106947209 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142069178 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102705316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135378553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109188844 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137155016 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10201262 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153094081 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108267481 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.133691959 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.148474027 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.107043842 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106658808 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.144046546 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114820452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.135161907 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106620464 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140178439 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101437855 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.140346722 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106256816 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.133308025 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115964338 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.147389616 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135229229 seconds)
  done (took 16.147236813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.25599897 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.234218803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206615675 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318282207 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156215064 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.13034559 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.230688566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188550558 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.135379813 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174049707 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190575484 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.201173163 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.188940034 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.202053122 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.195520444 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.104035751 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.167012495 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.18812221 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2351895 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286383746 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.166917793 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.147567318 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176080036 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173449947 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.120116373 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.149853317 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.160165536 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127041667 seconds)
  done (took 6.301508053 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119537075 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173094168 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.110519402 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163023762 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.160293929 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103328336 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.138382065 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103385039 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.149059436 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14934831 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105085257 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140078654 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.109473131 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.141107458 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.103071408 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.142286443 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.112804925 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141700743 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105365962 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.137084547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120817213 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15079809 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136819243 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.110609872 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150219393 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109527606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134123306 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153664885 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113404425 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162927823 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100570759 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143434942 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146904629 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.104511426 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137711732 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.106638968 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105237823 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.136982198 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.106577842 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.130342513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.103521738 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.123736657 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.109391871 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148824263 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.111277645 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.137360319 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137366742 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.107901519 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104241334 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.129658274 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105689199 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135428553 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107714021 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.151527348 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106558791 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133793726 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.106668954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133768895 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.113666925 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.136407839 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100699407 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.138488083 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.110647113 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138697023 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112221959 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140239779 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108418759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.134272519 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.108259727 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140580869 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.10588724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.144371901 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100482738 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.1369493 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.11395424 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145906916 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.106929423 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140610546 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.138700527 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104037416 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.093243904 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133364283 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.090074654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.137098159 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.10294549 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137667163 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.106671347 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138811002 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.119953659 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.144726523 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.139964057 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.104787327 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137898371 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.109166824 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.128404239 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.109509991 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151852823 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.124126178 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.132480835 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101544057 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156636739 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.105494141 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130248247 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09275991 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.142131365 seconds)
  done (took 14.264958578 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132531455 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.172252043 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104476775 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.151960138 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.167854219 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.133021979 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.14816329 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.112237186 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133417929 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.124429949 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.140832246 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112879882 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.140846968 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.118849932 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161772823 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.146737544 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106325346 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.147194058 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110311051 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175501646 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.12367432 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160080696 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165193876 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.116325319 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.14137314 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.127871439 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165073161 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.146122055 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.11709628 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.167202932 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.1174558 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164912134 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16807209 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.111219279 seconds)
  done (took 5.838098328 seconds)
done (took 56.607675875 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.219233787 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.386133063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.174468005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.175931647 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.185598 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.184600811 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191601829 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.368402026 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.828206038 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.162736663 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.172873338 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.174222902 seconds)
done (took 27.322423161 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.22773924 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.738215269 seconds)
    (2/2) benchmarking "String"...
    done (took 1.496433568 seconds)
  done (took 4.33295977 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.17183047 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.173690434 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.418584634 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.179715219 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.174647092 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.18823143 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.175502104 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.187059382 seconds)
  done (took 15.593585498 seconds)
done (took 25.423683052 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.209328125 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.364178613 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.429415608 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.190935323 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.174092666 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.17927746 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.176291944 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.192603034 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.18682224 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.177546787 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.178293135 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.453063658 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.193656458 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.55896923 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.175708527 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.176002069 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.190201431 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.387832335 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.174484025 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.211492784 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.159008058 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.158393658 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.227660973 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.198156564 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.18037948 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.189581238 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.236584236 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.174819398 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.355066532 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.197524328 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.212053638 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.173166878 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2212723 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.172033702 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.279723612 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.195985949 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.341241818 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.176272132 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.167109439 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.182379204 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.349490348 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.541418471 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.173736749 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.172236188 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.17660303 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.216203485 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.165164383 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.862218202 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.184295823 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.178881521 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.198083349 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.544406342 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.17624825 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.185030587 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.18198693 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.391241548 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.190179419 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.187863171 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.199259466 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.194062002 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.173817533 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.173143892 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.194748933 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.189933514 seconds)
  done (took 141.478109171 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.173131422 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.173625173 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.175913857 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.189018623 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.175616025 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.174787142 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.174420631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.177508551 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.179139028 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.180003224 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.176974043 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.174570357 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.176273548 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.120982418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.174125835 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.198989597 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.177565812 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.178898832 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.177903371 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.172715466 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.180298389 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.177429826 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.188877777 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.174121338 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.199696285 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.257225311 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.220012443 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.195280168 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.175744682 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.173840146 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.200479379 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.193124284 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.708892179 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.029737742 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.185478356 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.197525204 seconds)
  done (took 79.056199834 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.17388569 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.176233499 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174714155 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.201725504 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.174548997 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.664449659 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.667937044 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.894000687 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.715433537 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.27129534 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178212458 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.386916202 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.179125511 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265105725 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.191719651 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.176762335 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.189856338 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.200514187 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.176726971 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.175541682 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.666721329 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.193007461 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.390372672 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.338801773 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.191502212 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.204162473 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.569029176 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.176146702 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203057217 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.496512575 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221044905 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.176510407 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.471992888 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.422002307 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289351758 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.177986878 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20490628 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.177927879 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.4511598 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178468323 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.176948184 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.181609967 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.774737557 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.1802434 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.668445699 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180629266 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.057915741 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.180955277 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.1781627 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.039061364 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.704187674 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.194477158 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.178149811 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.179701163 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.178253497 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176455616 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.178268362 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.205263312 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.046410873 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.269447895 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.178974655 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.181798845 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206040686 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.178670106 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.316394617 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180537951 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.297037668 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.241527461 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.400310625 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.668904273 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180416625 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.1794504 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272749079 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295372737 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.179666723 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.179061664 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179589632 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.178712621 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.179977461 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.284993569 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.179556441 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.547288275 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.34302573 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.195865885 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.260154296 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.277053083 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.180824661 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.484724108 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.183753334 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.178726075 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872864221 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275645415 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180546732 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.18108916 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179962475 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.551829212 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.670751056 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.324089267 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.183637193 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.327482763 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.183028522 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.565126099 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.6685949 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.796937355 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.184402086 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290418459 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.343866378 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198582515 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.180501655 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.264869919 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.185165605 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.244103959 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.181824204 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.576493811 seconds)
  done (took 361.87017108 seconds)
done (took 583.500770522 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.901707743 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.845586399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.972442101 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.874487221 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840733833 seconds)
  done (took 10.540188076 seconds)
done (took 11.642497329 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.35639868 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.355991748 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.236413166 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.360060485 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21311971 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374286711 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.341075672 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.202753067 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.281139543 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.256163759 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282572856 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232240974 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216049871 seconds)
  done (took 17.813306173 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451875883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.187584962 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262946808 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43000684 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22539459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429805952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.467821713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.188659733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33709529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195869852 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196267565 seconds)
  done (took 17.480372375 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443021094 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.188413375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250321289 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405009357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228492825 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436969644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482493327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.188367517 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315758621 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.198683342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196875835 seconds)
  done (took 17.440784488 seconds)
done (took 53.835816962 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22092299 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.342928377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.211500484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198744572 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.191316392 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.192619618 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.195944575 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.191329392 seconds)
  done (took 10.853033564 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.18679179 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.188583981 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.187103345 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187594798 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.189420766 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.19022944 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.190451692 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.188266422 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188314826 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.187494313 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186815732 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.189295664 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.186707791 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190298472 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.190915609 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.190533417 seconds)
  done (took 20.122889793 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189686394 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.187321985 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.187904293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188853031 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.186406332 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.18863357 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.18883813 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.188470419 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188419571 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187688802 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.188376477 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.188158502 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189238602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.18852191 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.188084164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.189073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.189372408 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.188540368 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.19267874 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.187818992 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.189686765 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188728715 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188005826 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.190326109 seconds)
  done (took 29.635845555 seconds)
done (took 61.716825175 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.184752341 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.205746689 seconds)
  done (took 5.495655694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.251735046 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.25285243 seconds)
  done (took 3.610800758 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.191432347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.191878943 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.191653743 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188352723 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.18886597 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.188871332 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.189412808 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.18929197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.18906556 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.187958637 seconds)
  done (took 13.003673783 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179357997 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.180276416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.176557984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.178970509 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.1814419 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.178233892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.178520186 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.179288048 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.177834429 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.169631178 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.172269526 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.16949022 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.171759129 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.169459069 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.172624437 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.171335666 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.170573537 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.164248437 seconds)
  done (took 22.245706404 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.177959221 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.187606503 seconds)
  done (took 3.447392267 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.304132449 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205211785 seconds)
    (3/7) benchmarking "month"...
    done (took 1.281058172 seconds)
    (4/7) benchmarking "year"...
    done (took 1.268757915 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.203078274 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.18233534 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.203010949 seconds)
  done (took 9.73083839 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.16600983 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.353940205 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.455719511 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.751997214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.164820512 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.168241001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.032521476 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.168463419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.168661029 seconds)
  done (took 13.511018591 seconds)
done (took 72.149565454 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.155061222 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.195692036 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.17754215 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.169202257 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.455419109 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.186826845 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.15763325 seconds)
done (took 15.57679459 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.141475458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.145408692 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.157892828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.157054566 seconds)
  done (took 9.681173828 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.101952675 seconds)
    (2/2) benchmarking "read"...
    done (took 1.523716659 seconds)
  done (took 4.704969154 seconds)
done (took 15.463376181 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160776093 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.161950226 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.16094422 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.15885983 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.161119952 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.158558156 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.1599491 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.162318209 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.161111709 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.159910481 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.160232668 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.160626806 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16100459 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157920633 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158796025 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.158617841 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161614362 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.158633644 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157811941 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158793201 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.158955653 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161624615 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.157924629 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.157709054 seconds)
  done (took 28.915288263 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.160319511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.1583366 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.159933274 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.160924477 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.157896033 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.1610764 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.16054374 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.159461525 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.159464539 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.156405087 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154459607 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.154308685 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.156784141 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.15514786 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157636882 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.153006836 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.158722486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153717339 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155358769 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.152197265 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.155705782 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152642946 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.152258225 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155593021 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.152424013 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152031634 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.151865841 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.15047952 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152647177 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.150452957 seconds)
  done (took 35.751252157 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.157491243 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.158501548 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.153236129 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.154071676 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.151058258 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.151383912 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.151054265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.150438152 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.152454968 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.15263445 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.151759217 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.152013303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.151242752 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.153634931 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.15233284 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.151670646 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.152558873 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.152674514 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.152857077 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.151927851 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.152600509 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.153117821 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.151132454 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.152504563 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.151709432 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.152672858 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.150912592 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.15336612 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.152143252 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.153314528 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.152795062 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.1533431 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.15269404 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.152757527 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.153745234 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.151470692 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.155937072 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.159016252 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.154002908 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.15306454 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.153205312 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.154223616 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.153511931 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.154059921 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.153746413 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.15266946 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.152692004 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.151904847 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.153290229 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.153883799 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.155365505 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.154288807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.153700453 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.154342458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.153873372 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.15371755 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.15546023 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.154972363 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.153948933 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.154509001 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.154139087 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.155118078 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.154365539 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.154658441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.156505263 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.155302847 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.154853321 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.152488164 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.154985694 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.154515975 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.154305202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.154289756 seconds)
  done (took 84.123032465 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.155029295 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.152066492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.151469833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15154056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152136011 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.154822802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.151705235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154302765 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151128168 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.153559849 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153549709 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.152845313 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151127838 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.153420662 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154943518 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.152877025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.155214525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153422911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.153996052 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.155279173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154840527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.152635401 seconds)
  done (took 26.445036167 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154924553 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156296392 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.153304103 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.156805381 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15430539 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.155842844 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.155379769 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.156182265 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15649655 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153700167 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152226692 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15484752 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.154691892 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152239754 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154165015 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.154556874 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156212721 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.156095924 seconds)
  done (took 21.860893255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.154224169 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.153892233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.157474253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.153844578 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.154652381 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.156173549 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154085509 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.155927714 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.156173396 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.15500605 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.156446789 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156894854 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.156409318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153404087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158203791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.154894764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.155990275 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154203213 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15877408 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155580467 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.153691787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.158101351 seconds)
  done (took 26.497964362 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.1575661 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.157675386 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.155518383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.154783865 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.154827729 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.157678109 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.157989294 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.155265028 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.606469915 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.157018567 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154826783 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.157821421 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.156716546 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.155807104 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.155236025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155264562 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157334137 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.156359068 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.158867107 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.156131343 seconds)
  done (took 24.654178915 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.159918263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157691131 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.158051181 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158681357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.158498505 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.159319834 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15897273 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.158367331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.160557724 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.153682911 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.153128745 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.154542412 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.153959623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.153129888 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154220133 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155019053 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154615661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.155012012 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.152211888 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154357705 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.153472753 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.154995364 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.153043502 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.152662055 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.152890619 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.15319902 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153420837 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.15300436 seconds)
  done (took 33.426596822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152504582 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.153365316 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.149477446 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.151268822 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.149670227 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.150804079 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.150476747 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.151390398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.153569847 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.150897398 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.15374174 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.154127142 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.152442647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.152794425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.153462688 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.153381571 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153167212 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.151349498 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151276451 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151664463 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.153934089 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154091867 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.153244265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150964566 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150933675 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.153107732 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15151783 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152751338 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154601203 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.151410728 seconds)
  done (took 35.63727238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.199338848 seconds)
    (2/2) benchmarking "in"...
    done (took 1.198723635 seconds)
  done (took 3.468364165 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.151907979 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154870979 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.155264374 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.152758371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.153010684 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.155232228 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156664632 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152016057 seconds)
  done (took 10.302789486 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.155495466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.155548068 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.156438932 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.155639148 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.156779467 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.156006484 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163956197 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.17400492 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.157116013 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.156742958 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.161856451 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.163159646 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.158765621 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.158029326 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.156306059 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.158781648 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.157315819 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.157082375 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.159249078 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.15685554 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15726937 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159510462 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159691278 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.154593278 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.157260301 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.167226535 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.161216851 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.156816016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.157881982 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.160795892 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.157268051 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.154732716 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.157955962 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.157947616 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.157908847 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.157683323 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167638078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177687986 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.164058701 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.157900384 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.158071756 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.155799555 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.158979824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.159384565 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160029659 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.158870839 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.159140458 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.156647055 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158808607 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.161263134 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.160979115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158499991 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.154972795 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162511808 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.160448849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165788453 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.175846246 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.161936398 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.1675673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.168817261 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.16982678 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.180776546 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160883047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.158348603 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168955799 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.179975341 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167146394 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.17454246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.156692494 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.161519272 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.16865193 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173627558 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.184552957 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.162489686 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162716608 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.164180524 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163966025 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162821245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.169838061 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.183992526 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.164846904 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164913747 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171604237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180724464 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.161505093 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161047729 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.161725837 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.161617886 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.161677145 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170365375 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.179728048 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.16243245 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161338922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.162101452 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.162650484 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.161925141 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.160414669 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163051344 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.159812694 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.162395008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.163315221 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.166462354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.169408872 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161771666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163820115 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.169594957 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.162647502 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.162768566 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.168175326 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.162036489 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.162542875 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.165825155 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.169089996 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.160648477 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165393756 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.168796457 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163833695 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.163471405 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.163183527 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.165151619 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172916407 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.185390447 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166009262 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.164041058 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.16865122 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.17395085 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164754247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.166970579 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.163167341 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.161686042 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.160878345 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.1651005 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.163921793 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.165555288 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165218877 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16574847 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.161672352 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.164256198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.164862829 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.165452042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.166033061 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.165312303 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.166219622 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.167409346 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.163459739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.166393165 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.171517676 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.165389502 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.166327466 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.167284371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.161719666 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16625295 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166417411 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.16565628 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.166433242 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164000964 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.167093828 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.166970534 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.166929848 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.166894882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166563622 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.167065465 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169088634 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166066229 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.172180003 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.166450185 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.163529307 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167742751 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.167240135 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.167111875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.166825694 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.165189609 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.1703395 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.174134815 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.168616359 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.167040059 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.169721746 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.167709673 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.168511916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167703233 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.170426096 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174610069 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.167221102 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174361035 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.167820643 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168401253 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.169013812 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.168016983 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167891851 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16884839 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.171618263 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174162368 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178999833 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190198833 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.169390269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.171298545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.169497549 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.172518419 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.173489733 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.168673778 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.168904408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168257984 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168894804 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168159129 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169795143 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.167747434 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.169214388 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.169651174 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.169657514 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.168935127 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168551579 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.169081175 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168006231 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.165491897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.169660247 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168723852 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.170124456 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.168680963 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.169347865 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.168861287 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.169563248 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.170050273 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.176750358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.167412382 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170889217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17085012 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.169337962 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.16939405 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.171001795 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172072099 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.169946284 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.178426317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.188804157 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.170199817 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177358219 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.187820723 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.170977344 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.173452131 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170952512 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.168892612 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.173840503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.178141469 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.171247963 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.171468266 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.172643095 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171525175 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173857959 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.177763839 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168941467 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.172160385 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.173540451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.173563428 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.168487418 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.172680121 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.172684204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.173288872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173854557 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172810326 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.171720383 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173526673 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.173575105 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.173927086 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.172377699 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175246782 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.179117857 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.177486932 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.175223011 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.175780548 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.173521586 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175553263 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.173905846 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.173968395 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.173139925 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184857214 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.194726902 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180040878 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.191462162 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.174464472 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.18013464 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.190930893 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.177164764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174281544 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173589594 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.173594065 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.174666264 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.171003171 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174408766 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.175022716 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175662997 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.175406654 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.178042883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.175963787 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.175303767 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.175472875 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.175431315 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.177000195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.176160487 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.176786106 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.176923447 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176144915 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.174860312 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.175981254 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182088311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194554506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.176310917 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.174390169 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.17512134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.175720686 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.177792717 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.175330332 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.179036754 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.182029003 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.178003321 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.183256518 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.178217004 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18528828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.176564271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.18026419 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.184467645 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.174994906 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.174267152 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.176470765 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17662764 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184776212 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.193650227 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.178365268 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.179323596 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178052601 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.177001639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.178124686 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.17688385 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178198203 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.178828505 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188208908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.196508303 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.179641293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179118702 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.174928609 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.176957271 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.176466761 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.177837859 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179667803 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.177406666 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.179814994 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.176914195 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177459081 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.178830496 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.178743038 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.180752351 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.176510062 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.178098764 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186098003 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.197841262 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181249953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.178834461 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.184889914 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179684943 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186150736 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.198343528 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.179176918 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.180162446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.180120108 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.180619744 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.179678415 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.179920135 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.179451854 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.179534026 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.182694366 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.179638434 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.181447283 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.179416224 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.180379673 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.17947815 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188735461 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200067032 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.180844315 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183896281 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.177945219 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.181295578 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.183661044 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.180450162 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.180646103 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.183259376 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18917706 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187678629 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.180705013 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.180920523 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181348189 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179615474 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.180098753 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.181270158 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.18194247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.181428521 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.181578122 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.182072372 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185446567 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.181527384 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.1825667 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182546863 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.183077125 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.191297826 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.182338421 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.182233974 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18215669 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.183479903 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.182011848 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.182604903 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.182416587 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182753905 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.18309586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.182177078 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188275099 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.187671978 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.184049593 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.183005203 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.182044817 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.181126959 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.183233938 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182973497 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.183291484 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18377914 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.184188951 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.183849684 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.1841499 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.183076215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.184131373 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.183209201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183650343 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18586093 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189529177 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183107819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.180880443 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.18502476 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18468466 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.182395551 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.184813388 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.190640737 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186848591 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.193440961 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.192007662 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.18779459 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.184463021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186572779 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.192166344 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.183152755 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.185427681 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.185470597 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.186208102 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.185140865 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.1889442 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186182485 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.191508068 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.185040223 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.184521711 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193222125 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.206257175 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185887947 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.185207215 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.190200588 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.185303214 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.183328055 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.185336848 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.186281159 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192393313 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.204887467 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186326892 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.187633123 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.184685785 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.186829281 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189765207 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18695848 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.18727233 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182513306 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.187481729 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186454971 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18836682 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.182775426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.186589734 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.18540936 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.187626874 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.192131559 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.184052826 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188435144 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.186527863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.187168907 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188380912 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188691944 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.184244542 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.184903455 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.187165352 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187282568 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.186796691 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.189961825 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.187742204 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.189129862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.188450889 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187744146 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.191382978 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.197661359 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.194357331 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.185221478 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.189565826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.18897642 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.190622971 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188374119 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.189295294 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188571484 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.188489673 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.188697765 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.188941007 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.189567259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.190358615 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204738065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.210028447 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189635117 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.190267487 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193351061 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.188980792 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.186797046 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.189636419 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.191024074 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192353362 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.196132892 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.188753541 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197715558 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208923625 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.190531672 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.195647328 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.193030185 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.196429574 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.193390529 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.190340686 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.18995621 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.194249899 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.203869662 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190813442 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199339372 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217096631 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.20821705 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.190401577 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.191955899 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.191368722 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.19219435 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.19327898 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.190277487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.191341961 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19198314 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.191606788 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.192279853 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.197426437 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.193745715 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.195915708 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.190735158 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.190593123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.191747962 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.189484258 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.192634857 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.191828508 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.191531544 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.192357937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.192851185 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.192061029 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204606592 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.215205367 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.192635589 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.192748412 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.189750034 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.195453173 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.195209939 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.202315853 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.199822986 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.193811751 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.193689751 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.194621546 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191809728 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.192203972 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.194928089 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.192826689 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194032458 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.190432298 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.205220413 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214349447 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.19900067 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.193563725 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.193630767 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.194845491 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19492218 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193001829 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194743328 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.194350993 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.196238575 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197194974 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.197906046 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.193906497 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.196671794 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.200448185 seconds)
  done (took 702.921130622 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.192009705 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191699866 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191316481 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.193504414 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192508679 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1914634 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192156385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.192754721 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.192846346 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.193430334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.192041974 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192288632 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.193932424 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19305583 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192827976 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.193175248 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19417482 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.192871544 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19379913 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193151554 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194285963 seconds)
  done (took 26.157450208 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.196624386 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.194842832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19366682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.196947697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193011182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196580525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193559595 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196768825 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197726936 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193621429 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197042435 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196150428 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.193960868 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.193101029 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193412712 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196107826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.195820223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193377117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.197764372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194830051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197719185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.195175048 seconds)
  done (took 27.407932086 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.197613289 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.197037509 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.19752638 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.19458598 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.197601358 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.195387326 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.197254223 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.19808818 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.197989364 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.197790835 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.197332994 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.199106089 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.204182845 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.20186983 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.199887231 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.197583337 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.198747841 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.198452856 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.19859044 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.196586357 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203936217 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.213400013 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.196667102 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.198193681 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.199879832 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.200141582 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.198028644 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.199297748 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.201526026 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.203901747 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.201922829 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.199944943 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.200410251 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.199344908 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.201632294 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.203677759 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.199069141 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.196847087 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.199381107 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.209648758 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.217158273 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.200641412 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.206900576 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.218419733 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.202170354 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.203165332 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.207250772 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.197796862 seconds)
  done (took 58.753830441 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.75618805 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.777275195 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.77305467 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776520154 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.777610837 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.781941075 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.780933794 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78086884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.774832177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.777406217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.777609833 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.774270104 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.776350188 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.776354221 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.779505052 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.776372008 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774891564 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.777889169 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.783582845 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.779588629 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.771700514 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.777948698 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.774720932 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.776439152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.77736204 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.777273672 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773662729 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.775223133 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.771875248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.775086745 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.780552107 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781472267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.782611132 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.777359133 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.773998176 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.777133739 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.779812367 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.774152219 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.781681419 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.776121325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.779537919 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.779334384 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.782546084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.784748042 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788287994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.77813073 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.778678451 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.775438259 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.771657685 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.776847402 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.78054789 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.780814735 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780251412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.776566854 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.780007268 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.77981072 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.785732632 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.780598865 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.777178897 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.774447553 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.773266073 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.777849395 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.779343507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.7799707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.778822024 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.779007962 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.77651218 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.781062121 seconds)
  done (took 122.003279732 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204571461 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.205176174 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204476523 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205939051 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205057822 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.205731891 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206600988 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.206113807 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205687874 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206871593 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205684076 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206383261 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.205367627 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.206312633 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2043939 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207249441 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.207307488 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206720551 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205467665 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207070288 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.207943216 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.207015561 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205968954 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.206174799 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206991652 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.206008911 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.206488704 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.207162423 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205779421 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207128986 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20680471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.205661696 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.206746045 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207138979 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.207262515 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.205359939 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207764911 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208316901 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.207780628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207855141 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.207203321 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208804316 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207446167 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.207628525 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20760036 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.208643716 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.208261953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.209371973 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209181293 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208463283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.207420769 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208691725 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208597661 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208826905 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.209477742 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.208971338 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208765922 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208614773 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208852105 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.20889676 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209265198 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208347375 seconds)
  done (took 75.961742013 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211277148 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209540692 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.206487975 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.205789783 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208322808 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207862335 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209645881 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.209962481 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209879963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.210098922 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210989262 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207259027 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208043146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210824386 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208068472 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209164968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207568407 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208156667 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209313659 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206819783 seconds)
  done (took 25.296027055 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.207289188 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.210915376 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.208070555 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207886584 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.210140212 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207575313 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.211032184 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211557525 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208250423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210824485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212316526 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211065152 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208453055 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208058425 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210808839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209275161 seconds)
  done (took 20.475797125 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.209463846 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.212204361 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.210298457 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.210135331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.210182271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.209859026 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.212442359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.208157091 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.208941082 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.212643431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.212971658 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.212116452 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.212974771 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.210818833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.209913756 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.2147202 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.210150765 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.209071439 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211752327 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.212009484 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.210489416 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.211744658 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.212333833 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.212118923 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.211164652 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.211232243 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.210317679 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.210752281 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.209709782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.212801342 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.210850946 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.210186519 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.209294647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.210770108 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.213051146 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.211192706 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.213203766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.211532675 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.213550054 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.213831768 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.21317877 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.212535902 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.213486374 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.215723404 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.211718313 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.214356136 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.211155708 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.211651387 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.21243173 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.211697686 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.214302115 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.21384062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.216053559 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.215889922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.216030304 seconds)
  done (took 67.778724351 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216157958 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215450043 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215236876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216099397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.214762576 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.211786432 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214550626 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213415154 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211407952 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213544205 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211675689 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216236889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213577602 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213306702 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21543136 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214700737 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.213697519 seconds)
  done (took 22.981874089 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.214035911 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214691243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.218822262 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213190216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.21426996 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215881915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212954489 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.216346636 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216971287 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214788663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212924706 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.215302752 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218746999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.217131626 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21370735 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213289758 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.217205211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216766532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212608351 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213487138 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217382403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216653637 seconds)
  done (took 27.865305779 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.21611167 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.216883422 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.217418483 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.232743531 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.233583792 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.216481669 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.215946315 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.216851567 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.237694827 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.265117884 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.261252883 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.234035539 seconds)
  done (took 15.891496287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214733771 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218473902 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215882387 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218802448 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218314247 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214947728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217120616 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217334884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218472023 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215925446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216873243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217764279 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218448762 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215990712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219002838 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218511132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216401835 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216072505 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21661865 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22019197 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216647892 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218730644 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217134847 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217288478 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217617312 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216778981 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220621734 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218315561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217295452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219464501 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219539766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218367942 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221093449 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216858801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220079252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220913916 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21708573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219893508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220147155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218382052 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.220962212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22102878 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219513757 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217932621 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220152303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218495221 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218369926 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219046043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218621669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22238348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220797748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219541973 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222808207 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220403935 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221670415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223187929 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220289341 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219191557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220575085 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221277608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220394982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221590013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219096656 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220233218 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220959579 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220434429 seconds)
  done (took 81.577121932 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219845651 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218947096 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219326663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220067984 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21973161 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2182767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21987752 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219690249 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221616429 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221166593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222678008 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220806679 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220731865 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219605816 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219103194 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220318705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221184216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222399619 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220502292 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224807137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221238025 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221808156 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221560465 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220659128 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221713337 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223658765 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222077359 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221270301 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222111804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223636044 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221518695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22136694 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222228601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.220179802 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221443757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22116808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220651178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221959561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22312293 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224687501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22182015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225487231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222089826 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222986825 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221873978 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223784746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221900752 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223154585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222462221 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222079079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223633214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223345292 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222864907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22336294 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223659096 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22295599 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223712155 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223524741 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223063699 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224692811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222732387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22291226 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2255135 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224164419 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22457348 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224532199 seconds)
  done (took 81.788646389 seconds)
done (took 1689.024988118 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.387715952 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.342965813 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.225894972 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.235723127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.225358844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.248082326 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.234305551 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.226033952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.22563299 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.22530868 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.22558842 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.413078762 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.221126375 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.225951073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.225669237 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.323282476 seconds)
  done (took 25.348347624 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.250079184 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.234518791 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.340280293 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.250037349 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.257601344 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.408562353 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.287948884 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.2349371 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.391117562 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.275565404 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.227221156 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.257098221 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.234362955 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.228755685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.251162586 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.408685756 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.470488243 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.230534808 seconds)
  done (took 27.374353034 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.649805869 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.263552332 seconds)
  done (took 5.055729486 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.25253452 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.23481989 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.237381966 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.233294232 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.226359773 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.226785851 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.233591581 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.228578394 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.232364848 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.354751205 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.237201821 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.245387167 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.255356834 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.237172594 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.232344146 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.272707135 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.375061451 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.232871942 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.230456622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.240510927 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.235936694 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.356710378 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.274224856 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.231944652 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.351206841 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.229322278 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.240411823 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.244899962 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.371013197 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.235022168 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.234614453 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.235860183 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.239285511 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.132086459 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.714632566 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.231838605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.260251699 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.246070702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.232904435 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.424805016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.237556637 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.243416209 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.228753846 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.711079351 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.390357349 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.349849552 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.247679964 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.259088662 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.239072814 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.302094456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.238090187 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.239944414 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.278409405 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.058746101 seconds)
  done (took 79.915311031 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.236923871 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.229951505 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.410433965 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.249981815 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.230618401 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.234472779 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.234324477 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.499019605 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.274624949 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.231108129 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.560286637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.784761652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251787405 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.276768478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.082820373 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.293694476 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.232535118 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.248000605 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.234655622 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.233948997 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771504145 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.231400206 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.247502371 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.393289658 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.26948135 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.732173087 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.234190808 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.252151963 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.24982816 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.232182606 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.739848962 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.259212976 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.299059707 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.234204714 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.495351826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.596040513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556649168 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.23618174 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.244618543 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.237339266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.244077826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715510883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574302354 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233452976 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.234322427 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731433315 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.236232602 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.236989892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.233568299 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481063161 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.233834244 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.23456816 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.25234501 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.237285635 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.23460293 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.305553617 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.309431654 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737779313 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236648827 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.234965177 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.263239312 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.235837262 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.239855683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.235873028 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.239461886 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.584266643 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.387238947 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.237623477 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.580317792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737836477 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.252447971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804664999 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.25307787 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244874089 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.448795164 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233746599 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.253999016 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748690333 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.251552483 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.233613382 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562881729 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.239339942 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.556165502 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.256862137 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.236726366 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782598658 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.239194525 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.243158759 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.234474999 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.238588523 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.236622586 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239420195 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.505703846 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.263830559 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.237938461 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.236529362 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.289124426 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.235325609 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.237004897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.24216396 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.809396416 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.259703786 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.236435404 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.237351238 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236878808 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.25294912 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.236966989 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.239427201 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498837251 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.236424775 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.243396321 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.236866866 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.236150194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.260435342 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410024724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.243894666 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.533856034 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.240008913 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245909648 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.240096615 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236377179 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.241190906 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237906708 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.245384769 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.119429238 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534829603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.254568312 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.238935325 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.239408002 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.237279598 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.237737139 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241830955 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.273660213 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.23863368 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985207851 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.257691614 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.24465438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.238964831 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.241030788 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.237970981 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.247992664 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.239597844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.525609846 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.506878171 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.389171583 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.239366717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.239801428 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00113607 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.280965535 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422679001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.260988594 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241256106 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490323461 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.452494242 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24088691 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.24038158 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.239514722 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498789798 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.239870551 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542211893 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773334683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.255906701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.244761833 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991039704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.934845718 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.241263746 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.24301964 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.565188452 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.258605004 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.241309177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.239492136 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.242846425 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.256416136 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.246992684 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.248440841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.241778292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.239178716 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.287389386 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.431031927 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.258245022 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.252458307 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739285592 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.254713135 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240888212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.250184152 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.246313247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.241748879 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.304915337 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.244297909 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.246009705 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.244439338 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.250358521 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792875715 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.245855384 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.243501335 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.432888447 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919720598 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.261142127 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.242887154 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.257712605 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137455133 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763870903 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.302399455 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.538846477 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.251198215 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.280742114 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24356995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351104815 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763728907 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.247448129 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.259559493 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892361484 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.262391961 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.782559105 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.24266722 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24579736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843262171 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.262958333 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.248688439 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.243782543 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245807708 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538113085 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.243028783 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.263626525 seconds)
  done (took 476.680500554 seconds)
done (took 615.509427898 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.244883678 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.244144821 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.233881686 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.249627859 seconds)
  done (took 10.129872612 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253630898 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.254145488 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.253237585 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.253205134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.254224093 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.252492697 seconds)
  done (took 8.680676954 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.245922565 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.248758192 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.249863907 seconds)
  done (took 7.90591988 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.445888126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273057468 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.560652384 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.270998497 seconds)
  done (took 8.709878237 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.254025988 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.253463035 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.254654314 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.25614844 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.257790178 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.259193341 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.256408242 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.254587164 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.256885565 seconds)
  done (took 12.462609649 seconds)
done (took 49.046691707 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25651963 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.294404981 seconds)
    (3/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.295752278 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.247791924 seconds)
    (5/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.953149689 seconds)
    (6/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.906248122 seconds)
    (7/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.312876122 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.302387088 seconds)
    (9/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.241622405 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.393444851 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.275764581 seconds)
    (12/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.948343813 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.265086815 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.451871349 seconds)
    (15/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.313869727 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.235559255 seconds)
    (17/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.272478063 seconds)
    (18/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.436786896 seconds)
    (19/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.287863741 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.440505226 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.258839301 seconds)
    (22/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.351220498 seconds)
    (23/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.23694283 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.265599304 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.953161071 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.29935645 seconds)
    (27/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.365996753 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 1.878584736 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.264298477 seconds)
    (30/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.331245477 seconds)
    (31/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.265801724 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.260637451 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.446214448 seconds)
    (34/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.447509628 seconds)
    (35/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.266234512 seconds)
    (36/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.302870947 seconds)
    (37/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.303136612 seconds)
    (38/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.258563716 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.252253053 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.353882566 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.998433945 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.298410646 seconds)
    (43/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.287924093 seconds)
    (44/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26374267 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.390884886 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.285988128 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.277324892 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.595440083 seconds)
    (49/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.266185211 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.260797651 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.248939342 seconds)
    (52/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.336155224 seconds)
    (53/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.264593829 seconds)
    (54/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.236501487 seconds)
    (55/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.281452027 seconds)
    (56/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.290001899 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.429480531 seconds)
    (58/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.377565289 seconds)
    (59/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.2549881 seconds)
    (60/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.25510224 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.348780081 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.323552555 seconds)
    (63/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.266955924 seconds)
    (64/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.908112271 seconds)
    (65/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.332295941 seconds)
    (66/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.276741523 seconds)
    (67/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.251250761 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.339207837 seconds)
    (69/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.394316725 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 1.44354127 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 2.269863367 seconds)
    (72/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.375816883 seconds)
    (73/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.409415248 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.317807802 seconds)
    (75/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.397926892 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.428436164 seconds)
    (77/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.950236319 seconds)
    (78/286) benchmarking ("sort", Int8, false)...
    done (took 1.398115064 seconds)
    (79/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.346313079 seconds)
    (80/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.075742579 seconds)
    (81/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.274718725 seconds)
    (82/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.332630034 seconds)
    (83/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.91299095 seconds)
    (84/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.253791011 seconds)
    (85/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.2980142 seconds)
    (86/286) benchmarking ("sort", Float64, true)...
    done (took 1.981253802 seconds)
    (87/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.344604527 seconds)
    (88/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.267718557 seconds)
    (89/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.381131605 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.490916632 seconds)
    (91/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.276098642 seconds)
    (92/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.424979436 seconds)
    (93/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.294084478 seconds)
    (94/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.275402383 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.253381725 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.923676664 seconds)
    (97/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.335035288 seconds)
    (98/286) benchmarking ("sort", BigInt, false)...
    done (took 2.251787398 seconds)
    (99/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.289691337 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.277126838 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.430452117 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.281336417 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.242842742 seconds)
    (104/286) benchmarking ("sort", Int8, true)...
    done (took 1.782636084 seconds)
    (105/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.241272677 seconds)
    (106/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.349774332 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.117628105 seconds)
    (108/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.287475666 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.357022787 seconds)
    (110/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.323606521 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.3555086 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.407550725 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.292486005 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.263517495 seconds)
    (115/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.268907085 seconds)
    (116/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.437927899 seconds)
    (117/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.268692157 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.283537555 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.265011891 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.397461717 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.260731035 seconds)
    (122/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.272101925 seconds)
    (123/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.329766329 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.322105682 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.341732349 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.285540195 seconds)
    (127/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.319646603 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.283546037 seconds)
    (129/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.270118289 seconds)
    (130/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.916560799 seconds)
    (131/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.430300022 seconds)
    (132/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.319706927 seconds)
    (133/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.348672117 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.256331879 seconds)
    (135/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.390406446 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.267866193 seconds)
    (137/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.332464822 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.291055292 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.243442459 seconds)
    (140/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.425276525 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.311578245 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.266318504 seconds)
    (143/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.263805061 seconds)
    (144/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.471502566 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.343400438 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.271871568 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.279925997 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.273416453 seconds)
    (149/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.100400169 seconds)
    (150/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.295391317 seconds)
    (151/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.312987914 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.246635902 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.410837018 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.258632558 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.272093574 seconds)
    (156/286) benchmarking ("sort", Float32, true)...
    done (took 1.959122182 seconds)
    (157/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.000056263 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.308933911 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.259832977 seconds)
    (160/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.298363244 seconds)
    (161/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.001636003 seconds)
    (162/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.292496977 seconds)
    (163/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.31208963 seconds)
    (164/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.281610611 seconds)
    (165/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.072206163 seconds)
    (166/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.376684681 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.351648107 seconds)
    (168/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.395251619 seconds)
    (169/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.272844469 seconds)
    (170/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.40011004 seconds)
    (171/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.599485154 seconds)
    (172/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.359930565 seconds)
    (173/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.283183411 seconds)
    (174/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.454467141 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.27149767 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.364429446 seconds)
    (177/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.281410057 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.280850146 seconds)
    (179/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.259321672 seconds)
    (180/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.342394588 seconds)
    (181/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.273730161 seconds)
    (182/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.267303606 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.368370465 seconds)
    (184/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.312679692 seconds)
    (185/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.428659203 seconds)
    (186/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.290193175 seconds)
    (187/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.308180446 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.272883725 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 1.602719445 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.27313631 seconds)
    (191/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.276506733 seconds)
    (192/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.29616189 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.914255406 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.125446253 seconds)
    (195/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.420438494 seconds)
    (196/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.010080465 seconds)
    (197/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.353442442 seconds)
    (198/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.290011595 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.362633255 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.298123939 seconds)
    (201/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.305784016 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.355941511 seconds)
    (203/286) benchmarking ("sort", Float32, false)...
    done (took 1.414255685 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.303024269 seconds)
    (205/286) benchmarking ("sort", Float64, false)...
    done (took 1.45200004 seconds)
    (206/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.291364481 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.359918229 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.439846546 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.341213615 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.35484545 seconds)
    (211/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.569674819 seconds)
    (212/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.401764076 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.911315761 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.272593037 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.312118783 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.270391174 seconds)
    (217/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.280691306 seconds)
    (218/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.005762048 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.289573842 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.275926918 seconds)
    (221/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.008393349 seconds)
    (222/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.277389949 seconds)
    (223/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.420660435 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.392738717 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.301501865 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.357441744 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.319625288 seconds)
    (228/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.25046104 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.495612404 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.343763245 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.465354813 seconds)
    (232/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.404197411 seconds)
    (233/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.131160801 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.41225281 seconds)
    (235/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.293779694 seconds)
    (236/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.275168945 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.917309708 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.302158147 seconds)
    (239/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.309173186 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.364384848 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.263999003 seconds)
    (242/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.28493959 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.339811682 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.364432769 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.334517973 seconds)
    (246/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.280894177 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.303673275 seconds)
    (248/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.343535698 seconds)
    (249/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.251511309 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.358681052 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.338844636 seconds)
    (252/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.266216466 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.017092695 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.361712096 seconds)
    (255/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.274749787 seconds)
    (256/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.287590195 seconds)
    (257/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.017455168 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.336541863 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.315744299 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.285440433 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.390068342 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.298336761 seconds)
    (263/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.369159568 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.286845095 seconds)
    (265/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.37782802 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.279176125 seconds)
    (267/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.281907927 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.288021251 seconds)
    (269/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.397911028 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.317338267 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.44864706 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.256591836 seconds)
    (273/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.284149976 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.385046162 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.273512187 seconds)
    (276/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.274701889 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.279327049 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.340754346 seconds)
    (279/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.331934274 seconds)
    (280/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.280507036 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.274588241 seconds)
    (282/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.350766561 seconds)
    (283/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.590415722 seconds)
    (284/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.299044571 seconds)
    (285/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.39081603 seconds)
    (286/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.26967321 seconds)
  done (took 449.833177781 seconds)
done (took 450.994935262 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.312462056 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322827025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.27945562 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.31189064 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.388944208 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454022064 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.287976922 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.31828284 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.32657775 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.329136404 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.285978621 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.452559249 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.280285565 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.279622071 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.279373236 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319899225 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.271016217 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.27877821 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.296613433 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.312697647 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.295330904 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.284631343 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.329290597 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.45475054 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.281868893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.281985327 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.281203 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.300295675 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.391220839 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.281487048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.284395858 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.291866043 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.274297033 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.283717725 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.274811723 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.299179292 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.290934755 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.289389908 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.314076785 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391124845 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.281628198 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.286006019 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.28228706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.282769094 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.280684845 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.319603782 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.28041242 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33817144 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322974382 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32465438 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.273026244 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.295324684 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.290548245 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.282816384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.291817315 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.282157685 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.337674811 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325051611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.3021505 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327031584 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.271186263 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.30313623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.320982624 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.297948073 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.289970127 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.280286207 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.280124479 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.32100844 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.285192463 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.286280414 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.280845667 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.290682003 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.283605762 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.2965916 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.314769566 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.278130051 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.277876932 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.282331344 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.291703171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.281422535 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.331403911 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324460691 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.332155402 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.283875127 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325522256 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.457913541 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.292825313 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.284253577 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.317498331 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.303642638 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.290079689 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.295051472 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.317388005 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.284673896 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.331541377 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.341187676 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.292472496 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.294942757 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.33467294 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.294458884 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.272448547 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346936245 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.281970592 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.280882737 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.283572903 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.405823487 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.274211348 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.286263859 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.318048484 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.332934756 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.344825059 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.276396743 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.293139572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330582655 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.295166056 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345229448 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.287847475 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273699951 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.28231608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406570958 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.286793496 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.291559093 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330261171 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.345646037 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.286955731 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.287090344 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.287262846 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327850123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.407808921 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.297098697 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39749997 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.285242137 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.289402196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.31938409 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330616597 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.319691787 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.347102044 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331092936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.303401319 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.288233312 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.299542524 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.298155003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.287872724 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.343978761 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.284661686 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.320220249 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3283318 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330201602 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.319253673 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.407657835 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.292714937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.275794511 seconds)
done (took 216.296267866 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.346627054 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.28347094 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.391715119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.285058946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.38312515 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.383031264 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.280512327 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.282241383 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281371912 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.663245449 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.283886044 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.281963124 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.283153633 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.282332246 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.366023798 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.285826778 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.282481259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.63402294 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.285948054 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.356399324 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.277413782 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.282070736 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.28571452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.673524835 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.27911379 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.280541131 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.357400006 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.286129861 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.629468559 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.282615626 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.286053575 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.636783328 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.376454552 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.304070768 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.298738782 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.293340316 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.385550467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.303210208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.368739478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.36778152 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.394143973 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.3258118 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.283964108 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.287588871 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.287019085 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.286994649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.283683728 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.313861054 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.284287761 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28482871 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.62689268 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.29845808 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.295874811 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.285475377 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.285820493 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.307514389 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.285550629 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.288627147 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.377475535 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.288242531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.350092485 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.666380311 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.676006259 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.290108396 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.285373027 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.286442579 seconds)
  done (took 101.293699512 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.353047228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.364805301 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.398473343 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.304064945 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.338908978 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.403444413 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.302573184 seconds)
  done (took 10.657733715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.2956426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.28955503 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338608066 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33952302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.289091574 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.506738116 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290289652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.301603079 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.28706386 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367177927 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.291135815 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.290476768 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.297071061 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.28710746 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339014953 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.303261826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.405976291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.29031318 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.289807917 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.442662474 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286822699 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.296000364 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362993653 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.300690087 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.291838124 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.294806907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.250300736 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290491577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287127411 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.291560465 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288508652 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.399787909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.292389898 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.288495461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287026856 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450303516 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.291174954 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.289362223 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.29154244 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.291748626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.291823288 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.290030791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.292178281 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.289063017 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.291858047 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.316014578 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.293262675 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.291287694 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.291616413 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292058111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.36444481 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.293089169 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.290425947 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.290042864 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.369776318 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299286526 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.293052127 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.289082445 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29218068 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291476399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445430169 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341110305 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.293714864 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340266995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294464234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.293179265 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.294440646 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.293308863 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385667851 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.295511324 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340719108 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.290903165 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.518111696 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.318120126 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.295575778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.297208537 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.296854254 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.293116114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.293030176 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.299346848 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.291147139 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.295562384 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.301150788 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292428423 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292526322 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479314757 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450492418 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.291418528 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.307387803 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.302209721 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.292029668 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.367873349 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.296159075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.293163073 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347428949 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.409851006 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.372197759 seconds)
  done (took 134.075084476 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.301682401 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.306229311 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.299431617 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.319522262 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.297591901 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.298466646 seconds)
  done (took 9.022011419 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.296382677 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.296976041 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.297023095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.296106418 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.295122099 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.296729397 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.295265604 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297670661 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.300318451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.296557216 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.297698003 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.298056746 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.298360258 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.296867528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.296803955 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.296396348 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.296918383 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.295707879 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.297236852 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296782378 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.29469052 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.296557488 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298091342 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.297443817 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.30255327 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.296632473 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.305188084 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.298734411 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.298997267 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.306326409 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.317534403 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.297965982 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.299450464 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.30385019 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.301861205 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.298513063 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.301463331 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.300301746 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296823103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.298916419 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.298936856 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298484818 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.299855091 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.30127851 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.300480518 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.304566735 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.303917368 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308234907 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.300159543 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.301479994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.303279016 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.300942668 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.298943303 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.301848802 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.303308826 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320226167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.303976174 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.300668632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.300084109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.302922773 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.301703325 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.301757086 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.301976456 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.304587294 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.300124767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.302994861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.302306199 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304411455 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300714206 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.301305486 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.303115981 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.300497063 seconds)
  done (took 95.830481529 seconds)
done (took 352.066616927 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.738099317 seconds)
  done (took 3.94116495 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.331679226 seconds)
  done (took 3.537173766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.811656069 seconds)
  done (took 22.018074341 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.334587835 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.299684109 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.29265554 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.292674119 seconds)
  done (took 10.424646592 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.56081072 seconds)
  done (took 3.761607795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.300390583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.292659206 seconds)
  done (took 5.796770635 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.548507404 seconds)
  done (took 3.752967898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.626060766 seconds)
  done (took 3.829071421 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.313057051 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.30876966 seconds)
  done (took 5.832856094 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.289435652 seconds)
  done (took 3.492892014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.040423624 seconds)
  done (took 16.2446272 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.296458683 seconds)
  done (took 3.502057932 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.324778617 seconds)
  done (took 3.52677172 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.790170043 seconds)
  done (took 5.993827917 seconds)
done (took 96.857348593 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.293632566 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.29396518 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.293159766 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.294398252 seconds)
  done (took 10.377172444 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.353399843 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.35284694 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.353287546 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.353647833 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.352687772 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.352657883 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.327823169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.328150404 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351938077 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.353306992 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.354530565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.352224677 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353669076 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32769892 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.352489596 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.353390904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354140392 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.353801376 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.328304383 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.354350857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.303395116 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353564441 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.354800042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.303029474 seconds)
  done (took 33.48195554 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.819188093 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.374037391 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.458005849 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.355014436 seconds)
  done (took 7.211136363 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.379421648 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.380959594 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.393375062 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.432224475 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.445645225 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.393234208 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.325395728 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.324741275 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.310454832 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.38168788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.432195654 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.373636694 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458235898 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.303567374 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.511799879 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.302723375 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.305332732 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.381605098 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.433558615 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.447447804 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.305869591 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.382246942 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.382385659 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.376036194 seconds)
  done (took 34.368778292 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.311317 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.317496479 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.305598739 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.318420819 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.304138635 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.305048023 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.305686458 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.311963021 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.302809785 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.303684518 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.305149556 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.318443387 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.307270521 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.304661809 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.311768581 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.306168267 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.310841037 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.307482838 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.303675228 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.310426899 seconds)
  done (took 27.380001587 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.298338018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.298290962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.65326677 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.555700288 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.300857035 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.29934924 seconds)
  done (took 13.613625371 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.373064012 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.529957913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.306191127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.650843711 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.738735085 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.310517419 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.308594932 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.546642534 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.855094747 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833060865 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.36426016 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380070139 seconds)
  done (took 19.405525456 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.30498056 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.303561132 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.309498988 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.319450721 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.36006421 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.330476895 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313792336 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.30108232 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.361943431 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.381020863 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.329754351 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.362063931 seconds)
  done (took 21.187091153 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398450603 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301727406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3012472 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364668964 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302754853 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14927397 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381683005 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004989115 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325594195 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576508772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304122534 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401179515 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.55778348 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307551033 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307252822 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.287870684 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533308055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796014231 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307798778 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304851952 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339037527 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307842829 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306365243 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515983487 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308152719 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304115482 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.566022274 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303175867 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580911537 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320905574 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315393286 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304566201 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577523275 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954091151 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421432659 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509960448 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321810597 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306396492 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.309679698 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.305800454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310929867 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311136217 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315441469 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304446301 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303506354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306789133 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017590057 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330292704 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.302597204 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303206058 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559771764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407873823 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.309341332 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306805345 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30549393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306289944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.309631914 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39783445 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890019184 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31265883 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310249937 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.308730318 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306653511 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312265293 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911895566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313641313 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.312289694 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311080473 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30533903 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310497741 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323744361 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307224468 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.331528454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307553198 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022243945 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311278286 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325641659 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865047481 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314479734 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.310512332 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540501159 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306633659 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307370626 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.307591949 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307808065 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010603355 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318876763 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.295082146 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351397597 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014204049 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537022142 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331903885 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338661414 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533263238 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.295814938 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310148577 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.315990748 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31126984 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331192967 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013035083 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328523697 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.313593172 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567384966 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.520581433 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31218521 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.302412818 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780214059 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332181688 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.329354112 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310151511 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.519597293 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.890998316 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329915716 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321642043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331059058 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31061032 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046338056 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317152924 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.414722197 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310975348 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579886125 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.094207876 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312852443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379293154 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315026318 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311714965 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317082033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315510426 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313073442 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.510347993 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335390509 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.32615759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.311132976 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310128976 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.315490583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315473813 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.314985919 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534552038 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318277917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589905031 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311214649 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311462789 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311973199 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.53484122 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.310947221 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.64939853 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575858538 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326511071 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322975431 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324325515 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331841211 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416811453 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335607963 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.318002796 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568694844 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.316176691 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.319233589 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321780643 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319289231 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317180592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.319158712 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331977154 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889853646 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294025379 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31962938 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203197634 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.327458436 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381815283 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321272655 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524284487 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.316639781 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318071142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.32122912 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.31175095 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540957972 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324476505 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.321708076 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395766585 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.782147656 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910431756 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333659148 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.31376384 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.311772442 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.314426825 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31566551 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31505136 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315168153 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522410582 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333743986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316438026 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917185837 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321972609 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325971808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.325685625 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327708543 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.320747918 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317651757 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.312890129 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340963005 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327903214 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327062333 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461296984 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.330448943 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316625479 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.833823949 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321997301 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318000097 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316671073 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35196791 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323371365 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125414247 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579869586 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318250139 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573245977 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329175896 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338791513 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.315750919 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329897891 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327198523 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.331524812 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344460693 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.328545308 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327228723 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32405963 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893611241 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044343073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854054181 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331744177 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.330721793 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323696568 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026400421 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336042674 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317156579 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552826039 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045003239 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335179924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790566076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.340478694 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072961167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575811648 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555362487 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325522575 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.335589009 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580726024 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535373192 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355326622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325681078 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322233365 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.305620264 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86912168 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342540481 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404474674 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036141675 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353317167 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325167934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.338785098 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3281193 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720168442 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342835837 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322406231 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32544104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324228845 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121047134 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327244088 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320502434 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931797219 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32352182 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.813840084 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339608347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.531361295 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.336528112 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.325398117 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.327714456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.326015752 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574954992 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578812512 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327072697 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335461814 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863098476 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.192361275 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.327511528 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32251531 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063592338 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329220843 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609314213 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.329780825 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.322705148 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323044871 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321827033 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323585777 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.320171843 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329819849 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298265622 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81838459 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.340684235 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323808571 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325786204 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324083264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576439793 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.335917981 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.904967702 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555081539 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331680664 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344581347 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.326030706 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321208351 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.310688371 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321392571 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323221444 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359774133 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545810177 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338441623 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.312384599 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401684482 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551826281 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322598678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330972671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562268491 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.325021871 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.343898969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062362717 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355245604 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324663456 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325160479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328572449 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34306662 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393157443 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534542139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.338073128 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.335660158 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721087551 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355168823 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32613537 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.339088846 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420797616 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324810429 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.328375018 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.097971342 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911980339 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04903382 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915123402 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58308054 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329857999 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333720869 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324978358 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48728048 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325381404 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598806151 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326021286 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.337798244 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348228407 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326020518 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328712606 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539434599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599375541 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326165568 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330452676 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330414737 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.326577005 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337282933 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.538087655 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82219659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884643453 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32660807 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329275544 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041124595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62019957 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328753633 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327388841 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327114467 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.350466451 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362320576 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.333462627 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335096464 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47252046 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584069531 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991276499 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.356289561 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.355457116 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.101235438 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328689898 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600823845 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325481237 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543427629 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919194195 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03198761 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593565968 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400127288 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539539174 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.332190667 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489858899 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.339225958 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332340621 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329162971 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329702239 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.326779544 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.338474213 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921592236 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596627935 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.332298422 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.337721258 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362149 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.33849546 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553659479 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043485706 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552129936 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341394285 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335882564 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329989366 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920733774 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592150128 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336398252 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.33486647 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570479304 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334970104 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353666531 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846582598 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.328431368 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882687307 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.30498882 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353103647 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333212013 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044974368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920015251 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.336941107 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833893908 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336566875 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335462371 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608498112 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.335588824 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331025232 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610912605 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.336369475 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333087018 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548401761 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.918946476 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092859027 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.335913634 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352937406 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.350852649 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332988248 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417880562 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350898553 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331441719 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.744557694 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355349534 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332682952 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343880606 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.342372835 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339785786 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.334269405 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334375662 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.339265165 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.326273408 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.320245059 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337988741 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429326153 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89098452 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353324668 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.005717652 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.6574902 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589442408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337087623 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.323892969 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.337786319 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333367949 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334584889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335650913 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341669333 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888255355 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.338025255 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.34847034 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338549204 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.335116365 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546648778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342457528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548484722 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341933958 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354144792 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.321356744 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334361242 seconds)
  done (took 950.062087829 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.354274198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.355779483 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.351695692 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.348226287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.361024479 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.343065065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.341667869 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356676293 seconds)
  done (took 20.051506583 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.336328548 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.346756919 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.33745039 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.345204527 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.348457432 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.804574807 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.369903074 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.348437565 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.352273251 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.342034786 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.348013919 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.322928444 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.350190037 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.347457468 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.339379895 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.34744319 seconds)
  done (took 32.228281662 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.237359622 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.461599005 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.137248382 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.36267679 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.376587052 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.348954971 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.543081965 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.356508693 seconds)
  done (took 26.067660391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.349579683 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.347786307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.350389726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.349539932 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.349971516 seconds)
  done (took 7.989274877 seconds)
done (took 1204.629589607 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.342239051 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.346048581 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.343810924 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.345087454 seconds)
  done (took 6.619355423 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.326228576 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.326928759 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.325396716 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.33886321 seconds)
  done (took 9.560020462 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.019745662 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.967309903 seconds)
  done (took 5.229227955 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.814366232 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.815583093 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.815809691 seconds)
  done (took 6.689995849 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638747499 seconds)
  done (took 2.883570534 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.230456063 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.208529582 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.999066515 seconds)
  done (took 7.684403746 seconds)
done (took 39.909108229 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.341160984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.601078585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.49928879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.341244071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.533725982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.496796099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.149656704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.34711044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.34488812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.343401462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341080743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.500928177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.062378917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.586998952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.063813508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.585906294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503453145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.350030725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.355057197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.346670525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.151388842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.344363718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.341434269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366966679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.502516876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.487602051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.341238296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.585529102 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.343555198 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347473805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.487161269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.356651253 seconds)
  done (took 81.597965855 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349422579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.344437606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.352905397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.350062508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.342902426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368148026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.34446195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.342722688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.350035266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348178185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350065967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.342907341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.358080617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.343731689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.359556948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.343188671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.359222286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.344907656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360986765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361058246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.34508989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343199906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.343309078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.345239423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347266846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359994938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.360968579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.345713904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344337479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.343330468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.343935294 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367575947 seconds)
  done (took 76.455141801 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.344873247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.35212024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.345511375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344366297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358421326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.361337218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.347848469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347712476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343318283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.344922609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.34451753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.373951928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.345774394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.345775512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.346725933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.347406727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.345213107 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.347081317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.351933827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359474788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.34869775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345751638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.345564661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.348643448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.349081166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364535168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.346765312 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.355450906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.346563222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366786546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.349951909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.347301901 seconds)
  done (took 76.463141126 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.624922036 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.354118884 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.353978856 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.347851676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.356749991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353917515 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.346735236 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.630418255 seconds)
  done (took 14.620339058 seconds)
done (took 250.382361069 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.349719195 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.345538675 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.550799752 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37407533 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.346757602 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.376181092 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.375016401 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.56851182 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.317078107 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.584192213 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.375052414 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.37331146 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.359987134 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.368868914 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.62284865 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.503419004 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.269634532 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.35910022 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.772075668 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.366987472 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.61501096 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.35001168 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62114133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.293226348 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.379342392 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.348899531 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.348453755 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.271182957 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389852984 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.688807036 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.35518771 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.339460794 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.431701562 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.450620329 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567395664 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.507338375 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.349665701 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448532283 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.56969025 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.356288622 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.34793781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.110787035 seconds)
  done (took 81.951882234 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.356783349 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.470579971 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.355602126 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.355476152 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.356520876 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.474733194 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.453193917 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.355366116 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.357169843 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.355676626 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.355303278 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.356235169 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.357351193 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.357911731 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.355581213 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.35591642 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.356424623 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.359764833 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.360576105 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.404589352 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.477774642 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.382004525 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.351699946 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.359709135 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.4602667 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.490463619 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.356617548 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.352071723 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.401797187 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.358631188 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.362528641 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.403827636 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.359187446 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.359378943 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.4711078 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.458848095 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.380736624 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.356899401 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.472244699 seconds)
  done (took 55.382304078 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.359370005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.604183806 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.782230301 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.370134168 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.360113057 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.363511175 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.436904729 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361334225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.365530748 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.365880501 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.525136957 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.361834803 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.393615831 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.803744872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.367983796 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.360360238 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.361720591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.360227939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.613334209 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.374649941 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.455303263 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362906203 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.438216396 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.373193362 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382606096 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361327361 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.367152015 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.94144144 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.362503138 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.528332392 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.129648242 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.437457759 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.888547812 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.792433805 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.130622656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.366910791 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.363251694 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.531515177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365115253 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.392466761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.436566243 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.367654006 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.787875116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.010978401 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.38365579 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.36274912 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.964740915 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.534938986 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.597724719 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.375400368 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.815829559 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.370765219 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.365032893 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.365883998 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.599378792 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.367995766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363290239 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.967227873 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.387857036 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.439352221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.367986894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.364998629 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.613760467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.368141564 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.6102549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.369671386 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.372760227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384535311 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.790587614 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.371587769 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.023883894 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.386147389 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.364091409 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.528746167 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.609837972 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.999504336 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387850681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.616674506 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896526268 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.437230997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.370616707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.937448016 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.44466597 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.372992241 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.366770391 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.366287267 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.366842382 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.420755502 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.438914201 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.969664756 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022797443 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.98923504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.46217686 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.377218391 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.366747308 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.969581077 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.385449744 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.365686546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.791450424 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.026018843 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.385866304 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.375698183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035569533 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.389338153 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.44574448 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.376551021 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.801383697 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.371481714 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.413845527 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.366295986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.375370136 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.390098112 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.444322189 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.373167455 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.366860997 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.012764601 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.560667995 seconds)
  done (took 180.150142712 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.361213146 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.374470423 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.360689963 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.374067954 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.354418451 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.36655959 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.355283651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.356347214 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.356880306 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.350666563 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.351031994 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.35220998 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.349265967 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.35573252 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.361969367 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.358806398 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.3512364 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.352815634 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.350040188 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.348757813 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.34902681 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.354688187 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.346761265 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.348951827 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.349624701 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.349085194 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.356963224 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.372100371 seconds)
  done (took 63.23514837 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.359132214 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.901900368 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.360831338 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.486977752 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.378904549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.356770385 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.482729685 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.414103243 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.360204186 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.355437307 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.358223121 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.650149462 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.360333987 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.856265156 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.547898054 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.486855817 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.858735236 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.381038339 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.357956023 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.357092392 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.487115732 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.374135477 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.654686905 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90609268 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.361505755 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.9035342 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3486075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.359981449 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.359648058 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.907585203 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.361991882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.653878571 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.436270168 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.419610985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.904400474 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.856245844 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.871211783 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.501106883 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.362747093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.358374259 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.359390514 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.350961773 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.906291248 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.362226605 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361192868 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902290366 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.377665879 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.362805232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.365861749 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.358121197 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.418804303 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.417643786 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.655083558 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.979625643 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.43502825 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.376754646 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.48782181 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.735205024 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.36476173 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.858895061 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.369240345 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.909036748 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381028554 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.352522878 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.361880885 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.368106331 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.50522895 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.490809878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.863007314 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379696878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.85906109 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.521901187 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.365416854 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.361857632 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363725959 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.91243964 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.862973062 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.52053858 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.495800857 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553473258 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.357090942 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.362338818 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.35364339 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.438716162 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.365835133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.911227119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.877763499 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.381228174 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363673271 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.36613366 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.366622245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.532687261 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.932600492 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.438583152 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.859691339 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.674597084 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65861901 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.367043625 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.420550323 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.379289024 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.721000288 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.366002959 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.417329461 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.808977977 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.661923658 seconds)
  done (took 161.935811114 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.594894421 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.393166331 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.45243788 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.509977301 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.964414491 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.939248876 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.366175578 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.484363808 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.47138622 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.619140432 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.370894257 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.454479311 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.574067303 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.440386343 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.069053923 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.434211942 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.45600426 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512848698 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.503156859 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.356917213 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.046028923 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.657457625 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.547427148 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.384122921 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.462778917 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.102696727 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.931841458 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.923936696 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.540750414 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.368853692 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.890326432 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.367333201 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.26579767 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.013311211 seconds)
  done (took 63.73377891 seconds)
done (took 607.641274966 seconds)
SAVING RESULT...
DONE!
