cset: moving following pidspec: 26256
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.371355785 seconds)
loading group "string"... done (took 0.59070492 seconds)
loading group "linalg"... done (took 8.202165185 seconds)
loading group "parallel"... done (took 0.172619622 seconds)
loading group "find"... done (took 1.268381493 seconds)
loading group "tuple"... done (took 1.947890508 seconds)
loading group "dates"... done (took 1.353543498 seconds)
loading group "micro"... done (took 0.204226372 seconds)
loading group "io"... done (took 1.005258315 seconds)
loading group "scalar"... done (took 40.574811518 seconds)
loading group "sparse"... done (took 13.152092008 seconds)
loading group "broadcast"... done (took 1.040939818 seconds)
loading group "union"... done (took 14.939303788 seconds)
loading group "simd"... done (took 5.214360445 seconds)
loading group "random"... done (took 10.082176347 seconds)
loading group "problem"... done (took 1.64294509 seconds)
loading group "array"... done (took 23.571744742 seconds)
loading group "misc"... done (took 1.746595911 seconds)
loading group "sort"... done (took 3.643046397 seconds)
loading group "collection"... done (took 18.887155838 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548670095 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129753423 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141677092 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124162457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154044567 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.942073459 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125115584 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084929629 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.849184609 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151368448 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117638204 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428719434 seconds)
done (took 68.175971738 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177806105 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089056156 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083663665 seconds)
  done (took 1.213636138 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067820994 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128791587 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068937036 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069488402 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069875562 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069286449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068751213 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068824981 seconds)
  done (took 1.586076995 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073727272 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070973132 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068496592 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070174706 seconds)
  done (took 1.325558083 seconds)
done (took 5.432328065 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.814523839 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215662891 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190421617 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.423404352 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140631152 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185063749 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647010061 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323654862 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205256768 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098287463 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117286228 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370151756 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12764515 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649186109 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078052539 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09668343 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140854381 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461804111 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072745123 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087786818 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095942282 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131305225 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089142319 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077422215 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150160324 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070723717 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144623718 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085588923 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069369515 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226612794 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180286641 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660320445 seconds)
  done (took 10.506892876 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10368989 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103673237 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07136223 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128713006 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102025362 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073179036 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078170816 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070037493 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096390255 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133206033 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0959574 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112445526 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068686291 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072197018 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086332641 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201621174 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081128589 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083524137 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075231946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081106645 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110902747 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081607864 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083369789 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082890765 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13246322 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.172696849 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098746455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100627588 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070038284 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085067859 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117670244 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131716998 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068756161 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068915864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128878004 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097635268 seconds)
  done (took 4.632071568 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.029785778 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15530973 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094298135 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093032864 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139848251 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067364194 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116812754 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067768063 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085998227 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24243778 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.453798563 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632895984 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126911333 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120835577 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109466209 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073858965 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071924193 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06674218 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096131737 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070050487 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.280166686 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102819945 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111552819 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086550024 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072941884 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07241054 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067366578 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07472948 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066241511 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070946085 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091742315 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078563496 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333487361 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129273098 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070771024 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.846644994 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171601652 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071082144 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108021548 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169912154 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097601888 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144919282 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069810801 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065999716 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.298933184 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067892609 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074463637 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069273191 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088395649 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11201761 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124351684 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067748766 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068959363 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172316016 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068129534 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087679549 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.240040786 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153755779 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066285238 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303167492 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095923961 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074253588 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067642879 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199375099 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118510088 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070392548 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070696161 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071514978 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071502019 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377930447 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068402196 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.220072594 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069030084 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080308513 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07301288 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07423625 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082102978 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081966445 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094199286 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069817623 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077612188 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069445313 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071286621 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069090916 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095791003 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.395856869 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069254734 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074718707 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066907189 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09483546 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101375212 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07000833 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068002809 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104823864 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070926644 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068016727 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06998499 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1230622 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072780331 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115267463 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069824097 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197679773 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06587113 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100435407 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072983228 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104169739 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081221294 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073996624 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.47593121 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067240826 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075258488 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068475034 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069915083 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069308922 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081425709 seconds)
  done (took 22.413921693 seconds)
done (took 39.626274608 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249918704 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089499084 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0864205 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087059279 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086966209 seconds)
  done (took 1.731179193 seconds)
done (took 2.845429964 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129696192 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102464854 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066829491 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100800261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070159098 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10433798 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104037082 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08671741 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103827516 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067089739 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100875282 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066624857 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06704983 seconds)
  done (took 2.296983486 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083797864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085490082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071922875 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084620629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064709216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083790691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08315854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091091607 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083376766 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074749912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064683556 seconds)
  done (took 1.976666372 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082649698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085817288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07160432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083751594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064840537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083693592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083394935 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090772778 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083823442 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075279295 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065013843 seconds)
  done (took 1.971835636 seconds)
done (took 7.344778879 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077298425 seconds)
  done (took 1.165427149 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543305617 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.695889861 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079242747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104135348 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199251104 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113108295 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241353008 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086326642 seconds)
  done (took 8.332029665 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098962158 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073602653 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083173285 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0719388 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071514451 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071596007 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07148151 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071632567 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072546475 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072428074 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071329748 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073334091 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072260351 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072471208 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072313618 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073314693 seconds)
  done (took 2.372491953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099650988 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098618885 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076381877 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078369518 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07535254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074544245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077522881 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076680828 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073845033 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075379724 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07843722 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077111141 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075791361 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066836528 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076956208 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079250271 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07385214 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077378671 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077818121 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078105075 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078537773 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066638862 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075974229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077485584 seconds)
  done (took 3.073615341 seconds)
done (took 16.04542201 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117702484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081236198 seconds)
  done (took 1.296319848 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080104887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082797578 seconds)
  done (took 1.269696206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079071262 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064891842 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087317901 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076662706 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065585872 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065257089 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086347826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066043564 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06628255 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066337041 seconds)
  done (took 1.831127004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066849789 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075820239 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071721798 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081655569 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073717441 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067151608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071718888 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06843182 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077094915 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065432847 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070850546 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085647071 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070764345 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087872402 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072154446 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070437703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072658442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069534567 seconds)
  done (took 2.431612096 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064271509 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065999965 seconds)
  done (took 1.244531134 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067548139 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065844755 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068308534 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06831377 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06534733 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06488055 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065689396 seconds)
  done (took 1.575703632 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413911421 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12559835 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.341365306 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073450156 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083722224 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262378102 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066705869 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0724628 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0716614 seconds)
  done (took 2.664959119 seconds)
done (took 13.430287356 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081501324 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088803891 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101851174 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42180416 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09595798 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07066809 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115969756 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186374604 seconds)
done (took 2.28605526 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226362861 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.104685054 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.503586097 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215845813 seconds)
  done (took 2.940542105 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355830041 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083400475 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079591211 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06954078 seconds)
  done (took 1.715241484 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.18449137 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072636579 seconds)
  done (took 1.379078451 seconds)
done (took 7.387313202 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067268694 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066375563 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092388767 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066371383 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066444764 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066684844 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066918268 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067042349 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066561471 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066860515 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066359961 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066630092 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067041244 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066799239 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066618717 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066395919 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066763708 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066863581 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067467472 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067064491 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066331862 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06708784 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067088736 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066289073 seconds)
  done (took 2.784190653 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084461618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069385388 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070862576 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070602896 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071734424 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071102398 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071319986 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068967517 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071254398 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06928091 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072166747 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071639744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068499989 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071709759 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068993836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071281935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071449323 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069308362 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068744654 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071633098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070922048 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069396589 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07149321 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070677583 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071864102 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071693935 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06886618 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069178861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071040428 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071694888 seconds)
  done (took 3.261336529 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066923168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062955283 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063899498 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072800781 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063333772 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064012505 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063293254 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06325544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064024315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063291394 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064349199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062959648 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062707937 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064268699 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063672291 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067745905 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081176985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06315094 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063505104 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063861571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067378825 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062995349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06321469 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063124464 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066240055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062808548 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063497691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062816119 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064217202 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062957809 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066774786 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06742544 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063043564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071894255 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067629034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062955316 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066904046 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062937983 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063798875 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062666394 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06264866 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062860223 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06334041 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072281057 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06355667 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064779588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063354903 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064208434 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063370459 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06532325 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062754857 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06291568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065338292 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06409419 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067977496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062571765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064013485 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062661177 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063596501 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062849945 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062526632 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062784654 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065977938 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06384683 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080686112 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07231092 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062871091 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064504589 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06371691 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06612772 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064818747 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079174588 seconds)
  done (took 5.826157094 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087582585 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090769692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068834872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068147059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064043281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063676194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072471301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063868317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069156657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083789452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064767935 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06861845 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068604908 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068149458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064175683 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068763583 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072899446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064260646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06402473 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068058563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06451913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072355643 seconds)
  done (took 2.685897028 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149367819 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069958912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108514129 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07559518 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072894745 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075467235 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070010123 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070079124 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07009134 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070444829 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070404763 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070101893 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072577904 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070452077 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070828063 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070258427 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07001609 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070508092 seconds)
  done (took 2.534302302 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080669272 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069960303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089247805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069307368 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069319461 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069304931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073674347 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074706122 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069638325 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069436008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074606268 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068970458 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06895966 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069289477 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068980439 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069855335 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06933057 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069573428 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074481963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073633943 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083251884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075128288 seconds)
  done (took 2.738439044 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080191877 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068367077 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0846155 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070804911 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063953011 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063764919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070080464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068842098 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070182978 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068569237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069239176 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064410243 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07163837 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069133451 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071713873 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06897727 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068067893 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068713865 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068338488 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063840259 seconds)
  done (took 2.532634018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086079062 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067467952 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066761799 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073528809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066904251 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066840688 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074255613 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067862807 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067092937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089190896 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067162491 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067566845 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073943728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071312561 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067205278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073930381 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076294997 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074146011 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066947934 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067162713 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088271332 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067845642 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073628649 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067520275 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067081317 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067074745 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067029907 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071343919 seconds)
  done (took 3.141237594 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066968897 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066824642 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067304134 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067122633 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067054655 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066663449 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066952067 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067074177 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06630824 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066795841 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066349891 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066212923 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066096507 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066431854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066135275 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066397471 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066715238 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066801526 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066943443 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067095602 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066588996 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066604128 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066684638 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066203027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066577939 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066017822 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066582516 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06627092 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066348657 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066342643 seconds)
  done (took 3.14373753 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077397217 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075905905 seconds)
  done (took 1.297963668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064833065 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08115723 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063039276 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074599913 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072864906 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066855057 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07364648 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073014073 seconds)
  done (took 1.710059465 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087880695 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0778824 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066534142 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078729344 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077373285 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087328829 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129216582 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065966696 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076597342 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066838741 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084451762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068342243 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076996368 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070627211 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076474627 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079817088 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063581834 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071319795 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067304852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064469196 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066694129 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079865733 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075903066 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063979063 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071577229 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094470758 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082572804 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065356936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073008701 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078687394 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076440712 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063463182 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065489262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066429075 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064188677 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076982295 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085153848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072633175 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078598612 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066212584 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074670301 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063765957 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074517386 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076452416 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081835185 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065889931 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065915198 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06335612 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067015594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072309128 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063675455 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070413138 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062953731 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077841632 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073415598 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081073111 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064736409 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071657951 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07247167 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072820751 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077441773 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072505506 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075175993 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064973367 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081331777 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075037156 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077906558 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063530743 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062535284 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063788787 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080263048 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095034688 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07538779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066150729 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065989345 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063231036 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072415479 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066160188 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074922 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07713219 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065741664 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07097529 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077867608 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070367776 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072691592 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072555586 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063941835 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068820128 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066562801 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08598577 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0649162 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063522115 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066584916 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081409767 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075295985 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065461957 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066797669 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077574126 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062850433 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065973271 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06616985 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071786605 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079472892 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069758854 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06980687 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07813717 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074027777 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070363183 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071534802 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062145127 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065300787 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06670474 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076655929 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061778755 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071522451 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068733816 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06467335 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076075567 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06294295 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064484352 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077234502 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075871534 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062766918 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061746777 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07159009 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064287197 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066674941 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077934761 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06329163 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062564849 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063593986 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073090478 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064630313 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072655016 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068394327 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072853758 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.189491569 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065436798 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072128419 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080049193 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070167134 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072502705 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077073793 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072249432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0655378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079327995 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07358799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068774546 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076095443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070170106 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063725623 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06848677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073172923 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064615675 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073208488 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068346844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072667353 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066484429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064954493 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071780045 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066224308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067813001 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070604762 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06504608 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081080833 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072630662 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063564364 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063445502 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073245706 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066870143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065292258 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067649194 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072254137 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066463769 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063990136 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066153748 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072672437 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074209688 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069331138 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067014408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075333445 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083903066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065008688 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072938829 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06596539 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066954586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066955356 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080973825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076584543 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070104486 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072929159 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063219205 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075874546 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078195234 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068127075 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063600778 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067991453 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069452973 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078097045 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069806749 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066460916 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064458546 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071643493 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068510439 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072380485 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065347118 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067945378 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071115356 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064177962 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071975764 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066106118 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080505353 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073262717 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06446997 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068310406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064099415 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077179909 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063890872 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066633231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068172727 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066785999 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06490785 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072527091 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063053946 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078828698 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079064415 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07113975 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068308928 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065601157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077986792 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071458836 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074282484 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073282774 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075753789 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081202244 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06808208 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07270111 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081485653 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065759304 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062623382 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075504291 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067443662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064545552 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064403136 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064120265 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072654298 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072889854 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076491057 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062471761 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071190985 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063094836 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067174029 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062560456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073228431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071928804 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069177664 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07686978 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064949328 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064401839 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071772859 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064309721 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064870308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065334298 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071473433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064805038 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07052326 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067051398 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070764609 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066796357 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06334175 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070790446 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064674824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069988929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073572186 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064441392 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070491593 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072121072 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064683238 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.202848944 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070614293 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069657743 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075295972 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073073394 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072164168 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073801013 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064194971 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078829587 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065921481 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078991661 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071273042 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063255913 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072904764 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072632708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071186584 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0663978 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066795546 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071973903 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06545808 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073004149 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078240575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066978703 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082371758 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07754459 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072304909 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072516236 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070864325 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07131513 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067961649 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070142497 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066494192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071085043 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065296099 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073867627 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072911897 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071178337 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072551888 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066795466 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071454728 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066607015 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063506518 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06898325 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068274001 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065995984 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078534593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066167055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068953689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064965095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066748521 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065480477 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06281742 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074018744 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074260309 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066708316 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077283966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068648982 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072834314 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08252343 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062980423 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064401748 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063840564 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067501638 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078722687 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066588959 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080217714 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071196099 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068635253 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063311831 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06628167 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064524074 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063490489 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063682255 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074628925 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068004161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064955824 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065862328 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07252505 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066683501 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079238741 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065178236 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069849613 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065964971 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063402619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068472998 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068089148 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07280141 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066519658 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067384985 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063508408 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065590622 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070273153 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071915423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065334072 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071911567 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078376867 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065569369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072692391 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067978138 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063212459 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072903129 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065191373 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065809576 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067849926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073551373 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073164302 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06645286 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080552553 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065308594 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074824876 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066032768 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063750013 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065119694 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065117525 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065328 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067659402 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066328822 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078798086 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063274128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071155747 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06964356 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068528634 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075067285 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065479623 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071153356 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069842981 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066486495 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071103472 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078200579 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067803564 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071849419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064940227 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070619338 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074654456 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066998995 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076022512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070087274 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065025541 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070954873 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066036271 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064501929 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064929952 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063788284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07504138 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.199891928 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068957039 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069225952 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065017137 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071030213 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069236941 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079626583 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073737499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074036217 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064126273 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063631807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066301411 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067400633 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071975155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07339339 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076342624 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072930213 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069751681 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065000612 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080860435 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077508378 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074339806 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067337012 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073860569 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066863088 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072800431 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070056853 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071511111 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066848608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074645535 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071731261 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068302199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076406521 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074612 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067072069 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072046811 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072049646 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071053119 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06436147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066485122 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072513987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075689918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072906566 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065702106 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081429896 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066614116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071009653 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068254604 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065280496 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074826422 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06391265 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072703759 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066910047 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067377633 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064241621 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068444085 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067531683 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07276783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068500555 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064142314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081963957 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080679545 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072214144 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066182219 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064738846 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064277016 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064042558 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068862092 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067262935 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071794668 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081741666 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068362477 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068511548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.0638763 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065686377 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072843615 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073485501 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063535799 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063935634 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06797674 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072120569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077465152 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064681311 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065881687 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0732383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072568565 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063968142 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068949008 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062921071 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073808883 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083256228 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066074325 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071760554 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076498287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078771515 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066123107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063862761 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066208565 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072089498 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071120614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066726567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067076467 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08577325 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073052292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068009044 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064863819 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072571552 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068645963 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080051385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066387885 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066337267 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074555768 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075041118 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073591532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075952498 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077441208 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071956295 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071735717 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06443608 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070726154 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064697972 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068431478 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066020115 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066209994 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069074586 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071509331 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069474805 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080890059 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079427519 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067906187 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062810197 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06792703 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068441153 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063301036 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065670437 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063286724 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063744543 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063421214 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064175045 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070947421 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073658082 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069375731 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082338666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064362226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.201894712 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077128632 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074134287 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073586076 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063802542 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067103241 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067119319 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075292978 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068742998 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067711746 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072085118 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071836285 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071990122 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06380135 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077756313 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065193598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072059228 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068169531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065451616 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066194819 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073435249 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070504224 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067301726 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072540435 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072627172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066950083 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063381493 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063252224 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075744612 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064187624 seconds)
  done (took 43.58548705 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104065822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065760835 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064902844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064999598 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0748109 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065974776 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064423638 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065852668 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065821801 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067604412 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064538061 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064581099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072650148 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080466572 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075385554 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069428439 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065183873 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066281844 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064788082 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066011724 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072864705 seconds)
  done (took 2.734448824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074086662 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080724821 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077913994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083055124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074151517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070546749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078030467 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070026456 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0787375 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075489301 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078308318 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069994407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075232087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075292469 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075452442 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070479777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078507201 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074554628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070171124 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078305365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070461851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07797475 seconds)
  done (took 2.901726296 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06710395 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066148314 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073203628 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063235964 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065647756 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063771971 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.0692075 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063673491 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067791405 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068090518 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067947243 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06819712 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072508665 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064273947 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06914564 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063766754 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111389565 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067893521 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065744819 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066240062 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06423625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073049 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064026063 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064633422 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.0675946 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068459439 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065818667 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063888252 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065293489 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067922952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065434861 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063902473 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072697747 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071605233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067502956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067751119 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064960921 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065561224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064271278 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064208787 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071682066 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064476271 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069469122 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072573005 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064397072 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064028186 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072250622 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065601457 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063695038 seconds)
  done (took 4.574570133 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078302806 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114897893 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070848347 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093773526 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079771362 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072404051 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070748122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095669221 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066425765 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066791546 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080858322 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081187665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068204671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070520195 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073241372 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068192681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06925308 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067274489 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071179955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067777541 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07208273 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072692455 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079827625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080106419 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069207639 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067017663 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067461454 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06973802 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079545424 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072462595 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069656597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070346307 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080096528 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071104388 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067410122 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067393916 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080769908 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068756065 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067903801 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065906601 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067497009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070034609 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072827678 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081267392 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068742034 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073120187 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068074507 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065640056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08013729 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067701926 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073102809 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081475691 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069252449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068401988 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069648048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080290008 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068392598 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06673271 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068265522 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079862057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065931326 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06930936 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081348885 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067703767 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071781277 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081450001 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073792907 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069648963 seconds)
  done (took 6.38044431 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077001573 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09754217 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083625725 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08296985 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076110607 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076508534 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076514887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076338829 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076539728 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080908585 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076809353 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119381517 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072127178 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078221602 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076477989 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076537949 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076497381 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076567672 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076614519 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076719815 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076844736 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08239509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076327356 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082790871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079762536 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071693039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076010211 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07564659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082940446 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075773014 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079499071 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075983864 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076042948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082855121 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079978041 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075578847 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06547476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075733787 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075938947 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075794009 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07205139 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082577749 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076137702 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071656478 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075977983 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075923185 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082779326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079515396 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078401172 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080206986 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076306707 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082558228 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075643059 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075698477 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08271901 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08563434 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082744334 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082742373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07605296 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082272492 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082748153 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085942295 seconds)
  done (took 6.176553811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082170418 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07279986 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085615158 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064451256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064306992 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074878281 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064281093 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064283321 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073289441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076076539 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07563187 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075450238 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078262611 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075309474 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07580842 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078198605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07536968 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075513697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07323554 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07494312 seconds)
  done (took 2.755778241 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080355434 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083933798 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070298197 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074646141 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070653416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074946545 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069319813 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070278355 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070508849 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070053581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076405936 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076868205 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070773601 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075174257 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07646881 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075316029 seconds)
  done (took 2.448106758 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087455237 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073611315 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080581367 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06616605 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06938719 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065199746 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065454992 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063858888 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064740973 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079316161 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065336051 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077151056 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065782236 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065083164 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065100064 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071778477 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064865122 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065783799 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065793271 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07942886 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073381017 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066860821 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069529572 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065895074 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071930807 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073474526 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067472217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069609188 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066044034 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066197962 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071779775 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072939821 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065673432 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066481991 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064964111 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065424865 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065694708 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084983432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071779414 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065608132 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0637826 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071493668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065670684 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067178838 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064830375 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066216033 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064796568 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071617645 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065866176 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071523517 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065482687 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068156904 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066284534 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073368843 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068581469 seconds)
  done (took 5.066304188 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0824374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070092565 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064287767 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063961159 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069318315 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071039042 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069818161 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070092904 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070686512 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064526495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071145929 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069140768 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071056318 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070894476 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070471047 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069970031 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064403603 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070394504 seconds)
  done (took 2.531110643 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076326312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069518854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074225644 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068714173 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069123391 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068748911 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064174353 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06434629 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064261572 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069415498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069609002 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068604717 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064094953 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068844298 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06908522 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069156788 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069034052 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06413168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069080005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064251743 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069029166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064707953 seconds)
  done (took 2.7651763 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099194705 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086029086 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145598594 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082365618 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090277533 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074485534 seconds)
  done (took 1.846044939 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096646778 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101318989 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069553003 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069087203 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075612407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072782264 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072605837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073793761 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078225719 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078385649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073005629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078756121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077740161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080446915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075510396 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075879005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075586526 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072714729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069493354 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083269369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073665462 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078124123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073408149 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072998058 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073134691 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080250579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078147447 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07877601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073216421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078300241 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075746198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073169916 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077942576 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078617225 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069600175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077848341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07336906 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083282657 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075554879 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079874986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069727865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07544396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077673593 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076836557 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077753737 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073385619 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077262496 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073172445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073403234 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08440116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076276928 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07971475 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075592116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078283107 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078168047 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085197171 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078668125 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07996722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075455325 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077846289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079775657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07514331 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079355864 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078703005 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075431068 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079589445 seconds)
  done (took 6.358762632 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108125856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070121799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073713698 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078670357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079660958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073722293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073547786 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073604731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073876171 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070212065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109246464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074078377 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080172526 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080599461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074005639 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073616856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073782221 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080009965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070637644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084949753 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073437581 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079733338 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079974452 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0800798 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078434945 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076067446 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073453319 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07305826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073092016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073192816 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077225662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073722965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080156901 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0703034 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080039803 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073369062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073015406 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077594129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073086695 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07553481 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079920182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083168201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073250646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073431529 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078134017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072964373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073172853 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070049819 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072997101 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06958948 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07857259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078007503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077846286 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079520286 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07312684 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07320196 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073800355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075420196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073751838 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075518397 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079735579 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07294811 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084797908 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072961533 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073263574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080388237 seconds)
  done (took 6.35004546 seconds)
done (took 129.256424329 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213535066 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185114283 seconds)
  done (took 1.64903151 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.077290042 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.108224698 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085537843 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136767971 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07178506 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108307079 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105203314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084403226 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074202436 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073750712 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073957849 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07644131 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139980196 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072049016 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073839997 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076529628 seconds)
  done (took 2.71206039 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108477316 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172569565 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111999911 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071344489 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108267767 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080039434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071286203 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085263504 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078560464 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073191219 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08030377 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07824071 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073249392 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080795121 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079191031 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080458226 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073251518 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080047961 seconds)
  done (took 2.861861884 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107626688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097974506 seconds)
  done (took 1.484584012 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.181764864 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135761663 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205445637 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343219028 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158275917 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.4401403 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14657165 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143031696 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11686341 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136495031 seconds)
  done (took 3.280285113 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106771348 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197080402 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301107278 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124450463 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078835263 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115962871 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127042158 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084914665 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082800021 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082787555 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082690279 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081276782 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10405267 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080130429 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078720828 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081664525 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107019232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078051667 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078526625 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07923432 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107716215 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072389425 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079949483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077288164 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080397215 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08085336 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073472543 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072117446 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079282328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07868875 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082278947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112451717 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08021296 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108140616 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076643596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109107677 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081560542 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076901765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078345408 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076858453 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080571325 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080433118 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080820901 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081143154 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07320525 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081273237 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073372812 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071885961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083386902 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073435733 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083476159 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082599113 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108168572 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073375732 seconds)
  done (took 6.267346295 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111452136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107503635 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073022376 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11711718 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107596548 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072804305 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1094393 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102618843 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112046051 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074033557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071473998 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073837772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082338907 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085609297 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119920708 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109643816 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076505389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073329188 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111562866 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111687511 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07260815 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105198065 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101857952 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111911915 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071474385 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073115186 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071747561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073070592 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079331018 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081055419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072276614 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082296811 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08917557 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077895724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070048237 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071306889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071625969 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081430605 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081718995 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081536777 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080085502 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070798799 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071376488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072474293 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072005897 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07110636 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080361919 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082008164 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080612596 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071425027 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072745978 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071625163 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072199213 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081360077 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079298457 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082661973 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082280381 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071528827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071039177 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073965375 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082912183 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081241394 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0812454 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072064103 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08197929 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071453999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083481661 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087315156 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074308762 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072668652 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071304546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071549031 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072521959 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079523025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079951864 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07350681 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071289054 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071854216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082074942 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079650603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071402679 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079005304 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070238334 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071145034 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072934599 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073308812 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079134276 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081465386 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073827525 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071837415 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071650705 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07159226 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070459096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079523075 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080955437 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080784884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080180993 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072370553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079854413 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079790485 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072433094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079963478 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071555531 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072586562 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071506998 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079039292 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07771686 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079318792 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070696702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070129779 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078034775 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080445833 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07104759 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077984314 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080699913 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07885631 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070430682 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082089438 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069269948 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080513961 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070901735 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217374353 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073749063 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081740993 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073169035 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07175735 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072717182 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082891174 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073699582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071940653 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072915729 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072703975 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08096729 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084907635 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074822862 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080511957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080882427 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073910166 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080560157 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071888325 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08139772 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072238471 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07284157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070802065 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0842565 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072274856 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071496305 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071833998 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082404751 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072031529 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082766518 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0810264 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0712164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087062761 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080192094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079547193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082525498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073767127 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071307575 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071540627 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071393736 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079376285 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081334954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073314605 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072229352 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080041761 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083266118 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071517036 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080812371 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080561457 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08060585 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072470355 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072101205 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083397384 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08102798 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080818409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080615091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081685915 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072710908 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080856765 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080693898 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071977277 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086535488 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072928522 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08474526 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081245488 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079192848 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081009115 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082105676 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082870267 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082931216 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085910506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071634254 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071456851 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081193102 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072145824 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071762533 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079797995 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073730676 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073579509 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085436528 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070065792 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082691287 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0715143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08182687 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071567617 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072918401 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084857558 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072563364 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073220374 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080821156 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072439116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079766702 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082993098 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080344048 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074447856 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073052638 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081848198 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081117084 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071701143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071400352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072858488 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079843181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078698362 seconds)
  done (took 19.080824759 seconds)
done (took 38.631086923 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217795951 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158741753 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19381144 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120507693 seconds)
  done (took 2.070478565 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113492162 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10200947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09182834 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068152034 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097955232 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068004075 seconds)
  done (took 1.854156757 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.346523052 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219144239 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.19924939 seconds)
  done (took 2.072515214 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.229784219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212036344 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472776155 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292206445 seconds)
  done (took 2.616939391 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150250202 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085942696 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067266433 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080937475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128426968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.181236289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097237719 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.132379478 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074805265 seconds)
  done (took 2.368379428 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151360732 seconds)
done (took 12.466630939 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.107846226 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140873259 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075459346 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071388789 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077883762 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078295239 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079872845 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106288297 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077068444 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14417118 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.249041734 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079339327 seconds)
    (13/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080626364 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088178642 seconds)
    (15/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121963505 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.202984898 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130447022 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201407093 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.104315498 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.147075727 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080953166 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077984636 seconds)
    (23/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.307532539 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096095975 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.217068308 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077553667 seconds)
    (27/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.241478353 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095741488 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136065603 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072910465 seconds)
    (31/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.185940709 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073715538 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.187356299 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076808105 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075483001 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.222423012 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06878616 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.220015882 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094099289 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123957368 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208494169 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.24373718 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091060279 seconds)
    (44/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1705364 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076390004 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067713863 seconds)
    (47/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069006812 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140553126 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.186430651 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133976599 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.176279818 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.149729618 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10289866 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089948088 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076873091 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091027061 seconds)
    (57/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070155861 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12187576 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.069001278 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.177884394 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.180098003 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093823495 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075666289 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075570489 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068660406 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071030873 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078043205 seconds)
    (68/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.142808928 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068142097 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.235800362 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140588619 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076771705 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091235972 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182622968 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.228221599 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068052213 seconds)
    (77/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076681005 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066535207 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092937811 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183204093 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075975512 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072151818 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221584198 seconds)
    (84/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.143956342 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070135279 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092394368 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078526931 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195532177 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.229887065 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068094941 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068892648 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220755036 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180095505 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069933659 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.225287195 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069728047 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096106994 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070277238 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068789799 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.186595464 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181117893 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075865731 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078372516 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077131606 seconds)
    (105/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07414591 seconds)
    (106/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13323623 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138804766 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075958614 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071187858 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08478888 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079936087 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069254942 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068560314 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078265076 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116795135 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075524357 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091971402 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177953042 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.132493325 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076412032 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094341546 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076088445 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077398735 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077305479 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068608787 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.101811641 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.069132102 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143903755 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075405985 seconds)
    (130/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143888528 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089565239 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096152369 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133577088 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078800021 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147845922 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08168318 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18606821 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137246292 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087745805 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078666961 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 0.136945624 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068335047 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072026175 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077112037 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095373651 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076203255 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07269466 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070662625 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127962916 seconds)
    (150/309) benchmarking ("sort", Int8, false)...
    done (took 0.150415003 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077596078 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093782242 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.177387696 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069564416 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068564385 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068179247 seconds)
    (157/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.129904835 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137907243 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127355934 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.235290545 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067059057 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07446517 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077006839 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138147561 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069062259 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.199833937 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069221133 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068714846 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074760693 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069855247 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169850846 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196783567 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144146304 seconds)
    (174/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07629616 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069208301 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173281379 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068393956 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17929761 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081770719 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067849431 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067774674 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18306211 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091044863 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094412065 seconds)
    (185/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172432941 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080323714 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076050817 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205679384 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092901071 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068754265 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067569977 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12107043 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07616489 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077767011 seconds)
    (195/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068788151 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068126651 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068957874 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092153277 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076733375 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069855571 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075302112 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.138837587 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068023291 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067683357 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.119999519 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06756804 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067962976 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067767329 seconds)
    (209/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.293338891 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070451841 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070942048 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180529645 seconds)
    (213/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.188678903 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075503194 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092218104 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073431864 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203385954 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075493211 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068200333 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.082255697 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080068894 seconds)
    (222/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130711659 seconds)
    (223/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090820854 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077309251 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078891156 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070126553 seconds)
    (227/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069791016 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072677532 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141538294 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081865178 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07034802 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069396189 seconds)
    (233/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091221776 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117447466 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069411162 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068771625 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067764752 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076668137 seconds)
    (239/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069660153 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126451555 seconds)
    (241/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073603115 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072973908 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139515608 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176144102 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070119697 seconds)
    (246/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069451076 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06977914 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081365271 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081843558 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068292116 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083256252 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071282117 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070163829 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084126718 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072369366 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072118653 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068141931 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091970741 seconds)
    (259/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082508651 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069183647 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068463256 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069419186 seconds)
    (263/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082593377 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.069979428 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097532363 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06847014 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07145222 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184687724 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069464744 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069072273 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124609788 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077732086 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069150448 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078093039 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068576665 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069058395 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070106097 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074846128 seconds)
    (279/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071068182 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068127133 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068590157 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071028034 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186198613 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068600846 seconds)
    (285/309) benchmarking ("sort", Float64, false)...
    done (took 0.134345678 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093157741 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135219989 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071592435 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076282298 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068844857 seconds)
    (291/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080435151 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06785385 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069511253 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068571967 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067715044 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076779983 seconds)
    (297/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06922473 seconds)
    (298/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074624536 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068191961 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075061446 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067634388 seconds)
    (302/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068615193 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068808632 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08127592 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068043027 seconds)
    (306/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07452701 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068182926 seconds)
    (308/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095599356 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069492129 seconds)
  done (took 33.912813511 seconds)
done (took 35.236252008 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089564015 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103218161 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076977717 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097065266 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084262641 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100798313 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077400339 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082710379 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085082822 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083282885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08264812 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075432097 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078024773 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077983321 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075902198 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101623064 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082982913 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076653663 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076790293 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068119681 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076922115 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06888072 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068116052 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075676412 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080125644 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076118419 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078064077 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078345193 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068486806 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068823317 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073664497 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077966536 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068944282 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081491252 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07817204 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077428999 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078717646 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081284643 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068372614 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069430301 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078919749 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068633156 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077167378 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075068782 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073315532 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075201197 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076856179 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08122579 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101334924 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073707611 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078862995 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07992218 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080730938 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073906662 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073772829 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076850531 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074403857 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10106889 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077438907 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07356199 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078101294 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078023276 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075158906 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076606611 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076855397 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07904812 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081074003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074696016 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079033688 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075224932 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068489193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076909879 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073276943 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068450568 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079821616 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081199088 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067447346 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072404508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076437003 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077672487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071579446 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073804116 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067983498 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073301967 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073591824 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074607483 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073542658 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07559521 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068009085 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077108235 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075886243 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076559412 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068077413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081253261 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068440007 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074497942 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068767015 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069087253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068173141 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073560963 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068125048 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073336201 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076844974 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06749908 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072862618 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081659747 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06816709 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075927642 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067478263 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067905896 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08026173 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078559232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068046935 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073374703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067507071 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073110407 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067502941 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067530112 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06772786 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06778015 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072212523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067826543 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073150486 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073120885 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080480959 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067737195 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072591573 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073189101 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067695892 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074690365 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068147038 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068239574 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06775759 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08198342 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073410241 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067900409 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073565366 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072843758 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075591467 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06677379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075907634 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073081544 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071603586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073840801 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066455788 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078289941 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072151587 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07217392 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067114756 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066816772 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066210229 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067021127 seconds)
done (took 12.878088737 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074548513 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.122388424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097458925 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097221389 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086315152 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070342442 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078028216 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095659503 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070931314 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100624073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0922611 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091505123 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113117046 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067999449 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068743722 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070218746 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070884485 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081796848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097620678 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091887541 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109798239 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068796455 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089577074 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090187441 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086526271 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093817889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069991811 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070854628 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072132281 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091262766 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095489223 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072191391 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070177683 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09468431 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.0887432 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084003276 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069944762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078657873 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069882694 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068921971 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071504942 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09077002 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078743046 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080856909 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07113033 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07734912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070165401 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086322894 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088644616 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078679265 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086386731 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.095411699 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073871092 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086308779 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068352613 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086301285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079353242 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069657199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069694486 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074513271 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069565823 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072261311 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081400118 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078819919 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074316325 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085307694 seconds)
  done (took 6.799655561 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088652071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097770941 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087301542 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086996563 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068953738 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069538362 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06923004 seconds)
  done (took 1.988826551 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072876299 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090627465 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093635898 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093734013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086457029 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094540419 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077835038 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069741184 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099387211 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068892746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089882369 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101533464 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074053844 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081795372 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09534071 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069535523 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09485021 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069813692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070651939 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095011285 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074410426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098121129 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081281389 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069851436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082699615 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070289283 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102986935 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077561364 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070731807 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070736807 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070645636 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097488133 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0821668 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083946995 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070540682 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085022217 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083528154 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073500867 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080934312 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079421071 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083109291 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070921942 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068577439 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071000884 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073087441 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081278793 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069199275 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071161057 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070811656 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089614385 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068931761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082941814 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073540561 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076418476 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075811063 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075418856 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078304382 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071785326 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089980109 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070820326 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087241598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086937244 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083250656 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08652216 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069821241 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082320312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083084823 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07048406 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071740982 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071093748 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086757366 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073130803 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071658441 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081326077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069291192 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094482415 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094589594 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069538121 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083363731 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070635369 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070720168 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081429578 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09499254 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075679725 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070760562 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074444308 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07171336 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072711081 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068294359 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073620876 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070547121 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074789174 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071002062 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073448593 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0728876 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086595623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068953654 seconds)
  done (took 9.076148084 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073096115 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070837124 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072410765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071113095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071321209 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070796494 seconds)
  done (took 1.87828184 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103894826 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07091063 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08363184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070832528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107054926 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086944846 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086807367 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089976462 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084830546 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082538006 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087370969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089760397 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091721437 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073555789 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08673787 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071697843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086899783 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075439771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081882363 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073808485 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084573795 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073004489 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073582614 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091412976 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074921936 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072109208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080663141 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082958655 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082193481 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.097103578 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073020156 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075078186 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079472369 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.089510181 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08700176 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079192692 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070859704 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077340715 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073982258 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07463456 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0897798 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073220384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073014992 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077396802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.092005172 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079140291 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077173562 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079479264 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08619313 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077017704 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076995678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071419312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074067332 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077665281 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078696179 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089100821 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077389448 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086733427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072396366 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078713201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070415124 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074251002 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091156142 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07420373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078595019 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077221745 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078609945 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072814565 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073088521 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070482565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076944782 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070461836 seconds)
  done (took 7.189273601 seconds)
done (took 28.381781264 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.521528096 seconds)
  done (took 1.918901195 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634157607 seconds)
  done (took 2.064223475 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.511433484 seconds)
  done (took 7.939714741 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.427851792 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.66144463 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.76128246 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134412926 seconds)
  done (took 3.443935436 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.721058829 seconds)
  done (took 2.161601212 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244143671 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232173224 seconds)
  done (took 1.923983724 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.356329797 seconds)
  done (took 1.785248047 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.069509164 seconds)
  done (took 2.499626514 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26035598 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174291288 seconds)
  done (took 1.869025919 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455981732 seconds)
  done (took 1.887266217 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.234431173 seconds)
  done (took 5.668837621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226114531 seconds)
  done (took 1.698753377 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240654952 seconds)
  done (took 1.670552061 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.835982107 seconds)
  done (took 3.262649956 seconds)
done (took 41.239870591 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08731611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089508457 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089433674 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085595909 seconds)
  done (took 1.758113835 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07900115 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074478382 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077829394 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073811258 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077781943 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074135357 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075867516 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076641337 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074146692 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074276361 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074168813 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074395244 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077047021 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07549558 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072787344 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077226177 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078009297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074189887 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077244765 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073943533 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072625151 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076772133 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076702816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073338614 seconds)
  done (took 3.242063361 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082289594 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07621526 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079360363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075160638 seconds)
  done (took 1.753294518 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08040147 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091970983 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090217427 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081214704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093043619 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087580372 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070232657 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070377103 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071650835 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080329695 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069293991 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097048067 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08989854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080043648 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082937369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066349512 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068844001 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089046641 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080496699 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080694168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071399987 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080341737 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069379672 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091083364 seconds)
  done (took 3.367038673 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091087121 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.069425843 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.090613588 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096515543 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097112048 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069251159 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089346992 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098358311 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.146837086 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069729689 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075257407 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069888056 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109814475 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069508174 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.090215961 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113371127 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117083904 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073215486 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103197544 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072944733 seconds)
  done (took 3.259246988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087485326 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073191226 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073861688 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069039997 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079301188 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076665174 seconds)
  done (took 1.909786169 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072532515 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071003966 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071025445 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070412802 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075474543 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071052383 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069644684 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071455922 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071264434 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071217413 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07064682 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069890213 seconds)
  done (took 2.300956101 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205007781 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074048549 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07548064 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070297393 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076127797 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07060729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086156802 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072724174 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098726422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070093343 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070303498 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073119178 seconds)
  done (took 2.489747361 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197867587 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077192489 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229662179 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150197771 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106940757 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114450112 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116251166 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112719316 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138128811 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101723559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158484961 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165824819 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108896848 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134073488 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092346973 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125243962 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149672806 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161249585 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103735013 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160766765 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140448836 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127028597 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147147851 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101043725 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105763188 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117342179 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07473609 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081040192 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164696893 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128179895 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140510832 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109164655 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094433532 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169781968 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169017662 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135515248 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147112547 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085514192 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.12219697 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134347131 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198445366 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090434973 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152825273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102983299 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080608537 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127898086 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113629089 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118998377 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103809255 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089773807 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282088765 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179988956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134084247 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087819471 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122945785 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110241629 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114793558 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119545953 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225587618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155272431 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126322725 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072939793 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111947563 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148647597 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1312303 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109615896 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122098593 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094340321 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130642185 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1579743 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140668532 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138735435 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.141018838 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088536408 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12009525 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135835626 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127784443 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168298289 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122481985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074698971 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120674132 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099944617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081800029 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147839714 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077387081 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171084906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099961223 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.125724732 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130244162 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109219852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1093017 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155550536 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138801458 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105987378 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087813224 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103327385 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118111484 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144931437 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086715546 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107438236 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112841156 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080484378 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129822018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075316378 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117708312 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09571448 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116868841 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274857172 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083310851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124657771 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105429935 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104951301 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131622041 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155223207 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090167341 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083630518 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162564603 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121384508 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105373614 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140802003 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155307135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.123142721 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098775839 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143215799 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169495495 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09186551 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156837774 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105243306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085808681 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.108071016 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122548763 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111477505 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1229296 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082746343 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121402414 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164585685 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076109388 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098156961 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132119484 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08326421 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081905207 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10604674 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104582328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098492604 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101432693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105373016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13537724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122257469 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106822394 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123476784 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100985298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160769432 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08943351 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103981761 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10580529 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074290483 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131218956 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15210648 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080771582 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154944651 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121027884 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115136547 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117084476 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084346478 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134087613 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080274878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073446395 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134462803 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111053791 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106532731 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144178693 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110967954 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118859802 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116063405 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125572797 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119658529 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121977857 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109251077 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088326118 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110322272 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151919543 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072909911 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08865725 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081415968 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099816483 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092139145 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083779345 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128484853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115119574 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106770022 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109599034 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094483792 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137795114 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078955411 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115127615 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115693888 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092154487 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140730339 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139735497 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123490124 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098125616 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124455214 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073180169 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074593529 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086752999 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115158398 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080864163 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083758339 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106539679 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137207173 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120471622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125369025 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117353499 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112118746 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145659279 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072780725 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117963001 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131338036 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114481848 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.098023877 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08446086 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097649835 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132327585 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099293366 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186023812 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107188619 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115051775 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.412080427 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10912 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085218848 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10989741 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134816757 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107027029 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14443959 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102901552 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090896601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111748171 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083260376 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103804092 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137882336 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120179278 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138771693 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116243645 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131151737 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082001983 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115822229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125425515 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125856666 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.088152597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12207193 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165293356 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107979306 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118201788 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148296483 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082335345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.142859136 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170769433 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142903913 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087662087 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107410954 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122954955 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127122181 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1232147 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137250825 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106370644 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136979477 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112884046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086909033 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088375881 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097274395 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105121269 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.115236843 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105674428 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115879004 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097901678 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136091567 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10471594 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11157265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117590009 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101403966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097218524 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097040441 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168169302 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116334139 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162642315 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100296332 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138605541 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30700753 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076747163 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081377827 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082503574 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136197836 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086669429 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129326696 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113199166 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115920537 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122468334 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13692912 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098670626 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073350004 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109893053 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132110019 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123154254 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097805261 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10538715 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158291772 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119119443 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080876759 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113739987 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117329171 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105656109 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171277847 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083686064 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11116164 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079048653 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081886084 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125514255 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147301597 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084502808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104837421 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120329507 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111742495 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126095773 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099757317 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112554787 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130731545 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144590073 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125598844 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091617049 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111426121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127358559 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150788666 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104634347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10214358 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169777436 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148788383 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158524273 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090006123 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114293067 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114415537 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110223126 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132739456 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085178743 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155628218 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082523765 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13086124 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101112501 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090368962 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277458013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111922141 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090792701 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146690137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117588444 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084939144 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08283045 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111713901 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118233893 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104011197 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076840195 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142464583 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075320619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132938128 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165398161 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082086341 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105361556 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097662461 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083872556 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10465082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103579436 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088303535 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101004218 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167306866 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089985252 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14941472 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13181897 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115389817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135722612 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10495614 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648446536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08181253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149051972 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116481135 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176089867 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10028322 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118032113 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111096445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120914921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140398757 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102899594 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17914539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128281378 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117439818 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080553705 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102379234 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103929048 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090663453 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107448528 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113538078 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113828753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09633225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117528878 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121004258 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083729675 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097227818 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15102917 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115232251 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144669026 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.284581969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087470337 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119338153 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133026098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082581548 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1192088 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148327334 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107607162 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125209822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085014106 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102288524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169161136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074722938 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154771384 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1199641 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111796361 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117593879 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111295995 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129637188 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105674526 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121207266 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095834222 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149530286 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11499245 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086118589 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081223687 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107013239 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112042718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099855972 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099503086 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100988561 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14875846 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074227882 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099480154 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115626376 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147065164 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167304227 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10762605 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085396044 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121701666 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158466357 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114685842 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120569905 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08296601 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082786315 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083310854 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101955508 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124191578 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114430177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119942656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113067271 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156968993 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085502511 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227030156 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097412303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106523042 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091144959 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081315932 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096997156 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09736902 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103680555 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110896225 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316192268 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098085643 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093205174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094511665 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077201767 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084865341 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125030252 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110689081 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117912491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122826621 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0849235 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106138764 seconds)
  done (took 59.065206063 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124422884 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1004559 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.110556716 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.160837224 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127003362 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200578116 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15212832 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189501997 seconds)
  done (took 2.744988937 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071863875 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099007247 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108068226 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08678505 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070390824 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071695879 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234248308 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08493166 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071048502 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095229001 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081254079 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07206524 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473605654 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070218177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070866034 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081462337 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071027388 seconds)
  done (took 3.480688496 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395690197 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.591307398 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359690706 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080045 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.013557137 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090818991 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.206411398 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139393876 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082884114 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54228799 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371113527 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137566893 seconds)
  done (took 18.591997378 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08655074 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07993305 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094659125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094906065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081676678 seconds)
  done (took 2.015494009 seconds)
done (took 107.453903269 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085378323 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.461774076 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073121501 seconds)
  done (took 2.141771937 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.096513071 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093833467 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092735674 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091381448 seconds)
  done (took 1.959874264 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079288213 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080586457 seconds)
  done (took 1.736983391 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.215641273 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181484395 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103234914 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087567789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084112324 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084166044 seconds)
  done (took 1.840387309 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076564862 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076488206 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076413594 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078012644 seconds)
  done (took 1.885586205 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072480876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069770242 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071943331 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075483767 seconds)
  done (took 1.869026039 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088297981 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089302576 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082568498 seconds)
  done (took 1.83924003 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106147738 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094308525 seconds)
  done (took 1.780475109 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085333246 seconds)
  done (took 1.66586324 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095572728 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105335028 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135531756 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.120599234 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142055934 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120323999 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092990498 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089627792 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083439501 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096874675 seconds)
  done (took 2.662124139 seconds)
done (took 21.54761748 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083114996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37454446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.397561744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096124054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673205723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361338949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989079179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098183776 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150051873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073258673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09087298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65321435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980385984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329647225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968409107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333627955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656171949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072517815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072041089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073386459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975302007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072482064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073088479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072918855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655855024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380043759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075210846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330411384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072928061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078128019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363294503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075058708 seconds)
  done (took 16.307590647 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074881327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128470083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077185751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089753925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074903657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074114484 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075929936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073353766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128284584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073107248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09181195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071952268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076922744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074343773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093885389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072986646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076097259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074156067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073728696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074835777 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093651024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073275017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074529937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077392558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074358713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088391111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07563568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073496577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074348305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078569366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079143469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075452493 seconds)
  done (took 4.185176132 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121947427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132074665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078131093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111577425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117940223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075061944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153145546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099050921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13545301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074149607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09188477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073071041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109164519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074902294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096131929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073806435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077062482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074175916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073938756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074692666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094112639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073491149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074616331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074479087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075140724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089654472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075840621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073818286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073641163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078501732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080029927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075364746 seconds)
  done (took 4.458624506 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074988115 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076983211 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085179822 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085856009 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071855782 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073501514 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074358671 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07149436 seconds)
  done (took 2.220775947 seconds)
done (took 28.762083119 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083085864 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071020851 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074421457 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090940203 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077335054 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08277549 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068739524 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078352774 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075887719 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075880158 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077994208 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070900048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074100718 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069511815 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076670688 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070106527 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085511449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074158173 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084565161 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084759555 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073453751 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076442947 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078834425 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085198522 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085024067 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085011114 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080815079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077066298 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072060887 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074233842 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075129233 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085009309 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085185536 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084824218 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070828389 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071039001 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075405568 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072828581 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086192671 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080161302 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073211883 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080656933 seconds)
  done (took 4.84863882 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090301245 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093910766 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08690586 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084415413 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095127178 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086684434 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091721629 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081833745 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081634089 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091308897 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078712199 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085708561 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08277065 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076876003 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080788571 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078590724 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084163939 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077678999 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081464775 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082530629 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092982627 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.077295425 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091971671 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083409245 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07906941 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084174303 seconds)
  done (took 3.818019028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07739112 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089326164 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096147115 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149501805 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116511744 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084159455 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085449233 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096361915 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101266791 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07203026 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076944604 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09687104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096699923 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078250574 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071909562 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088328061 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088027199 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073841871 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078997451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101174712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093084183 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089642571 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098559001 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088838737 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071134416 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074286836 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077030665 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091151446 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073984814 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083508767 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074868828 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076247513 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072701243 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082286514 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07421572 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070585316 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096759209 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083123385 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084539997 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072430553 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081068743 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072677372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097342376 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133038024 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070594701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07601187 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075731232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08309442 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070767347 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099172535 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083665145 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071418995 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072210431 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070574569 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070465571 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074275617 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072860437 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073889543 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081834282 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078716777 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093612618 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07706577 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089491622 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070968298 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081848952 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070349348 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072527322 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070193775 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10089819 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073364495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117512159 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07202954 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06983208 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082772989 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08258628 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077723503 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071058446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089926471 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083156715 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075521557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07976252 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074996623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075572608 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102624326 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071638618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071233394 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070289192 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075618201 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075130001 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072038778 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083909255 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070388551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074704401 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090061419 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070869656 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072627063 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075700224 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074670154 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071119954 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083080946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07559407 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073100281 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082127964 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072493517 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074902596 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084879389 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078371921 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070454125 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074140289 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075466045 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072789244 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073040989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075162723 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073752204 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0783033 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078371369 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077565259 seconds)
  done (took 11.125168795 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17211649 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162973397 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074633902 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154615145 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08085409 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084199307 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157261938 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099785543 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071972322 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073372709 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072126676 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114896017 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110342324 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12361253 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085727659 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073344299 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095731378 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1203381 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160096517 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154109258 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095615787 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080449326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074848321 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074267143 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074149277 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082103497 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091760316 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081834942 seconds)
  done (took 4.541936476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081789875 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107773376 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0760248 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094922351 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09258156 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07267698 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073947573 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073726366 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088466235 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081643095 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072792864 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078112315 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075982297 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075260569 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072700702 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079020802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080182655 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071205828 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075734922 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078346986 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08258878 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097838425 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076340641 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072414698 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074627558 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071624866 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080554566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08522533 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075138655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.110030849 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069732517 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077361678 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086866452 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072759582 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072170861 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072380979 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07195186 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072012393 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073579984 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070621314 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070436241 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075842407 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070785443 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080242487 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085290184 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074423862 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074136899 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07490018 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074661521 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069840656 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074765952 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074804314 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075049507 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079438552 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076828409 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075315724 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072996521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100381652 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078069653 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071114366 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071761344 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070505061 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074231485 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082209154 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088145842 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074403374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070960338 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072105455 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085170257 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085264032 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071456214 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076906496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069446837 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074112531 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074917778 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077847418 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072743826 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070857676 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072072555 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072028921 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073183428 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072048341 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071070205 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075341481 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070311781 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070725041 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072514657 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07361239 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081146663 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071604922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076070109 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073388105 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070573143 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075113903 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077634783 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075980431 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083621775 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083297572 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072561492 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071517721 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086738905 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074687928 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071477559 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078437853 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077142586 seconds)
  done (took 9.719899026 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096506302 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072292486 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089839441 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096231871 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082249992 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077990977 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082806473 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071960016 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088847833 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077097168 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080085356 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070593138 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08383226 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082316335 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072584942 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082747218 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075300035 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090089154 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087467898 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070491502 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080840766 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084950863 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084220399 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086567757 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086040667 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087773793 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084055391 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082262284 seconds)
  done (took 3.961149742 seconds)
done (took 39.615861456 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.707463492 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.928895079 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.678448263 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.904281337 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.723443171 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 81.797110946 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.764388799 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.682729672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.911769746 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.715892091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.924673114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.930102883 seconds)
done (took 139.421749072 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.719632351 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.830281158 seconds)
    (2/2) benchmarking "String"...
    done (took 1.931247301 seconds)
  done (took 5.371523408 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.852666888 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.534869768 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.909683855 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.675463663 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.675835667 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.944872242 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.450899587 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.11427562 seconds)
  done (took 29.918556686 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.848505025 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.898477689 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.37069815 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404818606 seconds)
  done (took 15.17434617 seconds)
done (took 61.737573821 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.691604617 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.688085692 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.674057895 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.669153157 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.76601639 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.696963308 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.81199083 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.909356098 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.673874279 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.684595736 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.676032419 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.095105609 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.673733924 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.804335429 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.680988151 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.673281692 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.720743342 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.175405601 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.827696956 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.682018818 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.681160791 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.71594586 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.680931277 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.682335077 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.686476362 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.825346442 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.109265169 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.685530362 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.293553273 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.677377784 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.713351164 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.008495291 seconds)
  done (took 201.645100654 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.676317075 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.647755078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.764082063 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.694690559 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.166225589 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.867908543 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.781493014 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.203536543 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.679731156 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.693465914 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.886999872 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.673360405 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.909479502 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.617429857 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.716212335 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.769649957 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.890916591 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.918452181 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.71509271 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.842854726 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.680640197 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.753646833 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.709279095 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.867308965 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.675966871 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.763488088 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.699336564 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.702911815 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.861160434 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.87112596 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.680980557 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.715964915 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876015335 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.545082966 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.688393783 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.692154705 seconds)
  done (took 166.512274626 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.857910082 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.679407329 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.676534567 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.677498372 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.677457427 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.683167659 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.679085778 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.79959907 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797262137 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.35034018 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.300839559 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.732967521 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.677569224 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446124861 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.674967642 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745489122 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.688750899 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.676004341 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.678765645 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.679247501 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.693055891 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.705623768 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675187997 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.6826671 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806380052 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.688032641 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.67686508 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688771054 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.678495016 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.685003925 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.06689113 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.675372138 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.754222331 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.676999888 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.686019938 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.921733337 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.675097746 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681441697 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.496052004 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.761225768 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760892746 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.676998892 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.684599913 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.679324062 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.898290874 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.676617207 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.682385048 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.678253566 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.67896186 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786341443 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.680151777 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.802550473 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.680421706 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153109426 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.676213553 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.681405918 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.032320025 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.249915492 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.681016953 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.683309452 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.681060068 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.684466124 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.687197384 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.201386452 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.748437063 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.680740765 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.681354664 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.687323445 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.681008095 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.813028774 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681145472 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.394942098 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.695815524 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.909502714 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810636753 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679894324 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747506133 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768352312 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.676798897 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.680816182 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.680275144 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.681186633 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.762753274 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.678541629 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.76513646 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.690286798 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.683707835 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735719764 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.752689827 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.677363097 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499286483 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.681439831 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.68266069 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910282006 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740868457 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.678278244 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.684626881 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.764090162 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802098048 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393959627 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.682004334 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.046396481 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.682381661 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.758268977 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.680449934 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.802185078 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.682771146 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761949583 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.687074138 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.684647244 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717616618 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.6828241 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.696223456 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.680394657 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.05613268 seconds)
  done (took 390.691617816 seconds)
done (took 762.376325273 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.303461194 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.272382279 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.37538722 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.291180586 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.264598677 seconds)
  done (took 13.123695398 seconds)
done (took 14.7423147 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.761564023 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.769390738 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.700898552 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.765850201 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.697065142 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.763519322 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.749281907 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.706690503 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.731688728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.705501678 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.734312928 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.704923053 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.690248474 seconds)
  done (took 24.098636574 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.914273604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.909533218 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749725872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91049963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.726410062 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907943854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.836676804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.828427396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.82616269 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.697554746 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.694816005 seconds)
  done (took 21.621056146 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.916828858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.918294216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756471132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91560318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.730484683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.913079742 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.844278907 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.831092025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829283807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.697521189 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.695687847 seconds)
  done (took 21.666755267 seconds)
done (took 69.007012874 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.688187315 seconds)
  done (took 3.306459459 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.70624883 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.859188636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.687271209 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.689958875 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.6882844 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.691360692 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.689011289 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.687802219 seconds)
  done (took 15.318388663 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.689414537 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.690077408 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.689512315 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.688713785 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.687041629 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.688686184 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.689900894 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.687100733 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.688422776 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.689644695 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.689358796 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.689184511 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.690660251 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.688045653 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.694062589 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.690976345 seconds)
  done (took 28.650877381 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.691444073 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.688648809 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.689074222 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.688411355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.68901054 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.688552496 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.691174207 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.689021895 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.689779022 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.690009479 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.689869961 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.691067625 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.69135833 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.691635987 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.690698757 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.690110281 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.690476647 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.689139114 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.695424002 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.689215782 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.689596214 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.69001209 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.689118604 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.691685867 seconds)
  done (took 42.186597592 seconds)
done (took 91.081966844 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.387153497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.517565334 seconds)
  done (took 9.523739577 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.697917608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.689478698 seconds)
  done (took 5.086388092 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.691184996 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.690358817 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.692235688 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.691864901 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.691631311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.691378445 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.690722751 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.690409753 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.692522361 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.691947827 seconds)
  done (took 18.535911499 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.690795874 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.692136916 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.690275027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.690580646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.69069966 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.693028352 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.691830959 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.691775293 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.69211325 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.692577679 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.691557192 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.691869994 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.691545577 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.69197079 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.692268539 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.69126674 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.691855973 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.692034257 seconds)
  done (took 32.073445514 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.692746331 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.691532342 seconds)
  done (took 5.007654811 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.692086035 seconds)
    (2/7) benchmarking "second"...
    done (took 1.693228676 seconds)
    (3/7) benchmarking "month"...
    done (took 1.692899822 seconds)
    (4/7) benchmarking "year"...
    done (took 1.691792556 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.691860127 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.691993407 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.693930948 seconds)
  done (took 13.471076074 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.693157986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.857187544 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.926081618 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.309046723 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.69601139 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.694633062 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.587263963 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.698919072 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.695771942 seconds)
  done (took 18.782164044 seconds)
done (took 104.099619515 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.555273081 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.689402252 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.961333033 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.826149496 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.709952598 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.692221516 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.710214809 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.974618832 seconds)
done (took 41.740719705 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.751995474 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.395868936 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.436390413 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.756645025 seconds)
  done (took 15.212982696 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.690231485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.015582279 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.71419469 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.509170758 seconds)
  done (took 21.558771856 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.056548348 seconds)
    (2/2) benchmarking "read"...
    done (took 2.040139563 seconds)
  done (took 5.725181086 seconds)
done (took 50.874166606 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69419078 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.694855909 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.694355583 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.695100721 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.694220962 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.694679868 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.693531821 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.69341406 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.694668893 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.694795392 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.693952568 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.693786841 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69488472 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694821473 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695407662 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69442743 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.693910677 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.694089811 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695771348 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695940952 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696458718 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.696100139 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.695712478 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.694290122 seconds)
  done (took 42.297817449 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.695170952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.6947186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.695979978 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.694998187 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.694249701 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.695752537 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.695907454 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.696429333 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.694661363 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.696558582 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695966021 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.695692879 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.695877161 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.696145424 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695480147 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.697052397 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.696602247 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698656746 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696199554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.695570928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.697140442 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696486934 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.696368078 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697223396 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.697042149 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69604696 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.696454214 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.694189634 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696662574 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.696865525 seconds)
  done (took 52.509536652 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.69789917 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.695147646 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.696945951 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.697372879 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.697817801 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.696170519 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.697761142 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.698003501 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.69625847 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.696527161 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.697191532 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.69877355 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.696121346 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.697176814 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.698544626 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.698226019 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.698556985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.696271594 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.696712957 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.696700708 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.702246552 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.697431831 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.699249947 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.698374246 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.698744451 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.699053522 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.698034552 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.697094465 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.697068723 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.697758375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.697342126 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.699322566 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.697704859 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.699823496 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.699047654 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.697199844 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.697871323 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.698687822 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.698942891 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.699361826 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.698701518 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.700138143 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.697482751 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.6988904 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.699452636 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.700028715 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.700188576 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.697646975 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.699307115 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.6984811 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.699309275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.697385848 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.700082127 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.700973106 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.699902154 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.698915442 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.699997366 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.699312795 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.700336972 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.701048898 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.700229452 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.699860838 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.698982687 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.700176838 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.701619205 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.700561268 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.701477432 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.701719603 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.70172227 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.69916811 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.702316427 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.700930645 seconds)
  done (took 123.9391368 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.701053814 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.70048818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.698452125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.701096591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.700229915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.701033254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.700834475 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700648677 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702197614 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.70277034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701459995 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.700649797 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701718846 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.70082606 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701730843 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.701565927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.700178407 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.702096439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.701511609 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.69902875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702100389 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.702021608 seconds)
  done (took 39.055869653 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700899468 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.702129876 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.70296168 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.701462347 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.701610753 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700809285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.701128278 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700277028 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701698476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.702219343 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702375288 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699414604 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.702422108 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700652515 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.701294123 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.702446242 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701563093 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.703138681 seconds)
  done (took 32.260139114 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.70254036 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.70152876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.702850834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.703650138 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.701875809 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.701731849 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702491939 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.703483449 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.703355606 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.703756218 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.703077018 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.703123241 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.703853154 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702996417 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703674322 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.70331897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.704531082 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704691333 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.703765742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.703804356 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.705123023 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705486824 seconds)
  done (took 39.108148009 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.704529045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.704373244 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.704427303 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.704042684 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.703830016 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.704191666 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.704169642 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.704679756 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.704411492 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.704887266 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704983414 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.701209673 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.706466105 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.704077092 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.703952163 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.703203889 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.703891406 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.70467821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704779377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.703681241 seconds)
  done (took 35.717702935 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703372978 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.702841182 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.701788105 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.703721593 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703722977 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.704644163 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.70351647 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.704235197 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.703867645 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.703354772 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.704284449 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.706614646 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705158785 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.703412109 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704714371 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.706375495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704811853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.705945942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.706532747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705742258 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.706104712 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.705650701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.707007837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.706151521 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.704395681 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.70409332 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.704647338 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.705720156 seconds)
  done (took 49.368876483 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70510217 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.70694386 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.706633224 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.705259454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.705900313 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.706355058 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.704195298 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.706925783 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.707032403 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.708046724 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.705892442 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.705865775 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.707532478 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.705952221 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.707015733 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.706483978 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707036959 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.70480009 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707339547 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705716534 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.706843336 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706460967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.706320902 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.704849641 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707402123 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.706332942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706659771 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.707165446 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.706684146 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.705537128 seconds)
  done (took 52.82747267 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.726871517 seconds)
    (2/2) benchmarking "in"...
    done (took 1.7271064 seconds)
  done (took 5.090583696 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.706002226 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705895704 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.70632511 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.706149842 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.706331501 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.70688006 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.706956494 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707317268 seconds)
  done (took 15.28975523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.708597897 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.707790881 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.707092133 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.708146351 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.707289507 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.707966214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715150715 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.709608062 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.708402463 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.70748649 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.717776841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.716409339 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.71204257 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.709112385 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.709721444 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711927799 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.70800088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.708926669 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.707078967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.707961608 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.70947079 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711754255 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.712884407 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.707652894 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.710196324 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.721762253 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.713685637 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.708087032 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711865047 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.714915349 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.710199656 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.70954169 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.710390812 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.709651134 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.709524621 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.709387239 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72046098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7123441 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.71603669 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711407201 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709617246 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.708293667 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.711487185 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.71373381 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.713116592 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.709687471 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.709355147 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.709963491 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.708001437 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.7153318 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.717351677 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711247566 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.710150004 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.714289462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.713453894 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.718223372 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.710357715 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.715033346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.721241463 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.721807589 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.72326907 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.720505184 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71394868 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.709724429 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719965926 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.739814539 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.717872653 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.711247505 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.710946277 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.71104922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.721049317 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.724128624 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.724579695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.711969665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.713908468 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.714229827 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715911599 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.712492645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.722200121 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.718832683 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.713151631 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.71168448 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.721571912 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.739354302 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.713338686 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.711853159 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.713586724 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.712390672 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.711186519 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.727256089 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.713415497 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.712685293 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.712083357 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.714676402 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.713196959 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.713014912 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.711696214 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716018528 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.712667827 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.713050266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.713339974 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.717386318 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.725023611 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.713842118 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.714080913 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.723220102 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.712701695 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71598214 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.722101464 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.712689084 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712911778 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.712329915 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.72314331 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.712469571 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.716991676 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.720846169 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.711793178 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.716613691 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.713934541 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.714124708 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.723756975 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.744145693 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.713401753 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7146184 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.719889167 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.727402326 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714300755 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.718721616 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.714989352 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.712493189 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.714540742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.717609444 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.71388287 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.717715619 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.714502723 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716690415 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.714221662 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.714874428 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.71522334 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.718538896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.714372144 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.716892548 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.717747026 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.718929775 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.716654971 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.718391703 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.721618601 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.714017794 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.718323366 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.718710463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.714758581 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714736822 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.718168722 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.71506242 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.712860424 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.715081446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.718284439 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.714784771 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.715757136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.71540889 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.715598316 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.715494804 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.722715188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.715724132 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.720327801 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.718555651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.714708497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.715289485 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.715916774 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.715420997 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.717444534 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.71444835 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.719309409 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.725252618 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.717438313 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.716164911 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.72030928 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.717930464 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.715023581 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.718119866 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.721949944 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.728076779 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.717188548 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.723820554 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.716639432 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.717477973 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.717905205 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.717923664 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.717857797 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.718006127 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.722129177 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.726464191 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.730203908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.729258485 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.716891575 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.722476034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.717418396 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.723426536 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.724266334 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.719349177 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.718000664 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.717930586 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720596189 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.718066765 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.721640965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.718385825 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.719240053 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.717553422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.7175407 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.717354597 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.719156718 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.719848569 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.720343958 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.718743469 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.718458609 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719031976 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.719161229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.718648322 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.715889779 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.71608929 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.71911475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.71735953 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.726537346 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.718951373 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721572524 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722348982 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.720782448 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.717352383 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.718525322 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.722485084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.719905199 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.726757618 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.719949521 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.72153009 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.726931767 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.719227909 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.718817357 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.723570947 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.718526581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.720435874 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.722047812 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.729680193 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.719973535 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.719647528 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.720170358 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721203584 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721146968 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.727319947 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.720530003 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.721641701 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.720276457 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.720567577 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.720206932 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.722791349 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.722429965 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.720620502 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.724717793 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720567287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.7214217 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.722717966 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.720471606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.720875279 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.72099346 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.724595993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.730553241 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.726863293 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.720924128 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.723450209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.720256059 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.724958719 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.72313056 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.720631561 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.72363262 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.734113021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.732063023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73095005 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.726311209 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.72134677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.728585225 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.722879951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.727904207 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.723016166 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723902792 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.724076282 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.722030081 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.721046153 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.722511783 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.72096602 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725037736 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.723177545 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.727140797 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.723103132 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.7233542 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.722115738 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.721890222 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.720114854 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.723792849 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.721666746 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.726470875 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.725794734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.722345923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.725288307 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.730780938 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.726088634 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.725356005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.725592075 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.724031856 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.721341946 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.722627123 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.723905131 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.728051114 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.732381396 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.728502055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.734969503 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.726387306 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734965968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.724694508 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.728541088 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.732711135 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.724567808 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.721606046 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.723116747 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.72295567 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734237629 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.723848571 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.723172039 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.728505457 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724466672 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.72502927 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.723266071 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.723640372 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722691654 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.724548228 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734682692 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.724812273 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.730951719 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.726353926 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.724870524 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.723676446 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.723799071 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.723016277 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.728703458 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.723433966 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.725827361 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.725854767 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.722079405 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.722899906 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.724242801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.724704195 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.725336115 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.725290972 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.733149238 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.724309427 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.730241704 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.724514075 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.733258517 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726328997 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.732174805 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.726393018 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.725031533 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.726087891 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.724194992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.726231505 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.724121363 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.728491168 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.727399247 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.725026794 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.731597491 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.726704469 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.726322949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.728029781 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.726429585 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.727664211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737707921 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754163953 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.730481504 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73180569 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.724866526 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.731368728 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.731084994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.727903458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.724887536 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.7314264 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741097764 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735399168 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.727591057 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.725943256 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72886471 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.727101486 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.725236235 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.725447597 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.727599222 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.725415981 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.72696042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.726660387 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732113718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.726009419 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.726734876 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729705695 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.726536322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.738698537 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.727819343 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.727407347 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.727731112 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.727235351 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.729438005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.729628395 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.727499938 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729363513 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726524694 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.729994184 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736279729 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.733243646 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.731942331 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.729370806 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.727724803 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.731280958 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.726996844 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727073468 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.728247862 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728876528 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.731504326 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.727580167 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.728843969 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.728081593 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.730459477 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.729429981 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73056863 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734963461 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.741351229 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731103586 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.72758677 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.727305222 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727655698 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.724622747 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.729329211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.736950454 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733964967 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.741354836 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.737260469 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.734436323 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.730870198 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732200167 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.740544876 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.725293657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.731173373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.731074765 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.731188323 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.728249222 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.735251985 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729172907 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.736677353 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.731667867 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.726928368 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736144646 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.733713465 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729888888 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.731416709 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.736158232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.730784898 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.730969048 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.729869247 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.733432893 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.738908769 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.732914377 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728538995 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734422684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.727535641 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.732769173 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.736773416 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729546235 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.730882808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.728404621 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.730890829 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72921478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72927647 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.729503485 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.729183382 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.729034521 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.73348419 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.737753447 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.729798498 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.735044679 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.733963924 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.729995888 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.730360929 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.731134333 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.731200345 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.732240225 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.730280323 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732782051 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.73236028 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.735687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.729822843 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.731239503 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.737016669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728602332 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.734775835 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.743929488 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.739903265 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.731172502 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.734847343 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.730870901 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.737111064 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732943326 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.730381804 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732909661 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.735635793 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.730006632 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73221294 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.730669383 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.737354926 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.749006339 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.732309485 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734513523 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.734651489 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.736575775 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.732252122 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.731804011 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.731471278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.732127657 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.737303204 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.741016093 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.733188289 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.740544248 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733734301 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.732090256 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.736992579 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.73637354 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.741317831 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.738073094 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733815238 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.733112611 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.738362605 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.751400534 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.731644434 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74391702 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767765098 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.733959532 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.734336807 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.734025083 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734981234 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.733843527 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.735423045 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.735057841 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.734402744 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.733079044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.734667561 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.734413385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.743059719 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.737679649 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.735259542 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.735139373 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.734481099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.734400092 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.734349584 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.733817576 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.733240872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.735671019 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.734818794 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.732591171 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.73694719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74754705 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.745822256 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.734119242 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.735378075 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.735053292 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.740426727 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.740066061 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748003292 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.74200854 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.735002214 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.736216709 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.738901353 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735047496 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.735751513 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.738665412 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.736875847 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736624859 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.735173045 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.748098815 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745046816 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.739876036 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.734347719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.733997332 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.736009288 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.738486049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736165883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734784023 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.736898226 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.735974192 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741241943 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.73473346 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.736958417 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.740977432 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.744718993 seconds)
  done (took 1029.652436079 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.737316662 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736508743 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.737305812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.736751001 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736483824 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.737290259 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.736920934 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735893804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.736790928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73780691 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.737052195 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.738137358 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.735400677 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.734728294 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734850915 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.736173978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739754824 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.73501782 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734994616 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735734479 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734168122 seconds)
  done (took 38.131409275 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.735829459 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.732227544 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.733626132 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731625445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73338176 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.732347383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732431819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733907444 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.73331745 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732750974 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734687863 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732908919 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.751017083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.731629022 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732933573 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733390379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.73419097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733904333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.73096963 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730039619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730213484 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730155193 seconds)
  done (took 39.801436244 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.732949356 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.72792095 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.731403349 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.728143218 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.728560178 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.727791335 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.73013102 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.72674466 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.727133868 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.729133217 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.72677724 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.728618708 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.744491692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.735956169 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.730035941 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.727853559 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.873529426 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.728259984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.727078419 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.728400301 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.72819337 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.736530027 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.726935987 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.728905733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.728964401 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.726990455 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.727484589 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.727997597 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.728256392 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.727716556 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.732316588 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.727166146 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.731508047 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.732858657 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.729049172 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.730065644 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.73287056 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.727473585 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.72880543 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.727809067 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.742031151 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.7554509 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.728585624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.738411837 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.728571122 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.727701584 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.733980324 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.737139431 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.728838768 seconds)
  done (took 86.611677119 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.73063399 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.732654942 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.729952713 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728719214 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.730961187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.728672311 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.728084798 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729391019 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.730446715 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.726787142 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.727212887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.726939376 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.726955421 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.727345769 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.728172299 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727501932 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.726871366 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.727519913 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.728438258 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.727719458 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.72685254 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.728057104 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.728932186 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.729243772 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.729337992 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730011846 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7290514 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.730144337 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.72945663 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.72974542 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.728242886 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.730617414 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.728261048 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.729390138 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728380796 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.730017524 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.729207039 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.731074246 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728528322 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.729762927 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.728611551 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729932184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.728875676 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.730775579 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.726525492 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.728363645 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727857011 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.72821501 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.727330723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.73039342 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.727918539 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.728149661 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728895314 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.727910644 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.72937424 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.72713674 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.729406352 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728048537 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.726198132 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.727923307 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.727032325 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.726417743 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.727158594 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.726452197 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.728302269 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.731386191 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.731966329 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.727034625 seconds)
  done (took 119.211944892 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72844246 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.726771176 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723506581 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725297092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724163038 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.725905483 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.726331376 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.724942468 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727244698 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.727359082 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72565784 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.724071405 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.724622502 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.725481058 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724048845 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725715736 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.725186072 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723042192 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725335459 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727270221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.727190534 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.723893337 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.721304247 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.72578176 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725445362 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.72334685 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725878578 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72543211 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724740106 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.721904598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.723894477 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.724478313 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.725832724 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724420708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.723950491 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.724036225 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.725328154 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726513247 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.724230678 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722501478 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.723809771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725340224 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72347963 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.72476999 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724521561 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.724146956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.723267744 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.723094404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.723819825 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726703821 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.724780068 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726018132 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725182478 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725768647 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.721850664 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.72592102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723242194 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723947668 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725847781 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.72416413 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724782068 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.724704054 seconds)
  done (took 108.599179736 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725153824 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724937162 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.723045177 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.726687005 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725394895 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723589507 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.724740282 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.724015379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.724347249 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.72445175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722160455 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724575185 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725466206 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723233072 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.722721951 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726729584 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720378968 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72136495 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721839403 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723936641 seconds)
  done (took 36.133488293 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.721835969 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.723383237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.72185656 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719433293 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.720446446 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.721472255 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.718789109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720816175 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72162854 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719871584 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722373679 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.722601245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718893515 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.719321476 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.721009374 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.720645917 seconds)
  done (took 29.187507221 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.718030203 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.722258731 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.71830735 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.718310824 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.717680544 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.717517099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.718506615 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.718997337 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.717413596 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.716277553 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.717877009 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.718215836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.719989116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.71583146 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.716211943 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.715846004 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.717198696 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.71711817 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.718950169 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.717796703 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.718842128 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.715380189 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.715515842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.715011547 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.716738884 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.716637721 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.715235709 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.716166497 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.715131106 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.716933947 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.717882807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.717244068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.71616328 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.714252626 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.71656234 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.716883236 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.715277046 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.714700282 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.716839698 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.715895507 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.715778312 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.715663764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.713088401 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.714792215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.717363895 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.714886548 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.715628228 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.71759373 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.712948691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.715488873 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.714654794 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.713516803 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.716421761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.719003767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.714295089 seconds)
  done (took 96.065048958 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714888636 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.714998176 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.713805099 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.715397352 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.714990201 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.713088485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.71237858 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.714861566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713505089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.714367226 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.711568756 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711125933 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712899756 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.713600335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713684456 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.710565404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.710077125 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.712639218 seconds)
  done (took 32.484005701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.714378587 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.715758807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.710487818 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.711636507 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.710916085 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.711176921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711119868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.715159182 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711834703 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.714021549 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713477353 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.717262265 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712969506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.713667735 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713113779 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712018782 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.712833497 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713753826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715223105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714045833 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.714124676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712297721 seconds)
  done (took 39.337118469 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.713388049 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.713539808 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.728372762 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.735963887 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.732927935 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.750850815 seconds)
  done (took 12.019607395 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713324161 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714637104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.712723989 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712152189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713546285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711210444 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714463817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70837078 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711273023 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713210774 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714261811 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71401766 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712747756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711898225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71494558 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713138198 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713811064 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711977366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710614988 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709745603 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712086789 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709466094 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71066862 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712277868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713897354 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711609683 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711477727 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712274004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71290201 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712700216 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712519679 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71251765 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710470415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712228319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711678203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712781945 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710320926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711031378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711080201 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712800936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.71228878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713740624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712273089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710113308 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710039948 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710294768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71082124 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710738991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70997423 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710650401 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711812181 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711879674 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71194033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711567622 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711069801 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708330422 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70901985 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711130695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712593531 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714303033 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710097983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710651514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711653084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711938785 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710804407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709538481 seconds)
  done (took 114.624681315 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712440422 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.70980468 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710404231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710742687 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712940991 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711721221 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711028602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712059865 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710882254 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71197332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713407864 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710841319 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710033548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711772844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709710212 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712245213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709625457 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711167308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710678958 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7120104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710758499 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713291347 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711366009 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709749213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711498831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709143635 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710676577 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708675598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710674237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710790049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710614205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710729564 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711239732 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711957803 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710828019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709246116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711461691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711190189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711199612 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708074358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707602894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706464938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707694402 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706854983 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708225627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708422587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70972619 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70569194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706781526 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706894542 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708038397 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707486915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708797728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707418698 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708356547 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709823859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709432667 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706019182 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708969425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706722197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70768323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70731301 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710316687 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707667685 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70670904 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708635824 seconds)
  done (took 114.487897691 seconds)
done (took 2385.440314586 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.714092158 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.81496625 seconds)
  done (took 15.167446942 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.870763415 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.823829318 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.71116278 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.713215117 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.706772928 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.737912924 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.726246791 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.707329948 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.712447171 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.711425133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.712513829 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.897378348 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.71672024 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.707589905 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.712374775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.801850428 seconds)
  done (took 49.61202666 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.714810925 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.713894012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.724042945 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.717560102 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.714063252 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.726141282 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.74540155 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.718021423 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.748306381 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.726639733 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.782155997 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.725038793 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.71419066 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.764270926 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727092473 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.730947109 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.806472867 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.785674293 seconds)
  done (took 32.926172818 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.788650323 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.728500473 seconds)
  done (took 10.166072861 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.740445858 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.766245541 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.731073971 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.736148232 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.714219928 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.724555748 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.76209136 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.75458846 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.727859811 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.713943402 seconds)
  done (took 69.016058868 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.71766226 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.716563391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.714389041 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.711872189 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.711324542 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.715448571 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.713809521 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.713015675 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.369342873 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.746080688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.723213744 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.720450597 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.714757303 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.716492947 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.712660003 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.736519102 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.849568024 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.712936462 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.712158423 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.720277083 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.71470949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.772956918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.72881325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.715964605 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.745024362 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.373281514 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.720564774 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.722636143 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.819631729 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.713228307 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.71712111 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.904913157 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.718724682 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.182178866 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.97126604 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.723185101 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.725636892 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.724615539 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.714353819 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.832582824 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.716038378 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.722574411 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.651466999 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.947042385 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.812411542 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.758113494 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.017861542 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.727731754 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.715523864 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.745575207 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.715860016 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.715350091 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.72908911 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.224467556 seconds)
  done (took 124.234703929 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.714026574 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056554174 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.87725151 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.713870534 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98805275 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915527082 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.710207674 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.759462303 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.710855935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936390363 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962160293 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812302824 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.711032056 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.713524399 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706598999 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71092829 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.86546245 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779889092 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.714239507 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.712481392 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740591474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95148827 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.830606909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.713917159 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.737250086 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921460741 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.828791444 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.814498708 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.504199496 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.711567105 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773343725 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.713195963 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.713516935 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.707477017 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.864731444 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80168912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793470275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.71080142 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.713227275 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.713953114 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458081452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913139092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807126022 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.836548774 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962344239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915001914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.490546915 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.714537631 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.451491922 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877849703 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.940784626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940302933 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.830126418 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.713728688 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.969984847 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71502702 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.710361373 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.957163436 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940198334 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.806511374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715064014 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.714359074 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.712096952 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002966688 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.714775777 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804315375 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716534875 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.710775657 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807394988 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807056299 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945667486 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922700327 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742460769 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.035971702 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.220033394 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958427383 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779561332 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964645894 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.715271535 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.709658607 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790294453 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.550278211 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966636821 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991412656 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956890095 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74477861 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.42583598 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.714076125 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.938368558 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931848686 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.9677201 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957886286 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95002305 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.014188255 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713397284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.714401846 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.000454327 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.834135771 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714450716 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.062847953 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941623287 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.246743661 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738519708 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015694162 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841633511 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.71545663 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.341520017 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.716405181 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941870213 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.752940491 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.71633466 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716254637 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931108893 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.696516029 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71784792 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.613246574 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.775945756 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.718376784 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944893455 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.714880889 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979796727 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.714674802 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950205708 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.71484293 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744844246 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.890469464 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.962552392 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.714473511 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.956511601 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956040448 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.827305559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.983601638 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.615056706 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.717803863 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001148703 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.714728189 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.718231228 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.885575768 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.719425552 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.856765739 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.715201045 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.007139536 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.734607491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9520918 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71714536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967835538 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.745230148 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.767361321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.717096052 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.845866064 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720983718 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.633748249 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.873528212 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720982782 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.715779602 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.258376922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.717685975 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.865692638 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.943792152 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73510673 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789158071 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.375631521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.719559227 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800533487 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.737269887 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.10755917 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.719371738 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965312506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.718582487 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.1307154 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.717269879 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.002771546 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.954736732 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724874782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.716837873 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.62260725 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.719793128 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.719886347 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.900880779 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.103133768 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.716858874 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91883341 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71893495 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.844823961 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.719244241 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.792025143 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.05291646 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.715322047 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.719022785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.72201852 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.720287311 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.719461823 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.926245013 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.740037298 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.213823349 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.856461706 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990469403 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.023060753 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.959191804 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758936159 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.720851212 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97461987 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.718242949 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.776587485 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.716797669 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.739495798 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945658804 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.719352585 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928332318 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.985376359 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.663360756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.76562246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.718245337 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720199685 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.720081728 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.863851487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800073318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.719517066 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.720191079 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.833906405 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.83570336 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.922436925 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.721680253 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.79407662 seconds)
  done (took 869.45277038 seconds)
done (took 1172.214345206 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.721960771 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.721615681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.723191452 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.721951585 seconds)
  done (took 28.541867329 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.734123863 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.719741166 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.724386667 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.722993759 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.722187987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.721948049 seconds)
  done (took 11.99852152 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.739782607 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.723193823 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.720735013 seconds)
  done (took 20.836951165 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.794069928 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.102197353 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.848020178 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.134467422 seconds)
  done (took 9.529084519 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.726214058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.723340806 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.725261162 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.724961001 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.730904926 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.732991873 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.721695556 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.725620007 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.733040387 seconds)
  done (took 17.198514558 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.811240234 seconds)
done (took 93.568146565 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.899726568 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.71986676 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.872350578 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.853355072 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.799183284 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.801466211 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.720646027 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.329160715 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.821790032 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.725904355 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.090371161 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.740972625 seconds)
    (13/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.724293754 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.047705414 seconds)
    (15/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.597950718 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.824070534 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.596969971 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.911254896 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.665563562 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.856441814 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.725259769 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.999708267 seconds)
    (23/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.855269827 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.20722364 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.72890799 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.84364993 seconds)
    (27/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.011554495 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.212033918 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.827812388 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.786571636 seconds)
    (31/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.971142802 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.806539841 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.723058433 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.748469663 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.811816341 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.727582561 seconds)
    (37/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.384931393 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.035817868 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.609341542 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.727136725 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.15737674 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.728482069 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.178894137 seconds)
    (44/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.723771453 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.291936018 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.846205955 seconds)
    (47/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.726763276 seconds)
    (48/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.568848575 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.838116432 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.827622027 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.805715625 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.941246688 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.984745693 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.056260059 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.726284283 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.643359585 seconds)
    (57/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.724947643 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.91262164 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.463638816 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.85684913 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.943355208 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.72930147 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.931229901 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.973654251 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.039154493 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.758252343 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.843679468 seconds)
    (68/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.955859398 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.877500779 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.035430167 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.730801731 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.745027325 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.730882526 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.899632702 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.176800811 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.070814051 seconds)
    (77/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.747958932 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.813065143 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.3904696 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.735094737 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.738822551 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.788029391 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.726500013 seconds)
    (84/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.971100565 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.826374469 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.492370263 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.747997374 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.037030671 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.196272831 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.070846458 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.949970183 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.09830641 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.839160522 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.889040085 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.735998267 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236824453 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.042407155 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.730113152 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.967992448 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.830692255 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.95555447 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.746055596 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.748657536 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.750578701 seconds)
    (105/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.819103482 seconds)
    (106/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.807242767 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.729261192 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.743286409 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.726437661 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.613021579 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.731672083 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.965357805 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.730512863 seconds)
    (114/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.919283867 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862098941 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.817486181 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.818176079 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.731946311 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.818254707 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.757049138 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.73362722 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.97166607 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.96192886 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.751180256 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.885753646 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.824883685 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.041927504 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.868710711 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.103734208 seconds)
    (130/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.894889081 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.630153824 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.760248989 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.862640677 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.757456738 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.731266196 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.731814422 seconds)
    (137/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.997173657 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.766537313 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.981175534 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.741115278 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 5.422583294 seconds)
    (142/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.105194782 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.791196958 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.882987129 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.031505091 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.985846223 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.049448986 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.736105201 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.828092682 seconds)
    (150/309) benchmarking ("sort", Int8, false)...
    done (took 5.900229631 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.753193573 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.34113232 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.917827649 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.027247822 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.117590837 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.053945901 seconds)
    (157/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.012552573 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.728333706 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.858369903 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.731186344 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.275827071 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.739394394 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.731295309 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.029749887 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.941744648 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.099959181 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.733645665 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.216184689 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.917255265 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.730505442 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.328079847 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 6.73535728 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.73167344 seconds)
    (174/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.884681361 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.730999308 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.057513868 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.864265215 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.606622925 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.393577851 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.043334219 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.018329842 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.729720088 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.741363736 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.730765255 seconds)
    (185/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.090196431 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.257528637 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.752385359 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.511706198 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.342257392 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.939140604 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.979103632 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.734683753 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.870255738 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.75342334 seconds)
    (195/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.441347411 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.99019344 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.838455289 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.747117708 seconds)
    (199/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.73722556 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.734470894 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.899175851 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.864620416 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.861641823 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.069914315 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.693686166 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.847021144 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843511874 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.112073892 seconds)
    (209/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.811487295 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.346719145 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.730473002 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.87149551 seconds)
    (213/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.919397041 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.058917824 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.675048303 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.830146393 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.090490464 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.964535492 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.889478456 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.91656506 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.193643412 seconds)
    (222/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.841554783 seconds)
    (223/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.122990981 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.952548822 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.475875469 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.730484448 seconds)
    (227/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.524752753 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.945099342 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.749613804 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.025941684 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.754809137 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.952691044 seconds)
    (233/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.067750609 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.891405328 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.500076811 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.503351985 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.910250634 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.771283662 seconds)
    (239/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.044694904 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.882001074 seconds)
    (241/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.764819004 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.876788783 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.878312396 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.891607395 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.150287548 seconds)
    (246/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.868708299 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.754614246 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.168337606 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.341135453 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.003532503 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.664509563 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.889288468 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.956633064 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.680058449 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.819931508 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.007638791 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.887212945 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.656322819 seconds)
    (259/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.015883188 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.129201927 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.758039735 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.852386016 seconds)
    (263/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.427472511 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.862775992 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.755057614 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.893313086 seconds)
    (267/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.753996752 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.005123243 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.920092407 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157382568 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.75357193 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.177711753 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.751053919 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.05955851 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.096553363 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.197382869 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.525035877 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.765860519 seconds)
    (279/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.831530017 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.15363944 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.932665708 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.756633482 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.210786868 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.010708501 seconds)
    (285/309) benchmarking ("sort", Float64, false)...
    done (took 5.505470439 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.541366786 seconds)
    (287/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.895426852 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.969206723 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.777062287 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.755236353 seconds)
    (291/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.961684436 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.841974251 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.146864198 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.951552657 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.03325247 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.520516714 seconds)
    (297/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.059991636 seconds)
    (298/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.76358587 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.073223998 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.786029597 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.841920071 seconds)
    (302/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.832824148 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.832532475 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.754745297 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.966972764 seconds)
    (306/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.755317731 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.754007336 seconds)
    (308/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.887062461 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.68978061 seconds)
  done (took 962.9142015 seconds)
done (took 964.629050692 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.782373919 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775136157 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.758482832 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.780032968 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.872280893 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.804473771 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.773619119 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.763647692 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.810088354 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.808217285 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.757596348 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.803357695 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.759099896 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.759476351 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.757642104 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.774565396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.072632715 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.792619075 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.777913402 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.772221238 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.776524319 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.758349606 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.806992844 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.804182526 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.764604147 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.763226364 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.763594509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.777342852 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.871967879 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.764423349 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.763269896 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.771958467 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.070097526 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.788755061 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.758811116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.779770606 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.771672861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.771759154 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.763115916 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.791055505 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.160213074 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.799264235 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.7580687 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.759591117 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.761106646 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.765679548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.758375763 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.769584416 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77597476 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.776121114 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.154469814 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.81492993 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.76448466 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.759452179 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.775195607 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.760811301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.764809394 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.778480876 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.778263457 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77593747 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.056948436 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.796779579 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.763356022 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.776370271 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.769999509 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189099652 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.798835186 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.767971019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.161647639 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.806351402 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.187262621 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.812792954 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.762798403 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.777091843 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.793431564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.073842149 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.790248357 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.76123136 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.772548702 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.758090786 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.775369689 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775705212 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.764453829 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.763411563 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775334666 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.808103119 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.775329314 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.762887162 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.773621613 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.782748541 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.771485822 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.77376073 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.766928849 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.759638418 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.773627665 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.769355374 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.767821459 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.765154359 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.76835164 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.774977566 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.160822433 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.820366289 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.760393622 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.759022116 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.764105609 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.775521492 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.159626422 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.803112151 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.788585721 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.812856466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.764036772 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.061907152 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.797067314 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.781240512 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.776043176 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.76621904 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.761040194 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.059446694 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.187410829 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.819330251 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.764882844 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.76025968 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78093632 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.767390916 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.762185241 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.076239774 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.799270292 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.778124714 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.887415825 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.778516875 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.800403423 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.763448076 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.768864883 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.815678304 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.781317189 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.796964801 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.76900875 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.780257025 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.780241214 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.764794204 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.776985036 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.778482622 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.764498493 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.772641787 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.76399965 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.813189336 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77881581 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.779645293 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.786174999 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.88752334 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.764459151 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.059480182 seconds)
done (took 277.64679901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.846326786 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.763761235 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.857485386 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.762614587 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.854128012 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.838805044 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.76422699 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.763146729 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.761405876 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252283881 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.763820172 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.766059377 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.761344252 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.762922754 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.836100065 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.764618093 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.762407765 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198688668 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.763770211 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.847140792 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.762251076 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.763981324 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.764100043 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.255468518 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.760718836 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.764150922 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.846622644 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.76297991 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.20720924 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.762909372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.76383227 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.210000769 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.845044279 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.791504571 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.771749735 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.771148872 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.855862627 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.776005444 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.832301962 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.834533938 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.863885365 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.796356756 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.765173349 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.761821633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.766726153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.765176284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.764757965 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.797264699 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.764452767 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.771880547 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.202203673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.769683725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.770921419 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.764381955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.763235529 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.793822197 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.765301021 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.766334288 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.846919747 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.765857842 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.836990496 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.258793726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.251744622 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.764440314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.76583371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.767600384 seconds)
  done (took 178.154141917 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.832032789 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.841977694 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.8343281 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.771133743 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.812368502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.833379006 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.77053592 seconds)
  done (took 14.386259881 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.774314404 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.76472898 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814424936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815063529 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.764909526 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.920025809 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.762160715 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.777567462 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.769525493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.79171744 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.768488884 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.768009258 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.77449958 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.764328786 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.81696961 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.775222836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882035531 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.767720954 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.765906176 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.917964298 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770633713 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.773925857 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.789331502 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.777095908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.765588882 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.773875149 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.329022882 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.76816038 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.765522886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.76688778 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768061624 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.80869107 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.766258158 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.76275937 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.768864748 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87991393 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.766774132 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.768203642 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.768608728 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.765358075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.768780083 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.767675417 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.767478789 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.768742204 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.768433902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.790902132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.768310173 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.769402801 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.768522926 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.768680456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.795136648 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.76909395 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.767788277 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.773413048 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.813634126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.774701632 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.766823066 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.769554637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.769865994 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.767464311 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.919362354 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.82056263 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.767548998 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.817896398 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.76974906 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.76855117 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.76722648 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.767566097 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856407729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.767193143 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.816853341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.76880871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.924051469 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.792153454 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.770860346 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.775103675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.773944442 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769531209 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.767378745 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.774837456 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.770309177 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.770822124 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.776569925 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.775758146 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.771561451 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883184257 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910149668 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.768309629 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.771903243 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.779260561 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.770354281 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.815878605 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.770757166 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.770897733 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827489838 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.887786256 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.799038299 seconds)
  done (took 195.803798184 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.776401711 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.77679923 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.772572876 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.786118862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.774008626 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.770095622 seconds)
  done (took 12.351992888 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.77336442 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.774575709 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.770466436 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.771508111 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.77136493 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.773133866 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.772812338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.771741096 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.775301701 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.771782828 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.772449159 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.771741197 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.773398109 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.772324587 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.773879466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.771559384 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.773738167 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.77136105 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.770762036 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771513252 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.020964177 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.770250385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.771776558 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.778879662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.777495984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.772744415 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.78832261 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.770735121 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.772849682 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.779618454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.77902246 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.774269429 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.775212135 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.781723999 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.777785482 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.776232647 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.778492997 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.774139151 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774206743 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.77392189 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.775047209 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.773061214 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.7739978 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.775409667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.77569287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.782748864 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.77959361 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.787493186 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.774129193 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.777140211 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.774346158 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.775001482 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.774924209 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.775522408 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.778514489 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780901983 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.781141725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.776586569 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.774525693 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.778801999 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.777316547 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.773491039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.778900593 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.779460652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.781936328 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.77638006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.777398396 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.778674904 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771742034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.77535148 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.776408429 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.77491177 seconds)
  done (took 130.78601875 seconds)
done (took 533.193408164 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.016460471 seconds)
  done (took 8.718305929 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.971080591 seconds)
  done (took 8.735187568 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.320566197 seconds)
  done (took 10.025935931 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.797990087 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.789083432 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.786489964 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.770837719 seconds)
  done (took 28.872623287 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.07515799 seconds)
  done (took 8.776976296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.800989704 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.771595106 seconds)
  done (took 15.345528932 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.785433718 seconds)
  done (took 8.491192527 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.142918974 seconds)
  done (took 8.851082902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.785474708 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.796615475 seconds)
  done (took 15.307125493 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.779092493 seconds)
  done (took 8.480431285 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.947958919 seconds)
  done (took 9.759527579 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.798249575 seconds)
  done (took 8.576370368 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.786422823 seconds)
  done (took 8.489664213 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.902022685 seconds)
  done (took 8.604349533 seconds)
done (took 158.734639843 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.779584287 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.769887253 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.769792027 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.771425087 seconds)
  done (took 28.789399991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.805801446 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.810894383 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.80881372 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.817873665 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.808237891 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.807898574 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.800792473 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.795931049 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.818123944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.807772735 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.808475694 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.809869674 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.812401874 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.802682304 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.810643872 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.809959213 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.821644426 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.808559679 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.796634437 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.81228166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.775649491 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.818731641 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.809617975 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.779416934 seconds)
  done (took 45.061861255 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.968082572 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.847529525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.929276659 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.828297631 seconds)
  done (took 9.275895366 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.826010751 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.829530177 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.842434112 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.879006013 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.902686652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.853707521 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.800556775 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.794242248 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.78238431 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.829692837 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.900122189 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.822742364 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.917274529 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.773602445 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.955408714 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.776184521 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.776809845 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.829150515 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.881349558 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.893339248 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.779599913 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.827218114 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.829606396 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.828546041 seconds)
  done (took 45.834025581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.777723824 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.785802435 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.787528213 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.780150502 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.781948655 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.780529543 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.787018294 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.779359486 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.7992063 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.781544323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.776219778 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.779104755 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.790718102 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.779486186 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.782220185 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.792569982 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.791587647 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.777984998 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.782165237 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.785673359 seconds)
  done (took 37.384671493 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.778467883 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.621141293 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.124576444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.029245016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.777771094 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.777833153 seconds)
  done (took 30.814586329 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.791367137 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.783142489 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.778888688 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.837573975 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.921204385 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.78691238 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.778757572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.790145258 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826099326 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843150863 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.795523119 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.808212713 seconds)
  done (took 23.44608766 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.777516513 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.776756093 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.779005323 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.790059532 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.787233492 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.786440312 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.787033035 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.776825008 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.79319424 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.799519502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.786753168 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.79253212 seconds)
  done (took 43.142450777 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854749865 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655061547 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231739032 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240219315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307265684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981392124 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.777113521 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868476566 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.781023356 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049680799 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.188482683 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991766168 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020561062 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.541023963 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.782152488 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.266817311 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068238838 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996035134 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80563155 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433997946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890373819 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317703519 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.491458008 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89369967 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979113524 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.902131843 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.038836081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.731378243 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829159798 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785003158 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786268583 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778792885 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053699114 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903677457 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853020962 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786589032 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.194862378 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.486878319 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.799702466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.491969852 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.419613646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908615566 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783166237 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781722046 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706928489 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311929871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871032051 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.786244309 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.480083613 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784131371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781834088 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852886021 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.782486345 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.586855686 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465530834 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046024784 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.784129065 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783699327 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343280895 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824641768 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416512396 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.715549181 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.877621766 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50239256 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245488271 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.937189204 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.78165552 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78627362 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709653468 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.495317428 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902418239 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917423975 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.795438578 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424263505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078876131 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.269108715 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840282 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054245585 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.591005906 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.714167664 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997764475 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.727772342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709030047 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.619493854 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.708821762 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995652414 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813112582 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.371858973 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815271381 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864610448 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78872727 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798412233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783673362 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994275976 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.678532675 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783354263 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.145530301 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039761248 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798341218 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868955714 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709870056 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.780279659 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025081329 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.98164044 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.032450613 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273337562 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872485762 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.609600128 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.905675945 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.724963046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.791142914 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.061643462 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845353414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832644114 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905966008 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.733027668 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029135646 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.636102368 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.991177736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.211935381 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030718932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.125165 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031138973 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844100989 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.789425348 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.788076622 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.516241197 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402873572 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00054907 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.799546204 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334883059 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.790403859 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.785523369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721194281 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.400724395 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.227888266 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.8770703 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995159064 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.743216996 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058090965 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713877199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920768987 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.782758019 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.998895574 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.441367764 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.872181471 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033474558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904532468 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.025122425 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911381795 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800319794 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87693367 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799433417 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.094369106 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152151992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.786010609 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.791345409 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515206018 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851415562 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786418314 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.787504787 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307651983 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06807062 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.813479609 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.787372464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662765565 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.794454361 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848940997 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788277714 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78972119 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.305135476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293198674 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.795924383 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.431528345 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003913927 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789214723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.505889999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9786667 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.799062548 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064601215 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859749446 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.712466351 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.487179439 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.487195342 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788870725 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71682199 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.785504352 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790517655 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793060623 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.976670169 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070561869 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837595734 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.503074412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.897735242 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790899458 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.787645143 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785189517 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.306060994 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848957435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290106636 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901258875 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912933994 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.797957075 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716205878 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.789648713 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788142797 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.786736449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.734150974 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832896044 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.458523164 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994843006 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034057152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.193020762 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796880847 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.463836443 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.913183712 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.803116878 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.163634886 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328993836 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.886465493 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846626579 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.793734222 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.463172573 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.523004871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349993534 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095075466 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114524947 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15299896 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.161346666 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.107418771 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875160762 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015885128 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.308425643 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847015377 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878465762 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723710095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800089339 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.448668713 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148755996 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798362856 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004771734 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091532774 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.242301971 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933176777 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991886221 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817418185 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.578203827 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813768283 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.328389819 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808701093 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.310647557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002625388 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872134368 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.170554964 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.878647287 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.791221289 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133799091 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83540668 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.489836015 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.14003833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.215307595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.342675951 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017444217 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.78915356 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231388545 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14658454 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.965002019 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.908999395 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716780125 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796974373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.794549781 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.803684962 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.76737066 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.616713092 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.03219444 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797316904 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015198215 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.893159765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159941591 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.706845519 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.791471248 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78875592 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036443391 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443455584 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94592803 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.073292017 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363632859 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801693244 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.718259203 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718833082 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.490654968 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79274108 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758324017 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001897071 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.89448642 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47083229 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.165535973 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100553381 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034604262 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.800510804 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072118416 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070595032 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.281323054 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815590803 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.888972306 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.187262104 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.481935457 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.005450634 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.017229089 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321870323 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010921967 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245441098 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.76547045 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.79135079 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998437758 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003705604 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.237409307 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973400336 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.500360678 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.804025193 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145192114 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859674337 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.247067099 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98160296 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.878465999 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798162655 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870455859 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797131184 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.799368135 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.799860426 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802165928 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.247285139 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914864672 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.80725235 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871595045 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864781279 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.376211598 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.801897168 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07393379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154055475 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134713319 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862248285 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.792114493 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797827187 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716439663 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920002955 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231015898 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063369256 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.908557843 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.92386392 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815987814 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.179620434 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.032376827 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099533194 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063240032 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.676095211 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468514582 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.908545098 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.009775838 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799632434 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.994437205 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009129849 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107657831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360420708 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.900959416 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981996373 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066361618 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157187073 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797976169 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373849784 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.798978643 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186206003 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.831539734 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.246978835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055618016 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796038011 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9134589 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797312553 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.998041514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.242974718 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532430229 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148491469 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646952966 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800451662 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077966572 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137077048 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100031071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871431684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801328198 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.4872716 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925019444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.673128257 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.031780422 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.795032785 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999286873 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.503127704 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.80125493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074795671 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104936238 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.792289313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.723480513 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839727175 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.801853332 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014182353 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012282078 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040023107 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799596096 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.795732302 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.603640205 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078503261 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861557007 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721482453 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.796613444 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841400572 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022933507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817038866 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.311678544 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.498928489 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089118492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.706676327 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811671145 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.187307731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179587552 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137943795 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.328022628 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01186069 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352325022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.613838521 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17280341 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.801034109 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.220630642 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174915505 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.797431247 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292301063 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905388978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.073742296 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128477222 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.809432228 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582670231 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.832113578 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011964151 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152055224 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730063042 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.801118992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.846075897 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.800431923 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781986639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804444809 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.757538573 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.233690769 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.636561783 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355246031 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.801153549 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.968410381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.253719287 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35438422 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900687599 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815606022 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807275226 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.489200548 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.088841983 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043455036 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28538815 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.892751437 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.796751322 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800429694 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719269585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977946279 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.982678786 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087655122 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.112609121 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.902047251 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80015048 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.007398604 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004189389 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.265953934 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934843465 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.907183289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911190124 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.741709963 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508331568 seconds)
  done (took 1625.055424385 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.81211405 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.829551431 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.805335541 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.842018731 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.809802466 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.817154993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.846528295 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804841716 seconds)
  done (took 56.298799753 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.801815741 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.978691117 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.808555656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.804062332 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.817276037 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.803422211 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.969569221 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.812223436 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.803327241 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.807918027 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.803247426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.800428362 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.08029366 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.824363011 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.804344182 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.799617351 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.802639231 seconds)
  done (took 73.061758281 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.804564111 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.034102796 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.834609996 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.807451314 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.762106916 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.816511015 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.823568603 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.810550568 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.803964957 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.384074313 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.09844492 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.815830592 seconds)
  done (took 89.526340039 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.819131801 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.807654503 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.807413034 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.806899017 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.807684999 seconds)
  done (took 10.788730637 seconds)
done (took 2120.200575326 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.142814909 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.070426274 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046977645 seconds)
  done (took 5.849450384 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.949027861 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.999467439 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.112846577 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.133458875 seconds)
  done (took 9.932451562 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.109367045 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.176330789 seconds)
  done (took 6.017337974 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.365681943 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.823429215 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.220127105 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.809558736 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.810000952 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.80665552 seconds)
  done (took 22.166330043 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.808213188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.808786467 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.806830664 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.806927474 seconds)
  done (took 8.965000593 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.807733179 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.484917729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.804229088 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.813752301 seconds)
  done (took 20.642780346 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.954801076 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.930379979 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.95084901 seconds)
  done (took 7.569735313 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.02787451 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.601868447 seconds)
  done (took 6.361631683 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.964706327 seconds)
  done (took 3.697731705 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.835722063 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.07749868 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.314205293 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.349759864 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.391666785 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.686095989 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.130078815 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.029003469 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.239141812 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.269404114 seconds)
  done (took 24.057453913 seconds)
done (took 130.543163324 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.166218221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.839905091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.016276959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.172976606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.049256767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.017994747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021628085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.167893247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.854245534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.83443802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.170505067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.042746244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969261877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.836087147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.976186312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.83407355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.040345991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.193270351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.880984942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.07932366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.032843508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.812550719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.002294366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.829003338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.041136985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.968679853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.353985992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835449407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.99519844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.371056235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.996296417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.20924037 seconds)
  done (took 166.344887063 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.810586062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.80555857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.804793799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.803920611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.35334704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.808866444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.80871818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.804940681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.206498139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.19234342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81178584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.337941959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.808184867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.804430534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.808054148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.805964542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.36413731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.806537524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.806937766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.805134741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.807841345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.190500497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.808022266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.229736391 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.364265435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.807236559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.807471816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.809613699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.807339383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.807143255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.809470117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.809684022 seconds)
  done (took 207.355574925 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.809327494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.810210159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.81015418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.810682827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.809877761 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.811548414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.808927123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.806639471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.474012007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459283859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.809697435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.809287063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.811599457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.806280256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.809421905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808152231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.808546945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.806921371 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.81198028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.80905369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80861609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.547062281 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.823403755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.540885769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.809144705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8101766 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.808480338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.809422113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.808205545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.811182782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.810309181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.808857804 seconds)
  done (took 218.436711038 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.055937052 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.812865657 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.814489154 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.751590487 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.813346826 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.814249668 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.807402009 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.060411563 seconds)
  done (took 18.670357649 seconds)
done (took 612.547820693 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.19132047 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.024919835 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.987889676 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.835568089 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.08306577 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.875631155 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.83440311 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.899700793 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.641156194 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.907032089 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.493386295 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.855264884 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.591785764 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.860434455 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.95879112 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.887307443 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.43122308 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53356863 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.009567489 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.90537335 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.010161495 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.730079086 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.914611659 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.670078605 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.611552506 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.777285527 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.858714586 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431281558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.845183758 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.995187753 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.502677076 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.087904235 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.843397346 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.830250736 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.890628338 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.868238544 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.042833991 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.839963925 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.958365083 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.528841675 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89751289 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.553130255 seconds)
  done (took 100.235055745 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.826304522 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.821486564 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.822034129 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.821160163 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.829995555 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.821403192 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.821580595 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.821095047 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.821233507 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.821410936 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.82316728 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.831857587 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.823268643 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.832246898 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.82348973 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.822392684 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.822622277 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.831608101 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.82236105 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.822033465 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.822540748 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.823551506 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.818100057 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.823011936 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.822674772 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.823023517 seconds)
  done (took 49.170532919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.815273988 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.992085099 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.060783527 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.83282318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.816666427 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.819467252 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.83468888 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.817197047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.819829662 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.818897475 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.906968654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.823885457 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.835890174 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.068829747 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.830351572 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.817208489 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.816703078 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.819192722 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.997352295 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829926946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.836988685 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.822598128 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.836629029 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.828745953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.817984038 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.817889734 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.820817014 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.265157147 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.823580227 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.908585752 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.863673022 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.837996876 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.189698365 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.076697737 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.869473775 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.826004591 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.818304648 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910731641 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.819802611 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.818001545 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.836364591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.820974766 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.063085796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.342435049 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.829961511 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.819584599 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.272542531 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.918268562 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.855776254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.825343611 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.06644075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.83195708 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.819331771 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.82019745 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.85513358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.82167589 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.818383661 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.129089526 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.828102427 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.837099308 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.819546765 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.821054306 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007473285 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.824397888 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.991148715 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.82697509 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.826090539 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.819156563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.063455959 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833652871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.36013437 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.830508996 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.819711036 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.910758217 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.995458594 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.298590489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.830234383 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006767119 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.211390353 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.841410977 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.82750778 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.251803965 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.845641565 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.827462147 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.822533463 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.822232006 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.819917879 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.864515452 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.836783322 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.267464098 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.353131661 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.145234371 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.846986051 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.831047286 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.82166744 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.130410251 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.826350395 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.82104259 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.057928688 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.355866897 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.833340122 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.828517323 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.338770431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.833279696 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.840643789 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.824965212 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.070905617 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.833601815 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.866435746 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.821806094 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.828479571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.823075174 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.839995977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.825517784 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.821392011 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.337023447 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.924970964 seconds)
  done (took 226.145997137 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.821330974 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.819420622 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.820230615 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.82010071 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.819566661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.821032935 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.82016988 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.820021452 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.822085925 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.820970401 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.820247956 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.821559869 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.82259151 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.824071046 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.824067274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.821812332 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.421756356 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.82068619 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.821117741 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.817315567 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.468430869 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.826461995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.821482432 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.816910304 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.822555662 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.82046091 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.826253382 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.822151873 seconds)
  done (took 165.995953069 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.824082512 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934641778 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.838409385 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.851224454 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.827751261 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.824538767 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.921779678 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.836363266 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.829054792 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.824373476 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.82264811 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.884667201 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.831204495 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.92166927 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.850966385 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.929604287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.92442381 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.826229422 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.824464688 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.82503156 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.852152399 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.828143846 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.883447117 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.942260062 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.838584269 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.936497134 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.840627396 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.82576701 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.825256541 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.938187698 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.839646521 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.883952046 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.84872019 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.839277911 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.942602725 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.938210049 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.924799293 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.924830668 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.825606884 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.825480812 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.824461493 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.826509049 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.937154843 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.841182665 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.825958204 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.941348374 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.841214509 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.824944703 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.825174565 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.82669881 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.838080618 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.843403292 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.889419741 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.953586362 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.857545138 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.846252855 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.923809547 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.945661367 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.827848488 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.923746345 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.826693424 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939231162 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.841962591 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.828298067 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.827637742 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.829939418 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.855107422 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.927739309 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.926017531 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.828744742 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92334093 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.856317941 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.834521338 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.827316853 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.826797622 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.940336516 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.940841749 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.857210169 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.860114403 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.857771675 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.832863922 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.827743492 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.828849908 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.842849423 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.831525701 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.939509018 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.940040155 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.828558834 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.828554692 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.828904394 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.827957653 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.852358809 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.946164466 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.859258556 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934873658 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.890106639 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.901786346 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.842889523 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.842999764 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.833184206 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.888211728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.843198178 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.840946848 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.12019283 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.889295377 seconds)
  done (took 197.971365241 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.202042723 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874778224 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.885929467 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.141078812 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.17864991 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.736730007 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.872429757 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.87854106 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.899901238 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.059953794 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.948608408 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.895947558 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.856853682 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.848741092 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.875210238 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.898457023 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.884935994 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212523353 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.093466211 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.99823224 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.862187049 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.178710236 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.182911162 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.468575154 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.92338434 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.278349073 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.435564928 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.009313152 seconds)
  done (took 60.343203403 seconds)
done (took 801.599169752 seconds)
SAVING RESULT...
DONE!
