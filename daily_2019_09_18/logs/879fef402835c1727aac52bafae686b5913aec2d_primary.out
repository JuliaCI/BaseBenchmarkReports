cset: moving following pidspec: 16288
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23874979 seconds)
loading group "string"... done (took 0.609684923 seconds)
loading group "linalg"... done (took 7.112593158 seconds)
loading group "parallel"... done (took 0.159642383 seconds)
loading group "find"... done (took 1.12680949 seconds)
loading group "tuple"... done (took 1.789580118 seconds)
loading group "dates"... done (took 1.27378024 seconds)
loading group "micro"... done (took 0.222476221 seconds)
loading group "io"... done (took 0.912735469 seconds)
loading group "scalar"... done (took 37.426281768 seconds)
loading group "sparse"... done (took 11.485073216 seconds)
loading group "broadcast"... done (took 0.978082155 seconds)
loading group "union"... done (took 12.32931146 seconds)
loading group "simd"... done (took 4.27327366 seconds)
loading group "random"... done (took 8.400909416 seconds)
loading group "problem"... done (took 1.862327791 seconds)
loading group "array"... done (took 19.442655307 seconds)
loading group "misc"... done (took 1.861942809 seconds)
loading group "sort"... done (took 3.242526993 seconds)
loading group "collection"... done (took 16.59675604 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482248875 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120711801 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.111951925 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116169759 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130601017 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113124147 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121139129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082471637 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.836463476 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142685619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118600233 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410475579 seconds)
done (took 5.153428961 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174852976 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084612051 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082956713 seconds)
  done (took 1.363224216 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066060508 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1229857 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067467149 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067713623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067943052 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066896437 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066587816 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066904648 seconds)
  done (took 1.722721338 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074219458 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069658224 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069426973 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068865741 seconds)
  done (took 1.476041925 seconds)
done (took 6.011117144 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765100426 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199906739 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181620602 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396028121 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131179695 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155746133 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643239156 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306924706 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189295047 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081066918 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10370327 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31492669 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106115247 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628229663 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073292575 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089390947 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.134703424 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413291163 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066860047 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081718204 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088072419 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127098214 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084299477 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07404492 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14396146 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066937695 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128689159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079859655 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065994908 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20602163 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171353813 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.643340843 seconds)
  done (took 10.175185791 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097800062 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09829295 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068504864 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13570425 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095136954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068673494 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070477251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066286026 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085645202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127053223 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087562043 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100298547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0651816 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068066066 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083597634 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203508555 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080782515 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080453189 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069451947 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074981072 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115795827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077461914 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076845902 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076880663 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127595967 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.1789564 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097671382 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096644477 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066291928 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079724509 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115802174 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124948825 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064878068 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065754784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12339317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094189441 seconds)
  done (took 4.643485293 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.273829911 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144334505 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092461696 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13279314 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06570155 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1085888 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066297441 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082070074 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200979763 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349926605 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.580935018 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110537911 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102165556 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067421075 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06783323 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109228838 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067490111 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.3558233 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107420588 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103933724 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08135768 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070568748 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068449079 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341192114 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067074753 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063461611 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067891808 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057708649 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12258836 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068085454 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920625535 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123568049 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065640542 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099613179 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160594195 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086465599 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273477762 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068651464 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064759419 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148409507 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069546695 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064136351 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086653081 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065172271 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102751214 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111770773 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065027525 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066296975 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161574114 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06446007 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078817655 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.989547481 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152088246 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076511992 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064270989 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.24391981 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085943943 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069207779 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064033822 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189170616 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13284732 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067030267 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066027555 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067388753 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068601458 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367920512 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065613246 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.884721663 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06946175 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076691538 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068454411 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068767499 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071825382 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071490967 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084920993 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065468713 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074577848 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065249748 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065319419 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066152535 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083720999 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.359246299 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065972676 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067606409 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06411304 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064252412 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085593662 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096002008 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065755968 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064619367 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099305087 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067536845 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169178641 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109443547 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06658505 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084486574 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06974872 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112575112 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069903537 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092131712 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06694019 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096028884 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069273976 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09899808 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080791086 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068535013 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397702267 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064595044 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064363527 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067107586 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064503602 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066691733 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066341763 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063951467 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078656843 seconds)
  done (took 21.123215761 seconds)
done (took 38.408780678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278157703 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078311525 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078363766 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078339776 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074313669 seconds)
  done (took 1.875555532 seconds)
done (took 3.145875317 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120415075 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099166131 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063910328 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094837477 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063597715 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098855231 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097816472 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080022652 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098356871 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063796994 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095698516 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063710986 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063482234 seconds)
  done (took 2.393962184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0841895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084257203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071474759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084276882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063267763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083528517 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081740927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090176447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081649529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072383386 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063124838 seconds)
  done (took 2.122652647 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083351772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085901001 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071288327 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081620435 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063918486 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082034042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082296923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086501261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082607424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074481259 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06527048 seconds)
  done (took 2.118516415 seconds)
done (took 7.892456401 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079008085 seconds)
  done (took 1.324090763 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58579392 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.018379483 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080692994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110805681 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183507281 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118602899 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274542015 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085933048 seconds)
  done (took 8.892863527 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089584499 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070819924 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084462725 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070795117 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070570285 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069230622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070867486 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071656026 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071033995 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067928203 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071000758 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070566651 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071297173 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069275475 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071875001 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070192934 seconds)
  done (took 2.482367902 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094364144 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09206454 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074590996 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076126136 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073612399 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072991086 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075777664 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074679984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071900257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073068844 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075099101 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074706303 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072374993 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064368732 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073169512 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074790995 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070268478 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073394144 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073811324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074395382 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073402982 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063544244 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070609337 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073212726 seconds)
  done (took 3.149262455 seconds)
done (took 17.10736865 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115522768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073153485 seconds)
  done (took 1.439852365 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083668749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084575348 seconds)
  done (took 1.432262907 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085035277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067579871 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090061302 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077078585 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065611314 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065270422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086296688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065671741 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065173006 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065390686 seconds)
  done (took 2.000244978 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070994118 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080737577 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0712251 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08040222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074896252 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065305261 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073756767 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068008874 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077040582 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062578352 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069946997 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082159074 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070237793 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082526132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071521955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067830386 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069695613 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066315506 seconds)
  done (took 2.574355591 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067705203 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068619115 seconds)
  done (took 1.409938932 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068719466 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065185773 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067791644 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067157166 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063652456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063351363 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064645916 seconds)
  done (took 1.729547383 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398033242 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111908553 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30046021 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071897626 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083213718 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253084462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066365244 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071346446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070222673 seconds)
  done (took 2.7428976 seconds)
done (took 14.597901878 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081128673 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086061355 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095944866 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371391896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090612114 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065145922 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113081217 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18815888 seconds)
done (took 2.375791141 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213540828 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.62093787 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378678752 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193248127 seconds)
  done (took 2.468888198 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331563512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088394328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059902972 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068180796 seconds)
  done (took 1.833333191 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067218485 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069813882 seconds)
  done (took 1.419354761 seconds)
done (took 7.219937199 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067985159 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084547369 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065156805 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067670064 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063539853 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065703417 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064406378 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064534732 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067069881 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066344706 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067635301 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065059677 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064803523 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065136785 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062746956 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062920178 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064842212 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062796493 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06556903 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065591042 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062618013 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064716199 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062551694 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062706098 seconds)
  done (took 2.893706916 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084522278 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06767872 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073038285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071960142 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06961078 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070435488 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070231742 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065458738 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070187528 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067250477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068841316 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068934782 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067224012 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069332208 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067631639 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069502154 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070069463 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065544483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067976552 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069358352 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07037138 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065628922 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068858465 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070087791 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068906735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069058438 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067612923 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065674993 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071104188 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07053046 seconds)
  done (took 3.372769804 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071033728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064427231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065409646 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071981483 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064339429 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066841233 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064135466 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065019124 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065646501 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064560829 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066425954 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064781074 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064718966 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065257873 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065217214 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068323954 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080252504 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065353209 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064662116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064961123 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067909353 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065288798 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064922396 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064632863 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064528766 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064043185 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064967092 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064967301 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065883676 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.178268304 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065877136 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066457381 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064196737 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071236082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068419818 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064246297 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068316439 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064024295 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064991484 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063908734 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063981947 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064552848 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064427475 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071135011 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065143621 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065969768 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063144536 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063972361 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063147799 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065048061 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062275217 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062633955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064766426 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063960753 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066689726 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063022355 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066068958 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063910363 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065213769 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064735851 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063935474 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063691598 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066793517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064700728 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078937034 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07096542 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064159875 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065571795 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065551544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06684904 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065736642 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076924651 seconds)
  done (took 6.160402593 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088273275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089492137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066349206 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065891024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062588632 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065173108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068193487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064282622 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064869512 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068853953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063396474 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064983822 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065960151 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077813037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065346143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066470219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070463173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062284078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064407735 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068272547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065160442 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067953358 seconds)
  done (took 2.814368876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156342492 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071233166 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107283458 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073520393 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068618446 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072254608 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069042657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069744231 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070348603 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069519811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069182658 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071072569 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068478285 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06905785 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069272362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069496219 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07058593 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069231219 seconds)
  done (took 2.681606812 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079261165 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067007108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0870427 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067741605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066955288 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06926095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071627738 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07458544 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068159796 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066587329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074972052 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069442574 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069524253 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066878661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069186961 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066842932 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069193285 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067095144 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075409109 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071186006 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070793196 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074681383 seconds)
  done (took 2.863196688 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081564167 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069393389 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083851909 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069969835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063213846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065405729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07108308 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067087673 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070972935 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068333639 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066831325 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065199061 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070477134 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066855249 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070340783 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067051157 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068595114 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064823497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067203506 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061012233 seconds)
  done (took 2.678772228 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089060022 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069312279 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069353949 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076651017 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068165683 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068889014 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076011331 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068205934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067855673 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087398959 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067592786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067536915 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075657466 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072590315 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067232162 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074055051 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073833919 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073759327 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066785122 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066626535 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086696588 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066369354 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074206184 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066498331 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066860311 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066589315 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066437898 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071225994 seconds)
  done (took 3.312324078 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068447491 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06674187 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063499406 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06286996 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06329637 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063211513 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063114189 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062733574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064886753 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063032519 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065042295 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065112739 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065792833 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064952003 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065755171 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065708864 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065237258 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062771722 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062853316 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063008514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065085614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065490136 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065010758 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062674115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062588561 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064891853 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062588836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062803148 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065497102 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062822289 seconds)
  done (took 3.233433172 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076430068 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075522813 seconds)
  done (took 1.457785124 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065354397 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081123127 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064551317 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070908664 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071185061 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068193106 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07425877 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070587813 seconds)
  done (took 1.867398482 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083619692 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079512448 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068585189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079476591 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075810751 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0831466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132081743 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066397595 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071942354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063947574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078556635 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064681428 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071296495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065759752 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071350447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071858963 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063294669 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072211515 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067835094 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064313501 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066867316 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074322753 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068434476 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06081524 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066763262 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086481037 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07616777 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065126107 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068293377 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074200725 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072450132 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061519346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06736954 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067479235 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064960594 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077140262 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082521254 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070104155 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076091591 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068275199 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07851142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062624129 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071965587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073806965 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077816335 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068068656 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068099297 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062664232 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065461591 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069931045 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062910786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06782541 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062131768 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077347014 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071101059 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078068243 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066361839 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0687408 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069811232 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070406767 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074000373 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068680745 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06831893 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066117453 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07263039 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070436871 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074431524 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060788752 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060307384 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064100449 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075007943 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088394121 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072122029 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066309219 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066382517 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063286985 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06890967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0677044 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071065284 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071426542 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065935317 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072077433 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07295916 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06654544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069052569 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074893622 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065436082 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069945576 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064287871 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082256776 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064089621 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063360218 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063080063 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075745479 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068647696 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064928264 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063571361 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072345532 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059785224 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065940685 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065894995 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065865293 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075361183 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069448031 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070319507 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073647879 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0722822 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065857054 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067757128 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062094132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065931166 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064321245 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071637834 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059030974 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067373981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065246267 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06519407 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199355494 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064741508 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067429702 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073635557 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072150243 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065400882 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063271226 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069557583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065882633 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068810595 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074435114 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064989704 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061185969 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061931597 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069081383 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065669026 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070675533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070415655 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069519995 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061492253 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064053324 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071528518 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075418798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066891665 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067273804 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072689406 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066878373 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066097581 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071851475 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072034819 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065806724 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072165836 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067411302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06078201 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068660734 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068702718 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065129977 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069704367 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069718312 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069233092 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067617351 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065143628 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073763323 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067184423 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064700084 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065977236 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064408505 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076348905 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068011081 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061427434 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063955096 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076556781 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065124384 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067858775 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067098258 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069826547 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06883998 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065654662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06698008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069266767 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07892849 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072153224 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068050314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073316531 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078202703 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066270236 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069074524 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065456474 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066680562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066078615 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074322059 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071398895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071262395 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068238229 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062279356 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071286888 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073050281 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064861821 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063470725 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064596004 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069892691 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071759057 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070000302 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066562706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063787246 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066309479 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068602138 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068446726 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065142621 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064768618 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071936901 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063635895 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072345922 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066629369 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075344963 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069240245 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060670248 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068679263 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063871512 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071620953 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060986188 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063751068 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064825978 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066503354 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064271874 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067748443 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059123836 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071717841 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072444852 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065276146 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064313394 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064984385 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071743178 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066389321 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068593298 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068207401 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071240261 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075199851 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064131994 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067991406 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074837207 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064812317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188583411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072464557 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064971959 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065749359 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065355078 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064181288 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069594434 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075504135 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073219807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061320691 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069754869 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06454649 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065747132 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063205864 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072727059 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071781379 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069562042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074842316 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069765764 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06897572 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072822573 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068126283 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069621875 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06822653 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068899061 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067388976 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068609976 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065326881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069952466 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064967757 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063747602 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068202573 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065835804 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066980518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071396975 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065598715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066816124 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068346784 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066710484 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066600966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066427742 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066171325 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069115066 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067609867 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066153178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068661978 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062053851 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073372642 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066238879 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073795352 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066457717 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063367308 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073179338 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068230596 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072215342 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067536033 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066541857 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067799755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065965194 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0687522 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072788826 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06453189 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076607906 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073880375 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066610098 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068665175 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066196778 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06727984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065403004 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06694984 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066936689 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067094093 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065190046 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070366622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068180132 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066337889 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06765984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066288189 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065658355 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066671525 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060206404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064617915 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064904634 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065312462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074934975 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06651387 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065007789 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064377593 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066154617 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064971999 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062859101 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07343755 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074656362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06611122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072853562 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064926065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067122899 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075895333 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060253669 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063800252 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06357429 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063519328 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072664781 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065932281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074618932 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065446714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065024629 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062487555 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065771722 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06372195 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059660866 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063106618 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068417293 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064104852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064345761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064803259 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067291308 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065928058 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074032311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064099513 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065781319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064473709 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06203503 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063629744 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06372565 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200231095 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06732804 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064394359 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063468286 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066099599 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067809558 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067963913 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066223487 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067177055 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076823245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065669058 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068853713 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069359054 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061350195 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068992852 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065331194 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0653909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064944994 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070083963 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069589136 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067591281 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075972485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065771647 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066232858 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065943432 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064578086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066236118 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06619224 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066417557 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065193937 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067788082 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074472361 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064440701 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069888522 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066506327 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066906183 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073177519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066982693 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068264489 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072878883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066720478 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06801299 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074483352 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070715731 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069840913 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067403116 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067799106 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07263487 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066235426 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072643618 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066994211 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067168044 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067776265 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064099716 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065780404 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066368422 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065333063 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071472666 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066846165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065006769 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065322392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063600131 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06770054 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069097681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073497359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068156249 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069907103 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062448467 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066117563 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069689256 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065692985 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070140622 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070326218 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073636153 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069758065 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068190312 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066069567 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076566265 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073020674 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071224267 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065287918 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070885332 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068052012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069616567 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068625877 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06803415 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068597198 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071201579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069559169 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066858007 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074584859 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070657493 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06848445 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069052664 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06815302 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068002802 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06278204 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06776379 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069254283 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072910266 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069870121 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06773031 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078169474 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065129632 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068050579 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070836522 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067338514 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071940704 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062572158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068685059 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068311882 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06863749 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06245288 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066716913 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065248981 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069598722 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066507517 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062485077 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077750999 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076479027 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070194488 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065891101 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065594236 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061802168 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061607285 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197080104 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068335954 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068220139 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0775687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066781011 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065811345 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061826744 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066660603 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068915887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069785849 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063877145 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062190166 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066213602 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069325064 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072219663 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065522555 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065934975 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070031216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069030299 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063959925 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070144876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064196464 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070323118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079482525 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066861358 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067237714 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073283041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074422266 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067258431 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061140876 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066944487 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069350665 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0666682 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06681512 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067828777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08235779 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070733729 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067467244 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066928042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071015339 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066909391 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07563914 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0692145 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068622721 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072896365 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069911422 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078271454 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07099965 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074508683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068897039 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068854758 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066218849 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067535018 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065037901 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065032581 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067197173 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067385221 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071827063 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074604362 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066413645 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077119443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075693491 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068892782 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063556035 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065793039 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065833203 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061753731 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066602143 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064451497 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064520957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064792653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06491356 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067028104 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070685233 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067014487 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066344687 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065238279 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060771206 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068035126 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067911121 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066307161 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06291967 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065980767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066737954 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070051144 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068896453 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063904846 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067356713 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067797652 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066647445 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061181795 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072598116 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065151128 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067990356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065344209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066573943 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066952519 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06948816 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070717521 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066922556 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068110679 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069592243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068134871 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063263959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063740311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071391783 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064463988 seconds)
  done (took 42.582101194 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102936537 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065226167 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062914179 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061336715 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073195156 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062681298 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061677866 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063193812 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062547146 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065376908 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061753208 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061189819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06990189 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077112846 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073274549 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066082611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061381709 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062746258 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06126155 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062279408 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070300682 seconds)
  done (took 2.801521346 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076417137 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072581574 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072526682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075822855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066767312 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069948123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072019838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06944146 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075168528 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066429558 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07509181 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069660913 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066863401 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066385807 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066288868 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070656824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074874722 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06700494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069807171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080002084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069946503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071487003 seconds)
  done (took 2.93551101 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069279423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067653609 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069803317 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063160282 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067524282 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063355474 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07067705 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065129936 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069719542 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064828213 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064789372 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064406856 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067289826 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061012473 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065270372 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063125967 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106716358 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068412863 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065207413 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066573731 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060932733 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067183245 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060904245 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06113813 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064335597 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069077072 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065862332 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06372729 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065367604 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06453596 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065207456 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063238879 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066827739 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065623893 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064547108 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064762953 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0654903 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065387193 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060697893 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063445802 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066237227 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061443203 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065627275 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066542999 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063483348 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063225959 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066738664 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064461435 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060311099 seconds)
  done (took 4.604072033 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08125825 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107582536 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067054724 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087744462 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078979068 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074410799 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068703964 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088493721 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062702195 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063658913 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08056014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079166541 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065082764 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069763571 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072025113 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064935327 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065961765 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06404017 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069221322 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064498097 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068914277 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071214332 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079229467 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077903907 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06922764 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064057946 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064362347 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06932895 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076986398 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069566697 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069249401 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070278403 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079318466 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070376801 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06432406 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067240771 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080708866 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065185484 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067395459 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063019133 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067688996 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069126801 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071187413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080861239 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065362499 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069903958 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064843643 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062461584 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077359507 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067061181 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072609603 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078840424 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068590576 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064983407 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069012617 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079350529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064458036 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062970628 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067713032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076553432 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062868837 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06838139 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078024722 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066319673 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071403813 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078549938 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06968518 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06850389 seconds)
  done (took 6.362436598 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077290092 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074173165 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082205047 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081960354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073645253 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073956373 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073252753 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073399948 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073145742 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075885952 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071516455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092634615 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067093886 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074625059 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071798449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071605482 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071513248 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071362712 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07150548 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071418359 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071805656 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079085835 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071574154 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078920821 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096900665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067099478 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071315678 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071434612 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079206398 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071511744 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078423266 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071389124 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071616398 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07910332 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079359213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071352188 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064331208 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071159072 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071368457 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071036393 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06694204 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078891194 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070870258 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066586684 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071248002 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070850803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078669727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078224598 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073970109 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076066133 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071062077 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07939784 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07094049 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070930558 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078839875 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102863422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078271813 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078966944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070921879 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078335788 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078746104 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084555636 seconds)
  done (took 6.052649917 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083599283 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075512173 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076605538 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061276529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065187314 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071167752 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065851369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065768959 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076172328 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075424445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077707158 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069916937 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073440461 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076169119 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068661129 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071502972 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068772482 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068678031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073594581 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068759307 seconds)
  done (took 2.827968907 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07694175 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085375707 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068450852 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072767852 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069465704 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07267895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068645391 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068762916 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067002081 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069329332 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076285131 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076693582 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068334089 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072794611 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076960348 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072621312 seconds)
  done (took 2.550304063 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076870964 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073476067 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081759506 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066628543 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065097075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063846673 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066704144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061657023 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062412182 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078036762 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065365873 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067115775 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065114278 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063665838 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062019836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06820584 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061660449 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062597812 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065212691 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077254698 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075963186 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06404357 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066997433 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065951756 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065442561 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070221259 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064814099 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062741786 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062640555 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065224714 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0653789 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068252034 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062394123 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063176346 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063612147 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062506025 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064724514 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065277496 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067668369 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064802954 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063142355 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064686756 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064810869 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066270298 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061529616 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065079387 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061357502 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067000323 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062999539 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065175483 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064970087 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067246306 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065603738 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071497788 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067611386 seconds)
  done (took 5.034483722 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081150471 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070868765 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063066361 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065175394 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069544713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06856898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070229668 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06810517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068405977 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06486905 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068269023 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068109191 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067802791 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069481902 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068283519 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070056321 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062562288 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068609779 seconds)
  done (took 2.636038537 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072883707 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068037986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074569049 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067383034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066597498 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068631942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063452269 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065643869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065174139 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066287886 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065771417 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067266555 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06370198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067460059 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065022367 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064972517 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067280436 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063970132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065238186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061346225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067418609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064158436 seconds)
  done (took 2.853755919 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073060437 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093272259 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141301155 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084109147 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081402881 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078771801 seconds)
  done (took 1.945469565 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091390211 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080428005 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0681256 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086783209 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073910342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066545364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066987037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067044417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075081229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075515047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066795167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075154567 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07542589 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074920649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07231072 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071918371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066804231 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066365913 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065797357 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083128546 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066577177 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074849176 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066615214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06644382 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066446089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074008728 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074818067 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075345124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066069617 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07474118 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072166586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066690129 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074983584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074907176 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068234519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074951161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066380655 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082887182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072157302 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074178146 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068007307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072215136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075112353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071064821 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074886426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067260019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071472849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066867205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067029929 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085326191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072585645 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074424563 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072647566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075264468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07491669 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085000391 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075294644 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07444513 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072589866 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077800442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074220021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071982816 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074163054 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075131267 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072508476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074489402 seconds)
  done (took 6.215784733 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083710397 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087662781 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069601774 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077732438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076692152 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068894122 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068542665 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068900402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068086898 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067789711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108258282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068903339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0766937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076117144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067589538 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066959699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066884655 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074712126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066494209 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085414363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06698882 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074441609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074683695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074374459 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075559679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072724301 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066696354 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067092772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066668257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066825447 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07157885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067257256 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074613327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066914197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074475121 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067310143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066960132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071568124 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067407749 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072351063 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07482774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082798927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066602989 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066601344 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075075921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066706876 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067255124 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066607131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066869875 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066493608 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075454704 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075447123 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075576121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074279783 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066938993 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067154544 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066948542 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066762096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067085646 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072392135 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074821119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066897448 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08498379 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066773644 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066860484 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074839735 seconds)
  done (took 6.157128522 seconds)
done (took 130.172948754 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187727591 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169624591 seconds)
  done (took 1.745392137 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070620998 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099902095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076218716 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128584292 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066725956 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.0997478 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098623638 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077391073 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066024616 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065691607 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065797239 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067857272 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130720994 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06575711 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065652322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068352196 seconds)
  done (took 2.716155884 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098268663 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156311731 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099042028 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064405808 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096414571 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072783127 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06447996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074288167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070190436 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064412154 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072196025 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070229352 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064330698 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070070654 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070941357 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072324052 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064213059 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072257666 seconds)
  done (took 2.823145286 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103448285 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091384755 seconds)
  done (took 1.606930048 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157480788 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105643466 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149730726 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344612197 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165514726 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228944973 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13133621 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126455906 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115501228 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122642383 seconds)
  done (took 3.054232869 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101292936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152942617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256110789 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114364962 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071833311 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094242748 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115436571 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077456173 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080383888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080051093 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079566054 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075648423 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098186489 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072482362 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072929268 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075454681 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101303358 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071910202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073937965 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076400649 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09820759 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065078581 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073402601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071631268 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076692139 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076988131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064886278 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065207608 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076133525 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075149361 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076183077 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092962011 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076873273 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105653979 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069857586 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106696263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075603468 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073304502 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073348471 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073323452 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077877052 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078119115 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071208347 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075583922 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064601006 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075446186 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064570293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064771776 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07738366 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066318691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077135706 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076173873 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105500196 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066284297 seconds)
  done (took 5.988388419 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10333194 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105048789 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071639925 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108538618 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096617716 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070782906 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10018256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09061419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101999862 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092149158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088914663 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069906734 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081548914 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082321439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108440506 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101269648 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094565912 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069988474 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101147309 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102352848 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068170208 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093829658 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090467854 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101184121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067843909 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070151762 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067593533 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069792586 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076112066 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077825539 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069236291 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101504381 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08370284 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078347391 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066595991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067368938 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06796247 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078775429 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097060576 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07830098 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077061681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067307945 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067180769 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068938528 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08986241 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066907017 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078308182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079657827 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078243088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069084358 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070028001 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06738244 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069159028 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079213212 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076696361 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080107892 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079177866 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067794748 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067850552 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071165148 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079949492 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078163395 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078029779 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091831082 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078161834 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067547788 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079621721 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083984879 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067802814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069210874 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067973538 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068670347 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069190423 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077148731 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077367906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069069352 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068877762 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0676927 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079275172 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077584207 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067405651 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076414151 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066802841 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068254798 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069574822 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069495663 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077042002 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079134786 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070147937 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067489315 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068693529 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068378054 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066272713 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075321201 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078597556 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077253434 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077302333 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068678437 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077132179 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076644964 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068401918 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077379723 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19783006 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07088116 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069965649 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078580406 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077250723 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078939099 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069911908 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068854967 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077954099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081471235 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068654632 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078402262 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081036802 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079709846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068465864 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080762378 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068589837 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0804585 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069718997 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079941599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06792143 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079772911 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068717291 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068655472 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068166291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079603193 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070947518 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06879957 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070104009 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069480725 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079393716 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083529206 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071046023 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081954321 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079499333 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070746627 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078744116 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069769336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079158792 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069891063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069370001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067283149 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081337155 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068961464 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068461905 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069243994 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080762556 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06831227 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079767753 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078104256 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068174848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081233002 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079407837 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076351551 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079223149 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070662947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068191037 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068507011 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069054123 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077780562 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079579923 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070197504 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068429289 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077333873 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078563589 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067356387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077590595 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077656051 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077930947 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068240804 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069238541 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079549396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080071947 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07742615 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077329561 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077968121 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06768093 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076699233 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077383878 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067759769 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084263996 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067569785 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081548127 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078449019 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076291374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078046812 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079583814 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07950065 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078940786 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082172441 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067827094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067594823 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078833577 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067245397 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06834182 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076187125 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06861785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068752442 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.0819019 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067571795 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078301345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066240851 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076364023 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065698637 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068281977 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.21391651 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068996408 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070285723 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079740263 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069690018 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077996304 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081206207 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079779374 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069178876 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06980491 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080305374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079583466 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068659904 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069103921 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071006599 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078992872 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077689902 seconds)
  done (took 18.738840001 seconds)
done (took 38.087538897 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21194954 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150410429 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178000285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117267555 seconds)
  done (took 2.170120259 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124969095 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10240809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094355209 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064395878 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101172679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06444073 seconds)
  done (took 1.998192885 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318241236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211798632 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18014582 seconds)
  done (took 2.152164874 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203176241 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18788599 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391228105 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251174259 seconds)
  done (took 2.593049745 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14683064 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09176123 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068808589 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085002377 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135657931 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15903064 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100340511 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124672824 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076946036 seconds)
  done (took 2.491364233 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145867185 seconds)
done (took 13.000281618 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125546023 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202211473 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.229241583 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091315947 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195779166 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082583101 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199275181 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.216140525 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077134415 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052596728 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.14025897 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078671831 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07197823 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086823058 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094983413 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205067912 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074777708 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073214498 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.168070274 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06256104 seconds)
    (21/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108448537 seconds)
    (22/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068926152 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18251739 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149006919 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09827795 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074962517 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217601347 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.19437281 seconds)
    (29/309) benchmarking ("sort", Int8, false)...
    done (took 0.147532562 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074914521 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.13747865 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144963233 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185565026 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070258144 seconds)
    (35/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077924273 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120197649 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071521042 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052087263 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107688533 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092931179 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136193874 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.125702824 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097726083 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079501356 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069951357 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064521668 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078170644 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071473182 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051021518 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090612486 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098766189 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050528056 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071390806 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110274476 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064627455 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178794014 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066736842 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201253505 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068344966 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.164906086 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070455531 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.0871256 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090875427 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.137896293 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078264065 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087401071 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066475624 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089137449 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06643845 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135142379 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.106465432 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070901254 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075714452 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072926537 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093476701 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.06517899 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093542867 seconds)
    (78/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070644385 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062584831 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053438224 seconds)
    (81/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162430231 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072571178 seconds)
    (83/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075095853 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052041821 seconds)
    (85/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150528727 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067769714 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064947821 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.235006295 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143613558 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082323703 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090753642 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053956464 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100245291 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069157181 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07713649 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150288567 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.195076378 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075146219 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072692591 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065316269 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072002714 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063021414 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07260601 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182246609 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06620161 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154305058 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.381089653 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13847752 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.150373003 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107101641 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105236777 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079876357 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076387482 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065603181 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062747832 seconds)
    (116/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088551125 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110821857 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051226587 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159143452 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091973515 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051956527 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179112456 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179149993 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.132794144 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072874141 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078541849 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072962621 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.173040065 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.173334546 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070078809 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075554098 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071507591 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066130127 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.16820431 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073277678 seconds)
    (136/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104562844 seconds)
    (137/309) benchmarking ("sort", Float64, false)...
    done (took 0.123842195 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097940415 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096060172 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108239232 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070746253 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170651497 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134877549 seconds)
    (144/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097879369 seconds)
    (145/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072006888 seconds)
    (146/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074204737 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050809326 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05114548 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064196678 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071503909 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064719265 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094079758 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170202047 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193448594 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071445873 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065933854 seconds)
    (157/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18265409 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072727373 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073250815 seconds)
    (160/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066089792 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050588417 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167682954 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065191298 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067139733 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.146757124 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051116965 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085119262 seconds)
    (168/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069068908 seconds)
    (169/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074418635 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052534411 seconds)
    (171/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052790466 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064633526 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050714898 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06869297 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107181962 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087832774 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052087604 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060389529 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088967421 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071347461 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051851545 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.182233141 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072778949 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090585643 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050294217 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117753297 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051846227 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064850908 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050632404 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087184348 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050662085 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203947473 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064335191 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150183729 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068419164 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065574656 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068955891 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075413643 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136635153 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17559846 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052336724 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088661187 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073516899 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074246969 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072786849 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051405761 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066007711 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054458738 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064859105 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086932171 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085906787 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050941374 seconds)
    (213/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063899061 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0727693 seconds)
    (215/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077906453 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051218637 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067199699 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148426606 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072904233 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066409408 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158353925 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070170764 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150854205 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052865996 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061403748 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06315433 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087851764 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070720084 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065784674 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050968167 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052464189 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0985046 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062051486 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078701078 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135228562 seconds)
    (236/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060701589 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118403615 seconds)
    (238/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072610871 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051066092 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088363625 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050719589 seconds)
    (242/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071024308 seconds)
    (243/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07335623 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051257423 seconds)
    (245/309) benchmarking ("sort", Float32, false)...
    done (took 0.126503538 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070987253 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061126903 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064870826 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066404289 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065433315 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068541588 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13974927 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147699515 seconds)
    (254/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071413544 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140529518 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116155755 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066893912 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129793368 seconds)
    (259/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051680894 seconds)
    (260/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066174172 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064474556 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099961578 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064457042 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050737968 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093642359 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069548744 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070895225 seconds)
    (268/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05132008 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086513594 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064498566 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071998725 seconds)
    (272/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105441156 seconds)
    (273/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051920979 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064306362 seconds)
    (275/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065181679 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064345064 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064425922 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070320437 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148291697 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086077964 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061819445 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050882607 seconds)
    (283/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051781244 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064809654 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050673177 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07812348 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064784578 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072050076 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051029431 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063667797 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052408637 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063370736 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050961867 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050710786 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064780786 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070941711 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052092851 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072117789 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05170347 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063399392 seconds)
    (301/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053074963 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069831025 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051333169 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123684396 seconds)
    (305/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050525899 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050533106 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06956129 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051339506 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050698606 seconds)
  done (took 30.371375697 seconds)
done (took 31.829976164 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085950899 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09225118 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074504237 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092187387 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079135144 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.0760365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071680568 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077005894 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078641546 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08064079 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077507885 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054352139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072859286 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073087247 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073398888 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089815086 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077058381 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071832757 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072302143 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063786362 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071865556 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064659162 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066180998 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054354276 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077030366 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07073819 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071165368 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072782184 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06452412 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065007989 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067728908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072098145 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064828285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076897703 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071043587 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071501309 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073542209 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074880779 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066734187 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064834102 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073108632 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065667161 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07140979 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072045859 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070716372 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070237704 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0719853 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077097354 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090586097 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067182203 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073163657 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074597521 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075232577 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071141024 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068541661 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072000411 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069630157 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089971793 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07261905 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067235314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073011112 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073057797 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070065153 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072298724 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072169057 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073892285 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073971816 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070069176 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073367472 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070410811 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064466523 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072301878 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068295415 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064665328 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074232046 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07561642 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063855607 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070102199 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071523493 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070218782 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063774258 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066991818 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066555427 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070915877 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066846662 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053989346 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068225588 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070363509 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063832312 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072038844 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070614639 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0709827 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066283616 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074130584 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064258071 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069478542 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065042688 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064719101 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066045889 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068427876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06415024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066739605 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073278236 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066173743 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070164428 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077863862 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064139883 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070775641 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063318187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063693262 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078021856 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073548717 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064457927 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067245358 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063160404 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071163751 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063008413 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064048505 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063856349 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06418632 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069933687 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064058704 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066247869 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070539678 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075954491 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064326193 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067432901 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065359893 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063793223 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069011488 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063593994 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063763058 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200134398 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061904543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067945996 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065709666 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071942121 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067594157 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072667272 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066048615 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073019025 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069252798 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070609567 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070387801 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063909108 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058756516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068146234 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067374297 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06787294 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065383389 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0664518 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064461681 seconds)
done (took 12.352986228 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067948545 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143250978 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098552132 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094585501 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084941096 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065874393 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07570614 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100780685 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067211597 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101171394 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085751591 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083864997 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110998417 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064197119 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065124463 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068396353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066769269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080066256 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099169384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085195812 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114215576 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064363893 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093379948 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088841164 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085768596 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09083201 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06622504 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068754698 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068562246 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098941188 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085363729 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068434329 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065560035 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099286452 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091131473 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082047689 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06551973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081058609 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065665149 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064921618 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066255831 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097085557 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078334614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078910885 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068763086 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068228157 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066127605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082139589 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0874285 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077405823 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085047809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101084353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067584142 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064388935 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063966175 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084115352 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064364423 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068141906 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065301049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067198019 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065265246 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068333337 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079875475 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080860608 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068778447 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07915153 seconds)
  done (took 6.764842787 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085434449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089750949 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082712685 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083433008 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064854375 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06579213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065837503 seconds)
  done (took 2.07937062 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068318852 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087958483 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08859703 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087302871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083383849 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086128906 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074549323 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06619453 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079970345 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066896942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086172337 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100492042 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06624483 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072111253 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08956124 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065637763 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089324371 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065764879 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068619884 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088936586 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06742283 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081088957 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069478202 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066084578 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079856432 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066054417 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110503812 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069673703 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067481784 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068821872 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06348168 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105401708 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078909828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074330531 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065644667 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07987088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079691107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063784682 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081650347 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070526296 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079019776 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066466935 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06661085 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063848477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069830219 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075969533 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066364571 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066334172 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068113131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084923112 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066332262 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079061469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068897979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068060274 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067122942 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069406619 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075095244 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06625643 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085030839 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066862255 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08195274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081157373 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079270004 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081108626 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067702814 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079097832 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079088725 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068004513 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067322135 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068651257 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081459126 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063948483 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066889999 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076286889 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067385621 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08825531 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087976407 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066829727 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07450562 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066241527 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066063008 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065621226 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088100021 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06813597 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065644811 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069768817 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068562723 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064075558 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064660737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069243875 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063596599 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067739333 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068873922 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068217905 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068170902 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081707199 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067914032 seconds)
  done (took 8.712629828 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069648655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067219358 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06862265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067406922 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067735995 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067643041 seconds)
  done (took 1.973440718 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095527568 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068778437 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080522879 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072038593 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103677313 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085682811 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085639813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078036844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082518195 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077805562 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085612019 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087014453 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091441739 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071893578 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085344604 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071606009 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085803001 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074897863 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078016559 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072010858 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085541384 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071687569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072070398 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081169806 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07480419 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071482324 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066556505 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077919373 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077527997 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077633721 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071759135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074612102 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069475687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077502006 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085623086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069713463 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071296107 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076541582 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071398194 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0748631 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087516502 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072195022 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073620275 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076706181 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077582616 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069925717 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076141443 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074899856 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084888017 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076344818 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076007206 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070460638 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074242171 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075769072 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069130461 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077338932 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076074937 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085471549 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071373552 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069255852 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067933047 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074375378 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077003033 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074092199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.0778398 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075934191 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069268537 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071864378 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071869278 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070718902 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076598048 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068092777 seconds)
  done (took 7.066464617 seconds)
done (took 28.124575124 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545921413 seconds)
  done (took 2.077566366 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602623499 seconds)
  done (took 2.160797812 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.616168703 seconds)
  done (took 8.16929004 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407927163 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478301946 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690588267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130378885 seconds)
  done (took 3.307372817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67819325 seconds)
  done (took 2.238373461 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214506993 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196655247 seconds)
  done (took 1.980689599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383036793 seconds)
  done (took 1.938351324 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112702793 seconds)
  done (took 2.670584418 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267486072 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163685586 seconds)
  done (took 1.995348952 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466563063 seconds)
  done (took 2.029924014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.853368273 seconds)
  done (took 6.418890341 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209710295 seconds)
  done (took 1.821874571 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245732014 seconds)
  done (took 1.804847891 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.719329003 seconds)
  done (took 3.281210501 seconds)
done (took 43.460299278 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082656638 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08229156 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081243299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077953829 seconds)
  done (took 1.873320286 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079484495 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073535193 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.0766319 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071567213 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07629081 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072450419 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073561054 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075990698 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071718669 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072213958 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07168948 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071796095 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074007306 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073424525 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070060799 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074459826 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075277186 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072136496 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074833491 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07207296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070703721 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073918044 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074069664 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071128383 seconds)
  done (took 3.325474075 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079873334 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073001981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074597143 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072394209 seconds)
  done (took 1.868664639 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080114115 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093303904 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089275029 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076469689 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091696514 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085828168 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069038865 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068132022 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072413983 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076313126 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067348915 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095032601 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086646686 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075962243 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078180082 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065547004 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067729138 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086010311 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076425026 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077057012 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069506368 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076248176 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067153859 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087400518 seconds)
  done (took 3.442674554 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080318825 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104624762 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076617992 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087828925 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089098709 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064983267 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073792927 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088804765 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121669826 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064786911 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069653169 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06452692 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071371639 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064751679 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075461595 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104159643 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10715802 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067693774 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094879253 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064638118 seconds)
  done (took 3.211586152 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07515191 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069649289 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065358891 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068661837 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077501573 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072264413 seconds)
  done (took 2.00345141 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070246819 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066199708 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066746611 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066145764 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072475337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06688067 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066610505 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066556416 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066575227 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066347125 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066058849 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065168145 seconds)
  done (took 2.375878933 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.430852429 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068158501 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068416477 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0652828 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069795129 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065879241 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079147872 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067473895 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089758995 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065366938 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065883694 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067808761 seconds)
  done (took 2.775590258 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209840154 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075789791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234623938 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135488851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110188969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114131971 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102954871 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111576302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14204761 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100783891 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165553046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163572498 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106022223 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135725738 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088189418 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09679841 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153506452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160339444 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102439252 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163021792 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142011839 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123501503 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144632267 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099881846 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1044162 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120109576 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070161986 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079229547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167652363 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129282433 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145007153 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110095794 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09232566 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173590049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167505174 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139893203 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131928754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082788188 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100494034 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131387305 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196061949 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087555725 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159739586 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244227008 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081192508 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132180411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120122641 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118989388 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106091314 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089131771 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144313381 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180610547 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138195016 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08686321 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111299624 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114176248 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115754001 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102552254 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179600486 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160625664 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127088629 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070261796 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097267513 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153388885 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130103118 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107932083 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126037285 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092179675 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131871044 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152627777 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117413524 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14159792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127191754 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087830186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118221123 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137712534 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126962695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167700678 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123193254 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071915763 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123688207 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101787656 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080166965 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141249276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074851787 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172125178 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096992673 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104591188 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111453393 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106828678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107735204 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159028723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141664026 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24304957 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065388122 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103469438 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118959191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146328555 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086863113 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107949983 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116197819 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077617205 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139827455 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074145978 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123385364 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074632388 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124312844 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131375021 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074920573 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121942492 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099992192 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09960003 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13145378 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158505825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088124166 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080638788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164960327 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120462476 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10369929 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142042129 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154467785 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097940107 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10137683 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147854642 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17914326 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088954694 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160899699 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105967788 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082414736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086448435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122421589 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111669846 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121210592 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081151511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117364915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166609874 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074446037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094292169 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131978722 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077558895 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079620164 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101445359 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098459477 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094351922 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098878334 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102563736 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135687609 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121859211 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103720757 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268613177 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098483753 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170442173 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088805739 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100023617 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103178185 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069451313 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136244271 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15613141 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078880764 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162930121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121561156 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105091099 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118432278 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082955726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138428429 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078472483 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069784621 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14181889 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110493723 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108923528 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148975828 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102741029 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125728803 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118860732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133732893 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130962631 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128194304 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104978076 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087142467 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110484075 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124383483 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072450921 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089672175 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079154964 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102623802 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094254341 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082440378 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141671356 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123127918 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099227668 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110612442 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095411177 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145433763 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075609968 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127915501 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117674876 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092799446 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149403154 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149832561 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129046734 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09762675 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142794832 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069393735 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072914829 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087791979 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266807615 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082904723 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083336217 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115964313 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146690216 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12862464 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137065689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111280847 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120044029 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153558252 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068692584 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114142506 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147010059 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119903367 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103379652 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088744662 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097521374 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140446109 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107274062 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180089132 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113339645 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124855551 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152076589 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098775484 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083401908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102213609 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134408888 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103320766 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143015314 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09826578 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08719501 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108703938 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073966625 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099864558 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125497884 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11787986 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133404114 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113197534 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130410933 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076263106 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115511529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118755084 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121076285 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063338667 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117687807 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158508958 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092663358 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116951823 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150570485 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078536837 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122277503 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317991371 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14677849 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08375233 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10887824 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118357183 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126911461 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119136582 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138870793 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106575901 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134542999 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108679769 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084906935 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086153037 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096126356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102872833 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093887493 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10754433 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113843999 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09352191 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131736406 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102404037 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108640425 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117379003 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095467237 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088244045 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095726308 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174463418 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118555867 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171100401 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097665616 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144228763 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162296369 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073995669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077979317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076924006 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137801724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082795356 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128792912 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096201522 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104497384 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12226822 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14012411 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09367591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06758571 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106991379 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132393806 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110682622 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097099036 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102806486 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160165157 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099248332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078083913 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11152624 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102648625 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100583248 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170442436 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060658554 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240467772 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07643074 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080570494 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127481273 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152205381 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079372606 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102015647 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11834133 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109039224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126846395 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100154326 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098554014 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113175547 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149081277 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127564127 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088824832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110999422 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128766678 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154596391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103807043 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095069748 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17031583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150197214 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158232715 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087536592 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112894455 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129926339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106651604 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137466415 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082269658 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161979605 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081002011 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13431638 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102755387 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08884717 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127894565 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097689106 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087428736 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145612171 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116572098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081552651 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076782825 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116173212 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119241664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104562723 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074099436 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136777464 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071678594 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129970519 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166372355 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079886487 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102374846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238799542 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080338221 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10783736 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103189457 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089527804 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098830422 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171144205 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086799916 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147060668 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140946885 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112260065 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135223712 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09900777 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634907708 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076914064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14976823 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114462514 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172216987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096596935 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117107748 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107970058 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123481881 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143553617 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104460467 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174338558 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131047752 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114931533 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081382736 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102058385 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101697264 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087461262 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104242841 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112321139 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114919383 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092274239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114438114 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121763162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080658896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093938878 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15416576 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115633507 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142681522 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138395752 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083927745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116662666 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136449071 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0786786 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120118544 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149400661 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104125901 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096108402 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078937026 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246109725 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170219999 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072799568 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162818193 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118877437 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109353905 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112504212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113707561 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1313708 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106578089 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121039658 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093968964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110321297 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112828236 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081090868 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076758479 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103512953 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11155477 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096811128 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099064973 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097933883 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149597782 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070501766 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095034372 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102621362 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144091184 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173971303 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087101993 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081790494 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11760853 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111727864 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111414283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119401931 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07845941 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081602958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080680671 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076307852 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107133355 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110722795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103417345 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109555286 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161665006 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081708516 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224427913 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093754227 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103473997 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068745918 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077552501 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094577502 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095877036 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107136482 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099426648 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166455075 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092984176 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0880523 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090391241 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07173375 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081088891 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124590688 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255750923 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118715438 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097322252 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061811789 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108573724 seconds)
  done (took 58.339174123 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110867665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081613038 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096242925 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148969542 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12099599 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210632857 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15622671 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19832791 seconds)
  done (took 2.800599504 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070075131 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097013218 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100713183 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08212833 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066199434 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068607506 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222603557 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079422344 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065623164 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08746561 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078925709 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068282722 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418789826 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065394746 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067009736 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061986876 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067788603 seconds)
  done (took 3.43938916 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372647602 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359717542 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369292354 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072169419 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.81445469 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088141222 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078141365 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09589269 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071494724 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.282414412 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.697530073 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094419461 seconds)
  done (took 14.074944125 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077903935 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068975044 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083857106 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083951268 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07204524 seconds)
  done (took 2.063070403 seconds)
done (took 103.197798291 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081526223 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401547294 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053258663 seconds)
  done (took 2.160163685 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084588169 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083279215 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082857729 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082053635 seconds)
  done (took 2.018399499 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077328128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075024684 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083887624 seconds)
  done (took 1.914887743 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221734916 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137936498 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085515531 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083673764 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077411951 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077603122 seconds)
  done (took 1.918125036 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074575786 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074993337 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072919088 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075603143 seconds)
  done (took 1.97202021 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077590619 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053169126 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054542709 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05546457 seconds)
  done (took 1.915090288 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088423878 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077756534 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078263841 seconds)
  done (took 1.918952314 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109225704 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083396172 seconds)
  done (took 1.86842242 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083501594 seconds)
  done (took 1.75960555 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100914325 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113207168 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127129403 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108184117 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134563336 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107214977 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084361619 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085795259 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076098896 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085814528 seconds)
  done (took 2.69791826 seconds)
done (took 22.34661033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080101486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362967708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359723782 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089399022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666367292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355551521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965127532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091612403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112198521 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066744049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082732275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646974905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990196223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320230865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978943476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.314166496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655889293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067273515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067009696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067209656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950448409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067092452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067082331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067927531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651415245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369942562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067485848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319449632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066977822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06887636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353900007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067469487 seconds)
  done (took 16.118396375 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072983522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117036039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073295273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084065955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070193944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07001475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070364713 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068599804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118417591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067168813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084394715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067760274 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071029631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068335884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086198315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067760921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068068449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067893846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067475542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067903751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085233146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066750591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067680043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067482523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067136138 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078510565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067311684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067067774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06773417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069058383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070234369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068042497 seconds)
  done (took 4.065227732 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11794429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124330363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074022645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101917723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111158852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069462358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142443182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091768125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126024508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067022569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083593471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067216008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099799733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06828884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087185537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068120928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068399678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067974798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06763653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067733361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086240529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067213008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067632235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068321868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067650483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080713843 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068133086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067737449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067906321 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069964361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071112652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068411431 seconds)
  done (took 4.318555376 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074214192 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074642836 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082268551 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082379949 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069295415 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071560037 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0723614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069001116 seconds)
  done (took 2.292009879 seconds)
done (took 28.476604005 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080871983 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070002593 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072288667 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080284028 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072013231 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078268565 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066343095 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073490682 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070985311 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072130349 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074050169 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066801495 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07104755 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067039343 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072775059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067472932 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078519316 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071366669 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078190131 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078603763 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069400717 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072638343 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073248761 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078062815 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078339762 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078979645 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076262124 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072014309 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06844673 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069771195 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076180866 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083478303 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068242909 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078500633 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06710756 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066872762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070864354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067375445 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078813966 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075718944 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06890889 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075297928 seconds)
  done (took 4.750266465 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090316881 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092782444 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084975019 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060999228 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066052403 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065331448 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087482012 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058950131 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059389877 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086651158 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055022027 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059016854 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061946002 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053856018 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058811237 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055962914 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060920699 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055701909 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058564264 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058665662 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057493289 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053793935 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059538035 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06456896 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056018268 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061727066 seconds)
  done (took 3.39533242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076428141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084982708 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087098209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126126702 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10353768 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075898531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077234277 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09132597 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084149493 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066208161 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070363288 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092691774 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087037114 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073560865 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066911671 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083637989 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081500756 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068215235 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072524818 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089856949 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083229561 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082502713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091282651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080057779 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066008906 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069072812 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070748039 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080188953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071561951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075214186 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071057104 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070134965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068531495 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078024871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070739789 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068071291 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089335095 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076098341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077040253 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067561246 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069887343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067717499 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088272075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121304545 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066459127 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073129379 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074302652 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075820904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066744845 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085524832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077505058 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066412265 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069606571 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066106601 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066409598 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079257418 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068449049 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068790826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075375105 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069513956 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084493103 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070585683 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081979487 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066306668 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074633453 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065693372 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067338926 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065656801 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091383535 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068071636 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107011761 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06803875 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067518198 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075339868 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07423643 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07234667 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067093516 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081528719 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076725507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06991548 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074850614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069839413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069483609 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086471608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06868547 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068732556 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067700095 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072730216 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069433512 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068031888 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079336703 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067095867 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069431594 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083318831 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066534327 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068186106 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072601388 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071074162 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066027998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077494758 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071420571 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067616024 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075763605 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066861818 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069644565 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076791204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073049842 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065820599 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071402491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073106709 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067560147 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068002017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069297791 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068109431 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074995218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.084247185 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07118996 seconds)
  done (took 10.522246954 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163515041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152196411 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069633711 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143772566 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075573611 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.0785013 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145713729 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09312162 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066833708 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067681478 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068138021 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10834823 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104461415 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114637029 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077916772 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067136903 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082474833 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112184666 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148238004 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141577823 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082316593 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075875155 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069256429 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068054743 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070586854 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077838716 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084573271 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076018058 seconds)
  done (took 4.425860069 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082838337 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096588093 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073809346 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088373368 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090189046 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067081378 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069284983 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068869022 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079620033 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07775946 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066781984 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072626241 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07372899 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070422789 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068021218 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073963294 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074393016 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068384587 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070430595 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072357105 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076765002 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080516132 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07120081 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066196589 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073107946 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066241709 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063924811 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083571726 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067403432 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088828815 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065340909 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074643734 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080380562 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067807122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066996955 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067221096 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06697561 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066519993 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068527906 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065756892 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06571093 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057315852 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066408469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078557774 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073399613 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056252201 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071705255 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071851175 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071840716 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064875606 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070212797 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069427562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070195558 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073862529 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072457163 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.0718621 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068017891 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064965767 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07499193 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066848159 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06407173 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065411095 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07122785 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065237916 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074769851 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070981728 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065369424 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06642263 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068560271 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07233678 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066585264 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069746061 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064634523 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068528003 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070997096 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068669206 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067831268 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065422703 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06641513 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067263292 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05522067 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066814663 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05282597 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069682156 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065121517 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065163382 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066628418 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071401719 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07851271 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068187748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072093168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067398037 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066132675 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069775973 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059574155 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069544952 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081807759 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081650419 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066779539 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065197348 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081074908 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071425209 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065599669 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055917191 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074494118 seconds)
  done (took 9.108218841 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096037961 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086652291 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069469661 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08254229 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09033125 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085431353 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074291609 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076492283 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068922836 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081465055 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072907351 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075610012 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067266412 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076548003 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092080555 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075726911 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069279574 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07608101 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071055453 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099825226 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081518454 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080881833 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074092698 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067392454 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075332131 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078901417 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08843921 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079518533 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077670272 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074747162 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078813412 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088014851 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073290207 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071043429 seconds)
  done (took 4.423312375 seconds)
done (took 38.315933392 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.773280875 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.950502718 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.773649028 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126254609 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.055979194 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.903044857 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.844190684 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.773377153 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.013544619 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.818624487 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.003397941 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.802425817 seconds)
done (took 65.546549494 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.819118954 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.91046606 seconds)
    (2/2) benchmarking "String"...
    done (took 2.04756726 seconds)
  done (took 5.673026318 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.081256599 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.377736986 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.017214622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772126933 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.777747221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.080444237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.581500887 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.300526746 seconds)
  done (took 30.621544501 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.042378269 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.980913809 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.490341219 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.513554822 seconds)
  done (took 15.798032226 seconds)
done (took 63.794917294 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.777431302 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.795799642 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.774254417 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.756013676 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.830518077 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.792134015 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.263444869 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.984318152 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.771019114 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.756868169 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.773555251 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.219913602 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.783742276 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.075190114 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.770443608 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.780142639 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.795116574 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.160511852 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.927691005 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.787931874 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782048912 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.845143417 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.773147727 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.922288863 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.80447718 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.772295392 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.224923362 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.775978402 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.397163829 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.768220376 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.801698488 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.276852995 seconds)
  done (took 205.432500353 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.769273121 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.846600468 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.916725759 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.819392801 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.344374306 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.971604765 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.906165517 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.229811041 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.77304747 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.781252811 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.935996521 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.770842785 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.960540762 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.715167726 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.773137186 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.861901266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.931474029 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.970887269 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.762409658 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.029964755 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769514177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.737083702 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.691225358 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.899692872 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.757487115 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.860203618 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.763920935 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.768561092 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.947526896 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890118106 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.797295849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.763630551 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.95462251 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.629900384 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.774980857 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.767796313 seconds)
  done (took 169.55711696 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.897597169 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.758810036 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.757585015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.758246011 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.763931417 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.759212737 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.879893331 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885027928 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.211565303 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.21795202 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809904308 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58442591 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756664799 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829923911 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.769488189 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.758269642 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.761530672 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774926049 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.789619244 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759310123 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.76106277 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886566663 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.769529331 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.780231206 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768691287 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.759369956 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764930409 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.12929268 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756672954 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769712221 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.004575877 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.758814961 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758775366 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671757639 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.509987811 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.850428845 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757185383 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763279861 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.756638591 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.981125947 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755632172 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755549351 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761401186 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.754129828 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93686041 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.753823467 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882581527 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753259952 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.259589028 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.753376878 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757056713 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.097078741 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.429833151 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.752322374 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.753747116 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.756238689 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.752454564 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75182626 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.760110661 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.882162264 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.820554127 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.750036603 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.751410522 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75226317 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.748329686 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.76611868 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748601701 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.352618001 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.808043073 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.968180173 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866420363 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743961188 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8119099 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838923064 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.744351348 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.749389504 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74479987 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.742501901 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827422443 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.74253074 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868670805 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751462454 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.745669745 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794327994 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.744498389 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.818546995 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.743616357 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63660238 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.74136617 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745050826 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055822356 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809408443 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.743009807 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745356016 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741033181 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.863384327 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862699343 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535223793 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.739899308 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.673586874 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.74156113 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873332454 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.739145145 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.910642885 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.739688483 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.821646175 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743247089 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.743147957 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.739905077 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.770503761 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.739913979 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.796888015 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.738072194 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.737679163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.109871729 seconds)
  done (took 398.896795719 seconds)
done (took 777.558181579 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.43659083 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.590365479 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.518053471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.417821398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.399684963 seconds)
  done (took 14.040285741 seconds)
done (took 15.719051562 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.835997682 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.830363328 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763738283 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.830140247 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758399204 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.83173639 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808645101 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.76516585 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796208419 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.764235087 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.798413562 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764223871 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750731108 seconds)
  done (took 24.979288785 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972346769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.98609837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.810268719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00211467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785910439 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993770525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.904658943 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.894783191 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892107937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755986571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.752390529 seconds)
  done (took 22.432086536 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97811957 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.980932073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812204457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786021996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.979141754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907165092 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.890755311 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893775641 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752574518 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75077277 seconds)
  done (took 22.38946306 seconds)
done (took 71.480408296 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.74659416 seconds)
  done (took 3.422126855 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.770496705 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.905533799 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752627432 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.748507815 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.745578212 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.74749776 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.750056042 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.746169432 seconds)
  done (took 15.846194285 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.743555229 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.742584451 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746398653 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.745003878 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.746752703 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.74236378 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.74291728 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.746661446 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.745853047 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.743413809 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.747796143 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.745442072 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.743957272 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.743704223 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746066041 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.74301154 seconds)
  done (took 29.594680978 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.743929041 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.743757499 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.743612976 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.74325136 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.742756339 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.745732049 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.744576676 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.742956002 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.743750176 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.743270941 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.744846697 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.742390151 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.744511617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.745181916 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.743966963 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.744885171 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.745348245 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.744044233 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.748279621 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.74384678 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.74349963 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.744728609 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.748278162 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.743909658 seconds)
  done (took 43.548279011 seconds)
done (took 94.090127287 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.523297847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.256279134 seconds)
  done (took 8.458411216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.747443174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.74671811 seconds)
  done (took 5.215941878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.745363002 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.746070779 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.745455217 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.74485568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.74586351 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750199128 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.746319354 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.745489238 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.746036059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.745241295 seconds)
  done (took 19.144590447 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.748752995 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.746960413 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.743376531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.747932649 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.746967518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.742943 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.747529951 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.745863998 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.746356907 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.744124265 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.745832109 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.743009277 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.746100816 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.745013925 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.747087687 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.74336041 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.744037702 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.743896165 seconds)
  done (took 33.098367073 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.746039185 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.746202222 seconds)
  done (took 5.172104303 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.74408134 seconds)
    (2/7) benchmarking "second"...
    done (took 1.745137835 seconds)
    (3/7) benchmarking "month"...
    done (took 1.743478504 seconds)
    (4/7) benchmarking "year"...
    done (took 1.74394317 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.743580787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.743824636 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.744360377 seconds)
  done (took 13.888079055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.746968829 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.907562818 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.97240661 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.411185311 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.748103653 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74836708 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.698220469 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.75002007 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.749836431 seconds)
  done (took 19.412772808 seconds)
done (took 106.068427909 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.588711395 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.74281871 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.093643638 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.805188254 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.792705794 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.038900078 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.740169705 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.96137149 seconds)
done (took 42.443162063 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.83059643 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.290497784 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.311226435 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.126877779 seconds)
  done (took 12.408683232 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.725643735 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.266065107 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.785798025 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.33988501 seconds)
  done (took 19.807374493 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.111383365 seconds)
    (2/2) benchmarking "read"...
    done (took 2.10931862 seconds)
  done (took 5.904538095 seconds)
done (took 46.632026401 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747542114 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746547154 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.746004796 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.746321897 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.745982339 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.746889027 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.744128158 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.744932873 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.74752199 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.746858977 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.748094936 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.746266975 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.748045266 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747053349 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744414932 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743987461 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74831556 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.744939117 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745608361 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.747576371 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745107139 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748648405 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.745641576 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.745849551 seconds)
  done (took 43.593888299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.748449844 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.747357606 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.748986027 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.748154429 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.745878218 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.748301742 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.748393376 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.74460807 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.749975096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.747901929 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745072892 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.746496395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.749152674 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.746599073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750946761 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.747080022 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.749031785 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748328591 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749758126 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.747909008 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.747447843 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747267433 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.74609335 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749581461 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.747116091 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748626935 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.74989056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.746955688 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749466456 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.74665681 seconds)
  done (took 54.119310574 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.754578696 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.756436876 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.749899264 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.750533869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.74885501 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.750622541 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.751751532 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.749816239 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.750447782 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.748623904 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.748926331 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.7501132 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.749165102 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.750066456 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.750679634 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.751017299 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.750377785 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.751927253 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.751663029 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.750040037 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.749523777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.75244114 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.750195888 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.751244134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.750596274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.749833308 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.749687773 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.751437147 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.751349975 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.75136634 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.751678737 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.749936558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.751516124 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.751614703 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.752908245 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.752529996 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.75523707 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.75925545 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.751418486 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751897797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.752751845 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.751767002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.752866557 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.752523189 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.751377044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.750956934 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.754605263 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.752201933 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.751573285 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.753253503 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.752246764 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.753045152 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.751129074 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.752248673 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.752380954 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.752191485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.751882218 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.752384837 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.753237539 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.752862899 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.75167211 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.751217131 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.752832885 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.753506393 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.753587229 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.751900564 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.75312847 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.752157354 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.753757961 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75373717 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.754267166 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.752989801 seconds)
  done (took 127.819981335 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.753424256 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753620241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.749494124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.750329804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75238636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.753613194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748287682 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754473121 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751329072 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75429009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753421153 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750955936 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752326066 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756768817 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7559472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.751814335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.754956221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750828163 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.755909732 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.755085623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754489064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.751201415 seconds)
  done (took 40.251405536 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752613489 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754904959 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.752333967 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.753979041 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751639032 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755671404 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.755123314 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760216095 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755730962 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752347983 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752563383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755614002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753232665 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753078744 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753173184 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.752763058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754935943 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752061653 seconds)
  done (took 33.258701689 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.753625445 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.752977306 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.754388492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.75321553 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.753628168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758542069 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75378067 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75610696 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.756392645 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.754006862 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.755524324 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757815181 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.755415906 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753319393 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75595984 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.753144495 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.756669942 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753678457 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755496479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753503597 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752834806 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756485803 seconds)
  done (took 40.296643611 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75622261 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75653302 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.753962716 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.752911093 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.752669194 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.757041709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.753181112 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.752848114 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.753747736 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754532926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752545284 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755382971 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.751889556 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753612697 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.755803337 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753716191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757043426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.756822734 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755292323 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.751861362 seconds)
  done (took 36.780599061 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757568337 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758221043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758089053 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75724421 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756215724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75987405 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75760861 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.758538492 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75988388 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.759836953 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758711059 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759964338 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761327052 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758724996 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.759866699 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756750255 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.759137933 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760517599 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760846376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759243532 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.760282676 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757293392 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760434328 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759674306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.761843623 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760975084 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759777976 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761970194 seconds)
  done (took 50.952627808 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758466256 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757896768 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.755141682 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.756846552 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.758956586 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.755393713 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.756963215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.757303425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759768798 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757198584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.758871352 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.759605728 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759057324 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.758458038 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758842764 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.759422982 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758851592 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.758095392 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753776674 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757654727 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.7616119 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758200244 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.760257328 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757789557 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75786882 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.758995999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75986328 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758073739 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758948465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76031567 seconds)
  done (took 54.440605595 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.775661904 seconds)
    (2/2) benchmarking "in"...
    done (took 1.776455807 seconds)
  done (took 5.244814749 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.757390898 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760897088 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.761732044 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757410138 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759822158 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.760926218 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.762501735 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758226866 seconds)
  done (took 15.774054237 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.762541376 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.760885517 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.759936179 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.763071669 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.761544524 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.760546444 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77108013 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.76141842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.761052697 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.76276871 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.767108247 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.769509403 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.765760871 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761104238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.764617284 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762580804 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.762866417 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.761807452 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.763666822 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.760577561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.762420961 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.764572643 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763547435 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.759276115 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.760155759 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.771369605 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.768398194 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.763226297 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.759894201 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.768666647 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.761193194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.75998929 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.763591721 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.762607198 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.764390827 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.763391654 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773901228 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761746408 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.766962716 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764574624 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760796205 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.760951019 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.764411514 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.772096889 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765223095 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.765559529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.764242791 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.762110845 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.76599841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.765996484 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.768121978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763710963 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.76147265 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771021974 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.766098412 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77274254 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.765625947 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.76335061 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.7721172 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.77513515 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.779172383 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.773184075 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.766599255 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.765391052 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772163921 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.785484702 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772035116 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.760275591 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.761375328 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.763487115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.772196899 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78005878 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.774463216 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.765132773 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.763868442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.763755427 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766481956 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765806178 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.770856728 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.769491573 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.764046314 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764215498 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773880919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786208286 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.764485435 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.767660437 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.767641194 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.766644214 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.768053832 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.775153352 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.763798691 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.766705444 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.7650378 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.767478552 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.76878933 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.766185888 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.76364811 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769884943 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.759443118 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.769138416 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764304195 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.771722161 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.774241212 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.765779728 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766739775 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.774774902 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.767655788 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764174068 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.777087309 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.764232464 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767591817 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.766839206 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.773590914 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.764870296 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768477364 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.776722135 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.766804543 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.770671439 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.768263532 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.768842896 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.775495457 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.789871121 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.771110246 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.768618544 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.771426788 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.779958365 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768958892 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.772223751 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.76710566 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.763838301 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.764232735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.768049082 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.769189975 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.771114138 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767406436 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771177609 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.765649169 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.768682561 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.770131103 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770834801 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.771958773 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.770025807 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.770250504 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.773166328 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.77126288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.771998565 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.77809071 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.770579643 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.770880034 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.769680506 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.769773593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769165552 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.771358599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.769898694 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.769393994 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767841737 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.770216818 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.770421192 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770878308 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.768876799 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771802829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.771776092 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7737769 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.770788703 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.775085916 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.768559369 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.766616027 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.767849437 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.77011165 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.771750309 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.770271919 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.769684952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.774232322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.778652736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.770134855 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.769490114 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.774283212 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770956074 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773913818 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771261956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.773737662 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.777111486 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.769700995 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.778924955 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.771193954 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771625518 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.769425508 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.772910104 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.770968264 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771254977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.771043026 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.776806149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785401934 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781914744 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.77218351 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.775705024 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.769394944 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.776363998 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.774290152 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.772681548 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.769683165 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775215148 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770312722 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771317129 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.774593062 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.772463292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.772625072 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.770107438 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.76896336 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.773001724 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774447337 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.770706796 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777372647 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.771685957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771993138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77329295 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.770169344 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.770834357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.770813006 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.773120153 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.772276464 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.776161295 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.783589506 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77236158 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77295466 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.776018635 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.773382265 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.772434274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.77435855 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.777694894 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.77448909 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780082682 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.775148752 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.775587888 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782553739 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.774692274 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.772617275 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.776386178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.772980539 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.774060501 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.776322853 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.779967211 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.773364563 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.775482991 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.775104425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774339502 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77386228 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.778195609 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.772063817 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.774499107 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.775359223 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.778091213 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.769206337 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.776368379 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.778059727 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.776018179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774853699 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773831664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.774793904 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777329378 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.774672295 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.776154106 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.777645374 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778594736 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.781767382 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.778995645 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.774939644 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.780120884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.777321038 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.776303603 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.772792168 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.777053465 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.773834799 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788276321 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.785354587 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781813415 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.778344342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.774434303 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781338106 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.774242742 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.783284942 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774879812 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775674681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.776955804 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.774040434 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.775674003 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779112489 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.776618247 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775976609 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.776400515 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777379541 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.776179999 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.771858031 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.774872237 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.775711313 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.775774622 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.777973115 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.776630875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.781158592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780196971 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.774651196 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.779063914 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786726163 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778561321 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.779591896 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.777248432 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.773979184 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.777478766 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.779219394 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.778777322 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.780347524 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.785969994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.78002869 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.787828407 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.77893866 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786393854 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.777915883 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.77741033 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.785709644 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.774666677 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.775709408 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.775961111 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.776785229 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784591818 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.778463968 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.779968768 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.780754378 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777656435 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.777181604 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.778448124 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.778097987 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777925835 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.779590863 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786192062 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.779950385 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.780704039 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781554317 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.777768423 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.781432468 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.780887573 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.778469476 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785716081 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.778526879 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.781670719 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.778364788 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.780442579 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.778847006 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.782781205 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.777789022 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.777290924 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.779714021 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787776881 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.779273068 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785384589 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.780961747 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.791143605 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780006489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789118785 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.78279086 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.780778609 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.781575746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.781502968 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.783868448 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.780517245 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.781209445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.781177389 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.779602041 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.780875263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.782138824 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.780712665 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.78013609 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.779747236 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.780843234 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78616065 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801776881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.782481484 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786680481 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.778231161 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.782852097 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.788594128 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.783048342 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.782572553 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.7826831 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792146095 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790047544 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.780203145 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.782209136 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78431589 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781556826 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.781909367 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.782884885 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.781683991 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.781782557 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.782020951 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.783328885 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788857569 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.783867271 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.783004835 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786626752 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.783665802 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.793632653 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.783644843 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.784512279 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784672695 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.779928169 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.784974255 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.782075471 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.781475717 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786001019 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782900301 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.784106915 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787836212 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.787722071 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.786400373 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.783560629 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.784313971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.784106194 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.785392037 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78533926 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.78279189 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785257155 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.785940119 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.783763952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788271915 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.78363985 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.785048685 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.785872344 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784680235 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.786154971 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.789888897 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786414851 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.780755904 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.783322966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784387551 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.783497918 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.783362076 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796448595 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786945781 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.795514905 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.792518296 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.788304483 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.786865099 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786289904 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.794303115 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.786313903 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.787928478 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.785950806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.788456798 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.785921742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.787150911 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786929791 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.794151992 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.785815546 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.786643753 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793072139 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.789823313 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784930166 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.789434847 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.791496334 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.786828026 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.783657538 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.786220901 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.785138999 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793100777 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.789851691 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786502988 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788880138 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.784748628 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.788529993 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793218595 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785070278 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.787658097 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.783724541 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.788423053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786616016 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785962041 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.784076882 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.784493765 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.788167591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.789158661 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.791478943 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.784837578 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790123809 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.786172279 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.787953877 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787284079 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.785039138 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.783371838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.784911665 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.787736455 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788300399 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.787629072 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.789417539 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.788484668 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.786076094 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.787325646 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788350184 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789530029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.795828386 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.791533637 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.784046731 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.784921604 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.786371633 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.789067565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786058506 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.784982769 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786711321 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.789040663 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.785356544 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787575959 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.786278823 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.78806742 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802879478 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.786222384 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785774523 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.788289884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791475805 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.785384703 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.781947789 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.785005071 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.789471537 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.79120539 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.793963714 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.786548966 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792386469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785918487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.788038728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.790848992 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.789027398 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.796678973 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.790357513 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789455022 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.791260937 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.791569358 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.804221063 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787510467 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796588265 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817062757 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.787156063 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.788764789 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.788796323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787301228 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.79044633 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.791804906 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.789089806 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.788399272 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788097611 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.787779522 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.788205057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793395488 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.789213469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.786655295 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.787337903 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.786874712 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.791691862 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.785093656 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.788227544 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.787567561 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.788160996 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.788711132 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.78813898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.787540938 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801678824 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.798721774 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.788175974 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.788927065 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.784836514 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.792749548 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.789969257 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798585637 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.795357162 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.789496904 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.787501662 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.78951704 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789156322 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.784477222 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.789916717 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.790832561 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.7886637 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.785434741 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.803568107 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796463592 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.79291387 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.7906648 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790663969 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.788669168 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791405619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790320814 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789205237 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.792691243 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.789486851 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793431684 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.788361285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.788735288 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.789949827 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.795880234 seconds)
  done (took 1061.740878528 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786923045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786076217 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.785065472 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786579695 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787724357 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787182051 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786060323 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786088979 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.78496137 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787272122 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786813135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786719671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787749518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787599687 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78639868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788086825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787871085 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788546696 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.789225542 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789559686 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786886185 seconds)
  done (took 39.25129247 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.791619435 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.788323937 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791705851 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789884197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786722086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791715975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790404882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793367223 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791828098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78736772 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.791083299 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790876144 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.789120433 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.78988979 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78897685 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791067851 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791685073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789275535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.792921467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789982703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790511931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789849134 seconds)
  done (took 41.112438818 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.794691698 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.792903057 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.790787723 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.791039608 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.790576655 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.789767313 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.793475364 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.794502792 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.79137077 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.794130178 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.791907132 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.793452898 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.799800725 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.795448912 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.793976738 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.793512305 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.93614971 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.791666755 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.793259187 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.795154276 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.791560897 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.799435718 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.790792425 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.792475425 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.793297799 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.793791867 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.794647231 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.792937387 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.793476767 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.794752448 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.798881771 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.793043925 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.795281274 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.797774387 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.793673532 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.795268064 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.796389726 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.794497229 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.792529546 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.795203063 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.804084005 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.812659993 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.796229577 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.802817016 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.794613105 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.793496449 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.800256138 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.802288553 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.791686766 seconds)
  done (took 89.821317112 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.794236921 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.794625294 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.791567848 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793617825 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79421275 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.792362435 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.794787182 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.796016555 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.793932431 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.791736604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.794097149 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.791594888 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791064538 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.797152997 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.7965302 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793261594 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.790707266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.793242396 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.79175604 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794678814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.791869843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.795021603 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.794360044 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.793705827 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796982894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.793255614 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.790557939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.794847256 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.792145974 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792439984 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.796518435 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79657602 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795384014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.793019067 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.792546283 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.799375372 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.798585778 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.793996771 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.798707409 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.792743312 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.800392481 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.798182274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.79861804 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.799748373 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793224156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.795005146 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794699192 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.794742212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.794950939 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.79776383 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.797339259 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.796534767 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.797701182 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.79533753 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796491118 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797239121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.794877138 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.793292613 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.796441124 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.793721763 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.7946632 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.798710435 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.795373612 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.798761044 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.798785889 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.794857183 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795001153 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.798365438 seconds)
  done (took 123.793289325 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79915097 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.79842509 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799688044 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798948279 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80047122 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.799214152 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798665421 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.796867987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799159074 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.800681132 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79849249 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.799088534 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.80005757 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799020523 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.801084747 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799443064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.800042253 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79889432 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799390684 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798734205 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.799990933 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.799880479 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800923934 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.798740779 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800486506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.801363302 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7999723 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800322684 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79976492 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.79963023 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801694554 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.799872473 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.800833669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799775155 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.799517259 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.80086375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800807071 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800695475 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.798991431 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801318166 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.801160614 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799919228 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800289152 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.800463289 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801868703 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.799575171 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.799705614 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.802741223 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.800822871 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800768968 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.799802954 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800492518 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801125039 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801192538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.800709256 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.799457258 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800133296 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800148252 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800545572 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.800808949 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.802007009 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.801404615 seconds)
  done (took 113.338647358 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799799447 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800401972 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.798152769 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.798505849 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799963734 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798050972 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801213132 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.799269598 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800379688 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.799983065 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800881726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798264568 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798241765 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801355437 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797925796 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798579679 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799217587 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.799536709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801049735 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799597218 seconds)
  done (took 37.723613794 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.798073707 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802222597 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.799822598 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799908031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.801831064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800765617 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.800833672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801638179 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799348738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801181301 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803139982 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801495881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79890046 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800810144 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.80207285 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.79866433 seconds)
  done (took 30.545034855 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.800842521 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.802986047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.803399048 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.805019548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800704142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.801149893 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.802403303 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.800235014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.801934595 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.802286502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.803091829 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.802152697 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.802987212 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.803552699 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.800930876 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.802504422 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.800476127 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.801164263 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.801914053 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.804215122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.80196105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.801232573 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.803209288 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.804752248 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.801495562 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.800708024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.802250587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.801440864 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.801992886 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.80363562 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801665413 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.80303238 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.80281233 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.803123609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.805030635 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.800329137 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.804022637 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.805190839 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.806440969 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.803987309 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.804423422 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.802278562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.80496093 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.804847371 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.801700049 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.804185167 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.801957673 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.801889771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803175234 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.802875987 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.804851482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.805637704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.805815345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.804657263 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.805692044 seconds)
  done (took 100.897917182 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803786388 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805187396 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802057431 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.80552604 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.806520411 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802736255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805852781 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802036445 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802773766 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.8063039 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804129439 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806407876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80334617 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.805847781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804372215 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806701096 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803687078 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803914503 seconds)
  done (took 34.219245189 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80483422 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806011026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.806814087 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.803846512 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.803936369 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807656394 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80370038 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.80646448 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805997931 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.804245134 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803600298 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.808852087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806969369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.807446267 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804375008 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803802538 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.807563058 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80805173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804667698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805014422 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808118863 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808439942 seconds)
  done (took 41.469455397 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.806281516 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.808123039 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.823662102 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.848189429 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.838521491 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.806751119 seconds)
  done (took 12.670549065 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805953954 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80787979 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805807466 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80899294 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808505491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80602852 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80612236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806141987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808219942 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806174285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80669384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809906717 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807801671 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805474556 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809349026 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810321493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807146879 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807641022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807151408 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808616905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807049585 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809593936 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806796444 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80606414 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807029116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807661234 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808844887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808240341 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806012029 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8092011 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808367938 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80538409 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810003701 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806497446 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810095653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810957202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806996268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809709975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809773108 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80714387 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810625809 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811208157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811124734 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807030184 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809793275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808875569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808011908 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807978298 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807923799 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810545714 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811136465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807857144 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810522382 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810761136 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811278601 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810817217 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806907776 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808518572 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810838046 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808120926 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807422242 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810728344 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808311111 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808161128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810112427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806919176 seconds)
  done (took 121.094695112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808826191 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80786192 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80793154 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809590617 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809628963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80769867 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808669585 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809513012 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807406318 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809352098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811226045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80860144 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808498994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810095794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808094623 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811512745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808726779 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809174342 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808848339 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811155022 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809081262 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808157439 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809018796 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810933379 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809952504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812475605 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810279573 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810058695 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80977009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810415932 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809916916 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808324271 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810520711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8099126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810579339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810153155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809552422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811167805 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808755812 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811498798 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80967807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812912194 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809586635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810971244 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810060591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810953549 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809659206 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809175018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81159918 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809338063 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810239386 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813427015 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812848421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809788485 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811602183 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810766244 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811755696 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811140046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81229668 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814981186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811871889 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810685802 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8145468 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812479348 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811188782 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811519241 seconds)
  done (took 121.224059389 seconds)
done (took 2473.115448192 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.817817109 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.817979062 seconds)
  done (took 15.380638061 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.977637477 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.930401003 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.815050678 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.810474486 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.815432231 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.811537505 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.835416199 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.813922479 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.817711195 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.814761513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.815756666 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.002833732 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.810160041 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.814515498 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.816272321 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.909555759 seconds)
  done (took 51.369478901 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.818810642 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.82216017 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.831733285 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.82228659 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.819043446 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.832841688 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.852083278 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.822304116 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.853129961 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.830399118 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.886381388 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.826309468 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.82046658 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.868537551 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.831691528 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.834526061 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.904935266 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.891609841 seconds)
  done (took 34.919892221 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.895064596 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.818429292 seconds)
  done (took 10.469030406 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.814799395 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.812899598 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.835100044 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.821604204 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.831109691 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.836736857 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.820170301 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.855480247 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.84839912 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.825792747 seconds)
  done (took 70.055464156 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.826117281 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.824224978 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.819994631 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.818745103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.812367831 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.814255081 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820319874 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.815200398 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48972117 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.850451428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.826040803 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.826130088 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.820276442 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821490685 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.819053563 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.842987667 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.958985372 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.817652588 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.816997146 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.827079333 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.820463031 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.871413335 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.831527531 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.820678156 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.849274215 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.49329631 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.826194811 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.826663477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.937644298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.817980296 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.822162345 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.821942505 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.824523186 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.210092823 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.136935912 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.817651054 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.827340644 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.828740523 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.818302655 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.952941155 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.821899658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.827065598 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.812212069 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.130631449 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.898830709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.862055457 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.185238381 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.821359914 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.822600592 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.853303456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.823702004 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.827596182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.834166243 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.331007644 seconds)
  done (took 130.031001722 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819445346 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.400118556 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981365198 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.8182138 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095038355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054917508 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815145514 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867644082 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.814160381 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.065008798 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988778586 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935216666 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.81444412 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.816262054 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81549047 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.812588757 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970454853 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885707836 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.815552567 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.816740554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853280318 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082818623 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940743132 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815460277 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.841256903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045606274 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.939758958 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.932939769 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.292544472 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.815778648 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.883106746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.821054695 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.817315118 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.814612337 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.984671757 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924070975 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912431353 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.816581192 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816772397 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816434367 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.477033452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042319057 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925883105 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.954249113 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064101543 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04508903 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.466020005 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.816822173 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.461020276 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01623166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.027983754 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.071429804 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.945067302 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.818499503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.072330426 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.818897473 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82103111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079945995 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042971859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.932730126 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819383561 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.818019356 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816461522 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133512521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.820600031 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.927599387 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819073889 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.818861097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93101674 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931122674 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.043850967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059337919 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.848776772 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.71818151 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.330966766 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.102804533 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.888717553 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080366782 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.818052122 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816447197 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914858783 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.572731666 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002057412 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13408016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082888598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859555226 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.453986224 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.82390207 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.068215637 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069657658 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047080099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062661039 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.985218593 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.13388045 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.820402526 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.821329107 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.032133391 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.950773924 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819099998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.184669996 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069704553 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.553116343 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.852441605 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126120529 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957060323 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.82081103 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.448898103 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.819527477 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022543636 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86358096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.822146936 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.820889395 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06534244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.691690536 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822786978 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.621557348 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.88648285 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.824326474 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085590935 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.820911908 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062187975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822258469 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13047058 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.335988072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865541522 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.013587135 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.065269986 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.61953746 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089057188 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13218052 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945206087 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077905628 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.641113237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825258047 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105122062 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823198572 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.822979077 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.992545576 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.823464134 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.978662511 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.822090305 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.083161277 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848438252 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992903827 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821468604 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.095927798 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868039317 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87544922 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.827109366 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940240467 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8260931 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.859135424 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007245495 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824731583 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.820762153 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.399659646 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824548361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970061192 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.122671233 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847098639 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896214909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351457707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.824199733 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920396442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.85574708 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.42469095 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.824738093 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.994144836 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.823462147 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.820322557 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.824667613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.135168136 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044670475 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.824669289 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.822984602 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.61951258 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.534644987 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.825165516 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.00274309 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.064689528 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.48047618 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04447722 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824859951 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95597855 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825719824 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.902905257 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.17605532 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82279198 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.825548573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.824421619 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.826971245 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.823260764 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051255725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.854351269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.53370141 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965122445 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069010871 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138260481 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.088703965 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.870575474 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828236303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088914766 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829496743 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.890657128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.828945216 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851596652 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073967575 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829258566 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056419475 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112394509 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.868268665 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876520026 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.82791298 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826196467 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.825373083 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971436829 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923824505 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.82701526 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.826987396 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.942799043 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949929488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013467349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.422580643 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.004122021 seconds)
  done (took 893.296991558 seconds)
done (took 1207.266988095 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.826765777 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829960994 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.813686568 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.828471776 seconds)
  done (took 29.060730615 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.837410088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.834327607 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.83560091 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.833502042 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.835162788 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.833316839 seconds)
  done (took 12.773936222 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.900533032 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830370278 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.829199676 seconds)
  done (took 21.322322366 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.901939657 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.230494917 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937039307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.265352207 seconds)
  done (took 10.100351469 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.835548662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.834985067 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.835845597 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.835549091 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.83668626 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.836913883 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.836847814 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.836816016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.837936057 seconds)
  done (took 18.292218817 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.002436479 seconds)
done (took 97.315984589 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.199947453 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.914652032 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.115090268 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.970240074 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.181987786 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.965759009 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.249282451 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.421610909 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.74392625 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.587416114 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.578550772 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.87400577 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.860118298 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.933684269 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.208931305 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185430495 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.862743917 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.940086312 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.094750969 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.987771948 seconds)
    (21/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.122735815 seconds)
    (22/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.918726162 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.820716533 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.39177889 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.970281705 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.889381565 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.821568304 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.892909943 seconds)
    (29/309) benchmarking ("sort", Int8, false)...
    done (took 4.813152819 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.861459068 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.766699914 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.932177327 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.795522255 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.940119548 seconds)
    (35/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.919629426 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.912620089 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.172984606 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431434809 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.835068393 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.743653158 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.842104881 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.819931308 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.576816559 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.351728403 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.869509185 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.024986016 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.837188653 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.977691556 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.820959593 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.147967624 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.482166249 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.007029682 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.964936588 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.912435107 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.438493366 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.836153933 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.897122467 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.135974144 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.904826291 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.005741263 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.938940968 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.849726919 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.551467275 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.223328271 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.515557679 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.740533914 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.952762063 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.745078134 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.843131622 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.108265841 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.971048559 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.180915755 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.841788586 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.02852954 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.169929381 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.56417743 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.223856167 seconds)
    (78/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.245502313 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.289502528 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.919713653 seconds)
    (81/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409618196 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.09127216 seconds)
    (83/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.927714871 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216893035 seconds)
    (85/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.183931689 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.999827251 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.084641281 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.754884469 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.869584082 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.655859283 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.108465619 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.824302287 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.856190835 seconds)
    (94/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.906284048 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.139445299 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.077374963 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.911773194 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.014123035 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.052281167 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.971826459 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.869133321 seconds)
    (102/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.825370703 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.871213708 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.142179944 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.136513693 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.143846305 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.9459875 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.840945794 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.827819758 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.225297544 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.864036398 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.407917866 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.866071043 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.161401934 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.984782729 seconds)
    (116/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.873063903 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123323627 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.136983878 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.081523315 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64151854 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.803499735 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.041745251 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.841920751 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.293040987 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.864948694 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.966389383 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.099063085 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.025830857 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.746272248 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.058768738 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.844079982 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.121055386 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.963488816 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72803606 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.867875256 seconds)
    (136/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.013923289 seconds)
    (137/309) benchmarking ("sort", Float64, false)...
    done (took 5.68361791 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.189222674 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.89321117 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.828704686 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.99324825 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.842941201 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.843740826 seconds)
    (144/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010850048 seconds)
    (145/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.928837666 seconds)
    (146/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.927289876 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.905660724 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.985811745 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.08336737 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.869459172 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.09789182 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.890203782 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.846345527 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.830154803 seconds)
    (155/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.8844769 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.843721411 seconds)
    (157/309) benchmarking ("sort", BigInt, false)...
    done (took 6.890381787 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.868361991 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.114269416 seconds)
    (160/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.036314034 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.937617851 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.845422962 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.947691127 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.010925394 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.211011792 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.13571832 seconds)
    (167/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.860699609 seconds)
    (168/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.950402665 seconds)
    (169/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.927956136 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.237122863 seconds)
    (171/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.82957151 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.281039321 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.156147978 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.913454896 seconds)
    (175/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.126499552 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.340032423 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.916078487 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.032865755 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.895094951 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.870180278 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.436116393 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.458947801 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.885043624 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.894346567 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.036075947 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.873508732 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.099384074 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.008908827 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.122659454 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.018212182 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.03543439 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.831341358 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.231991627 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.053875616 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.900579585 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.371113112 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.865029885 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.846630404 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.970535937 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.845812658 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.714657716 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.928061953 seconds)
    (203/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.854030835 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.472734072 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.059607667 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.232739569 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.93320901 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.831736156 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.023673335 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86002292 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.800509183 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.288167547 seconds)
    (213/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.927762186 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.871933909 seconds)
    (215/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.364585273 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.160715675 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.851072379 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.289575847 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.03915917 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.940566385 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.034484449 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.875649104 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.946313942 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.833249012 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.930398308 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.88765934 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.655466415 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077946448 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.122061354 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.910286736 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.837902497 seconds)
    (232/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.193773163 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.392967337 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.782800871 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.859003482 seconds)
    (236/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.362873043 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.84549361 seconds)
    (238/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.873534774 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.211973445 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.49751256 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.926570092 seconds)
    (242/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.987134372 seconds)
    (243/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.857613129 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.735716751 seconds)
    (245/309) benchmarking ("sort", Float32, false)...
    done (took 5.626616065 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.88339609 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.063314415 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.099871749 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.849797771 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.2043868 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.442462654 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.855665715 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.055028271 seconds)
    (254/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.872767813 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.848185844 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.124488399 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.105496509 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.947248039 seconds)
    (259/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254237588 seconds)
    (260/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.936627406 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.945808862 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.92647424 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.088842378 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.167153774 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.400609651 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.955717017 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.878172547 seconds)
    (268/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.980909894 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.123310594 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.143999651 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.249171424 seconds)
    (272/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.04289188 seconds)
    (273/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.11876266 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.239012092 seconds)
    (275/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.852589289 seconds)
    (276/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.273811293 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.179783058 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.964045684 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964579723 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.868570577 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.185937164 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.452083221 seconds)
    (283/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.188893274 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.153999669 seconds)
    (285/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.039970697 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.687862779 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.192238436 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.938218169 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.231504223 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.932682973 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.366643304 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.961179168 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.049212868 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.143279054 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.516064031 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.878071196 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358819203 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.070039932 seconds)
    (299/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.996187684 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.960019548 seconds)
    (301/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.022480165 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.9904355 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.007033909 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.961718328 seconds)
    (305/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.005414844 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.122366531 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.874862802 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.982600599 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.475564047 seconds)
  done (took 1015.546525729 seconds)
done (took 1017.328199314 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.887592522 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880235245 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.865222602 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.885043687 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.976105545 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.892508359 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.872798116 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.867076273 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.911196867 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.91473202 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861948923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.890591723 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.864922778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.864285492 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.862403547 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879839836 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.175070042 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.895962171 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.882679579 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.875659972 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.881537008 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.865412121 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.914108871 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.891399797 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.869145578 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.86637772 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.869365805 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.884936214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.977851938 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.868939264 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.869209513 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.876547035 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.173835316 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.893135857 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.860888017 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.88358322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.877709064 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.876041695 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.870130031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.899626144 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322742026 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.871142665 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.868060436 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.868387158 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.867970085 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.870836203 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.8664161 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.873248341 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877894715 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881244999 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.321324566 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.886996752 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.870362854 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.866468743 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.877096355 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.867146898 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.870065937 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882673426 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.888644863 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883229854 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.167040451 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901876223 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.869215254 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.88420736 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.874971651 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.359110934 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.867757233 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.873153869 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.323756119 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.876989857 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358339536 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.882220482 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.870628283 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.884509427 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.901666358 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.179194714 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892755751 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.868073007 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87601282 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.86884902 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.879135883 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882563877 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.873626139 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.868879374 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882865572 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.897780957 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.878524285 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.869070822 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.877600509 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.887742962 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.876393044 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.880171462 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.872484223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.863827551 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.878070657 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.872049514 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.871397858 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.870740712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.874031634 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.880147471 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.320428542 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890188362 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.866008043 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.866590654 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.868465919 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.883815674 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319527282 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.875035327 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.890673193 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.916128563 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.871363399 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.169727365 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.90284487 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885378906 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.879618132 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.874025824 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.864747334 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.172896108 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.351657538 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.89086383 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.871700553 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.868343545 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886393438 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.873117214 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.868059214 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.182140001 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.903083744 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883849437 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.990976388 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.881705235 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.904765451 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.869255888 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.873313042 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.904104277 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886144753 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.902900328 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.87432982 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888391022 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.88594873 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.868417654 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.88123919 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.881854983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.872429062 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.877792613 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.869025122 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.903011746 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882533643 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884875424 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.893739314 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.989371397 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.867475958 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.168666783 seconds)
done (took 293.868955806 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.935259555 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.862432125 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.958299827 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.858905107 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.9453649 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.95054282 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.853965601 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.859684861 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.853277659 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.236682661 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.857904237 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.856298347 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.853478946 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.854149189 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939154041 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.852750683 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.846268882 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.192041145 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.85539929 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.922016333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.850301675 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.844795294 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.846182279 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23046405 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.843104942 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.838817096 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.911033624 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.841017879 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.189178266 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.833361389 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.835743245 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.185075969 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.926387197 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.855809541 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.843738048 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.842213795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.920008538 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.839616834 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.918479709 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.916959973 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.930361995 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.874499092 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.835385337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.83287082 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.835101838 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.829881246 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.825836205 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.855721405 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.820550122 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.824144471 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.168423844 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.836371225 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.824630726 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.823279517 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.824341659 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.860308551 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.825335941 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.829162782 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.916902714 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.828338997 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.891076243 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.210766433 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.204295236 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.827017735 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.820108905 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.824608001 seconds)
  done (took 182.432773052 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.893817664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.902618678 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.896746401 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.833133666 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.876572475 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.897660682 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.829462724 seconds)
  done (took 14.889894352 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.832210909 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.829949507 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.876430455 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875980378 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.827572695 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.976739014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828091668 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.83449721 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.822715871 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.879505784 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.826147873 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825881577 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.828621736 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.817348473 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.87245067 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.832136497 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.936569787 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.822506897 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.82396174 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.979676918 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827855283 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.819280861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.875430295 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.833413217 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.821804773 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.828156907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.402750829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818836316 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817769995 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.81950887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.816380501 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.864297736 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.819932693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.815989194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817409158 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93456086 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.817315309 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816700352 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.817788731 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.809324041 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.817130068 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.815112836 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.81624436 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.813276048 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.818625766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.840264388 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.816556968 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.815517391 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.815613835 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81488435 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.865537007 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.816403306 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.814522077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.814034761 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.305268335 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.822912709 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.816005782 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812918109 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.812495562 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81054421 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.967230663 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.860297004 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.814857872 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.862411136 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815723871 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.81312546 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.816771612 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.814104088 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868681838 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.813470804 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.862600729 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.810192259 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.973587174 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.838508517 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815121026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.814826637 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81701734 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815316955 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.807119193 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.817675254 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.807673144 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.810561651 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.816921897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.808968678 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.808773565 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.924116124 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920214129 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.809592636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.822682064 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.818966681 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.808066784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.865463865 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.81148249 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.808071585 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.863746325 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.924495589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.865615113 seconds)
  done (took 201.093050545 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.816285296 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.817993184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.810287235 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.827190811 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.811242322 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.811838662 seconds)
  done (took 12.635095694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.812973565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.809971101 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.8098148 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.810738293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.809973414 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.812548493 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.812664958 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.81193925 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.814910239 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.811555654 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.809220765 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.809083922 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.812953443 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.810456891 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.812622723 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.810055161 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.811976818 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.808083555 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.812103156 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813353255 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.954978079 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.810542084 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812769975 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.814282747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.81573272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.811590019 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.81777915 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.810126246 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.811730773 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.819124195 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.816914965 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.813395576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.810800415 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.817492014 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.816491532 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.813010537 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813683631 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.812251542 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809440434 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.814820449 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.814370895 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.813813905 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.81297651 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.813386945 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.812214435 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.81754115 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.81733998 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820238902 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.814052606 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.813413328 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.815099615 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.813160815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.812529414 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813030245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.815498325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819401498 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.817787426 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.814519459 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.81602752 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.815213541 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.813674915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.815103046 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.815207447 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.818290869 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.81873105 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.814724546 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.812363254 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.819488723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81324724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.811490878 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.816708751 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.81106005 seconds)
  done (took 133.468635573 seconds)
done (took 546.333507467 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.019801475 seconds)
  done (took 8.765164422 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.982769309 seconds)
  done (took 8.874844702 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.661254105 seconds)
  done (took 10.466398138 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.878443666 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.87818887 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.882080043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.882405809 seconds)
  done (took 29.340148604 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.262337784 seconds)
  done (took 9.071681108 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.889325462 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.871278994 seconds)
  done (took 15.633785078 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.99833625 seconds)
  done (took 8.806414868 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.028493691 seconds)
  done (took 8.839511625 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.894848291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.881775351 seconds)
  done (took 15.597760286 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.859967899 seconds)
  done (took 8.668923053 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.51701 seconds)
  done (took 11.337351791 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.880387012 seconds)
  done (took 8.702057166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.94107534 seconds)
  done (took 8.749874672 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.173407882 seconds)
  done (took 9.982022268 seconds)
done (took 164.579270732 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.879946661 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.871769185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.87253581 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.872663213 seconds)
  done (took 29.306459809 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.913310657 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.913996628 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.917224972 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.926554759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.917927745 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.917379931 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.907673452 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.90813801 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.927021099 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.916188988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.917691318 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.918085534 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.916979793 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.908553838 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.918603451 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.917774963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.92459431 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.917196361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.907108115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.921621079 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.882459968 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.926855873 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.916038683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.881332034 seconds)
  done (took 47.748978705 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.077408887 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.953853183 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.035496714 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.93389675 seconds)
  done (took 9.80790735 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.934229724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.935787936 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.947102443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.987341667 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.021961307 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.945704038 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.906363016 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.902299286 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.88605971 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.933196793 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.007065712 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.947054396 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.011115517 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.876225282 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.065444707 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.875179697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.88004661 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.929373265 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.980964275 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.998130248 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.878701833 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.93300154 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.933853742 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.942477107 seconds)
  done (took 48.465459104 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.875979921 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.886754759 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.876233872 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.873562524 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.874215864 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.872087227 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.877794777 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.875841029 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.892117767 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.873473781 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.87231981 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.869175098 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.874132047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.872927381 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.870211701 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.882445246 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.887344548 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.872510445 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866476311 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.872119931 seconds)
  done (took 39.322617686 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.858773697 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.712993152 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205808673 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.111778073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.853157729 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.859647486 seconds)
  done (took 31.395914184 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.870149659 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.923567842 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.861690011 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.913312944 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.993963037 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.867186125 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859331946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.924143194 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.967201766 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929590215 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.874308441 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.883724057 seconds)
  done (took 24.651755039 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.847030733 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.847043873 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.845928878 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.861337411 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.864015863 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.860157563 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.862083813 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.846440345 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.865949699 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.869959457 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.856885482 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.863020556 seconds)
  done (took 44.075337625 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937664921 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.892477791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.850030116 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531684496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22441901 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057231357 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458103144 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188379097 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.849929011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123014542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.798675997 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984368022 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136573908 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480354002 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919084043 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.322192143 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176411236 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090941372 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908964659 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545381694 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946730831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169325351 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649794201 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937188195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094035306 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.014978956 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.141341934 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.881048598 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014627848 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918578028 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89256789 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881067614 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157990681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257568593 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985864611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893673851 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.502067886 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.599206902 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.873636268 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.663461104 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573083395 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.004885962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893324298 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882380523 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817242634 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.134545171 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266995647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.88801865 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.594619873 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883461072 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893043985 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976666228 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.886775498 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.697915045 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795266225 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.88667196 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.88071308 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888437212 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454490441 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987290361 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.174025334 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.862865082 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.975953971 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643097936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262566511 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.03034589 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.888357658 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888569302 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818756717 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.62845748 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939928931 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213424036 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.904789997 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533774486 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184784659 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.905931375 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826639608 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156187458 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522269916 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.865156127 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112571781 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884464816 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820371493 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.829684725 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821117472 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141393328 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923200097 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.64871071 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926374712 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.220320921 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896793633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903340996 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908869144 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11018364 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.769298294 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88469071 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.635796885 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030581464 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909258871 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224281539 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82140602 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.889336712 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1423785 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.097415498 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065395711 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375117133 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048979382 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.566020254 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.94252234 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.139645618 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940666961 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.152333518 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943983978 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998858885 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942696963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885851639 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1810824 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.58144261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.029151151 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.863528567 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015430822 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201855053 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914683293 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969140981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89490104 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.886017326 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.664488357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440360174 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.888554908 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.889109436 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070429092 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939833417 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.887145501 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837235242 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509494953 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86169088 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.905035155 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112822148 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.571550609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209787781 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824572536 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238203676 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978451361 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.111429094 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.530783569 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.963947791 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150384253 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069185082 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.100525779 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944148528 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910404881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992526018 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913923332 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.14043372 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190692622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898084875 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.897873958 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665986037 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.933160095 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898568052 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.902103504 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646067271 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161828383 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918834473 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901880979 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.786805421 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.911647326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959746578 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901605709 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906694585 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.438395117 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609031039 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.905156579 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.481684308 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119891185 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907449595 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.587389782 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013596536 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984900663 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163148193 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95676857 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.82895741 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.607379037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.589546563 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897537297 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833702409 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895209568 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90831442 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906912625 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.093146957 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167384101 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941748481 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.567370521 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.938187833 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90981797 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.90299023 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898096291 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.410558872 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005920178 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.1948007 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946599343 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043390197 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.913413121 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832949995 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901910815 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899827761 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899970562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.899636507 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932912339 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.598810326 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273872547 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159715028 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.511459527 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913742183 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.59556711 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.953621368 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.896887389 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673741303 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169916527 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.940169393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914713108 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.908639941 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.569905131 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.591542833 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469387936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207604071 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195912025 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331303201 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.21484494 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92995896 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236956998 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831910332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.454281593 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955453704 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242376925 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842760171 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991813667 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.540060272 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245368802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918053175 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12793516 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281573549 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.586492271 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040452225 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111398775 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936880158 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.161593482 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865228232 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.187770785 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04346506 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572209955 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104281858 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243875557 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.523663557 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.02348269 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.900789811 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.573838654 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99097325 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.614854122 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070920825 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182298673 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.779218524 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378604146 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907698664 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.125885307 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246041469 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.174363193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.031966043 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837396357 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912774146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911528464 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.903900813 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.899692778 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.793013268 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.156495425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910132728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835012735 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.107647781 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193387804 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.803008569 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.906998333 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902385236 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186155152 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.542690118 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071903613 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.102814385 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.427331804 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909532768 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835688018 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837940521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.596895508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906856981 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875971551 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10189018 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.006994955 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852052791 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083131328 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990876538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15755613 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.918699695 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163600204 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177973258 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604573239 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929474022 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.005021676 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.528769787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.01236694 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903690067 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141301542 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.660316377 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133017484 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.921986321 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.863207206 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.901929233 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119828244 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905616783 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.7340534 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13117875 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.628638657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.909457445 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207495843 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978154128 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.73833937 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949789647 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.997798031 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917186363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984894848 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916772912 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915247086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916027613 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954063642 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.735521939 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.026746281 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.920365919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999787009 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.014827595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.4320354 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.911226269 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170839353 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25643211 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221409772 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962907234 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904577043 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908772921 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840721684 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056692863 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131411834 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180347966 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03417505 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.019492904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931413607 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522366129 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211206448 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152082202 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183017207 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.802606811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530161422 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949366972 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.910171477 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917408225 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.119263402 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112510028 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204798887 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045794418 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.098577534 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278959142 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182873947 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.90889678 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906833661 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49779472 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.928899417 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579186053 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.947483231 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.758974249 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183351854 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918949474 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28125196 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927733986 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.067930054 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.679577108 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574818633 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196408052 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.894899389 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968695221 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171920844 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280584133 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220240169 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974786706 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921102365 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.016022653 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057866256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.814903799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909568616 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908676583 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12594848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.619424431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917344634 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176034072 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21594931 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.908036479 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.803314288 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932959825 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919756852 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13371714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164654295 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16124515 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918461184 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91552092 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.726336302 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176006919 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964304524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840873803 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.912566347 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003865389 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15432844 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932937669 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.361787013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.622826203 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181391789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.912003097 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930577612 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167659861 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268644713 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219110048 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.447127178 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117006349 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495808828 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.586784805 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215974379 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.91344115 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.173886597 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21688963 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.911948757 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.089742871 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950833052 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.169905396 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220013481 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.92277465 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571255084 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.879514972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25160046 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469092759 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850787879 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922767977 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.974924298 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910946891 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.04211442 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921844014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.810432802 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184507575 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676369478 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183715413 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.916005233 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.907032346 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.566105574 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.292621772 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951876091 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055587779 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914594099 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.589520626 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.264552967 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171249555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.103316059 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.920804184 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.916821983 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913011054 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.897622777 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113891782 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.11164091 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180840682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.135810021 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.9542247 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914959495 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129901391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125426368 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.712956723 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046374909 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091186153 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961312884 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.820434609 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423203897 seconds)
  done (took 1689.681979322 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945809084 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.949095664 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.968180632 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.008719781 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961729229 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930426032 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.984155067 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981286572 seconds)
  done (took 57.578336881 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.913700037 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.135411345 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.921768597 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.91425837 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.922226876 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.913545318 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.084325457 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.923474107 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.923911188 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.925301854 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.915031577 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.914914916 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.238446193 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.940854459 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.915460573 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.911481655 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.923890879 seconds)
  done (took 75.206820904 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.916432097 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.951592083 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.936032739 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927461222 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.961310825 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.925928145 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.755022656 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.933282361 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.920095395 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.065660603 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.549700806 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.925309223 seconds)
  done (took 87.619128622 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.927664405 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.921616327 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.923120726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.92305061 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.923041494 seconds)
  done (took 11.471841942 seconds)
done (took 2198.16555576 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.170909363 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.128111183 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149860809 seconds)
  done (took 6.130100022 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.066562039 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.112764385 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.232088405 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.238682879 seconds)
  done (took 10.500454616 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.204722995 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.283125309 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.127669131 seconds)
  done (took 8.463210102 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.326141205 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.928405854 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.0289956 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.915616543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.916753818 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.916863235 seconds)
  done (took 22.599904276 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.916686727 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.918513605 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.919598413 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.922149463 seconds)
  done (took 9.527257831 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.900031328 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.671617595 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.898741886 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.91548416 seconds)
  done (took 21.23524743 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.66786332 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.677562577 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.662876027 seconds)
  done (took 9.856306776 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.493747133 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.833715596 seconds)
  done (took 9.178702175 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.189157076 seconds)
  done (took 4.037677967 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.050234992 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.181855049 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.375875929 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.415543471 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.463943554 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.825030613 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.235201173 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.17710004 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.311724235 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.363586388 seconds)
  done (took 25.253159243 seconds)
done (took 142.085013329 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.304543332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.158924977 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.115354651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.258256934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.140252076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.115178759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.126274583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.242350293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.765615058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.76177748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258533098 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.141448856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.289507277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.158715999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.293114302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.158813437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187777347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.320802396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.958257138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.185796487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.127846912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.893164578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.100241095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.911842599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.191522496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.066949832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.471709084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.155077602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.108540391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.489873105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.064425317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.343788681 seconds)
  done (took 174.716395474 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.832492962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.918409272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914943354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.916941897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.338917796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915588146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.916743438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.919507445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.186072662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.150590824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917027105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.339245484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.920573745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.919725878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92930038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91525277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.304107675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.922317691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93422257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.936608296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938618049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.282301966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935724191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.303642396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.325686233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938221024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.918627532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941046594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.923405448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927054526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931022576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.917642744 seconds)
  done (took 210.185449372 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.919133198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.921273773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.919583045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.919210374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.919365259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.920359896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.920049849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.917678115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.484290855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.49600377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.95284437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.924365831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925800723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.918399045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926273893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.921015403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.940446737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928249054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.928536825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.933899532 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.931356921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.727333759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943561657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.715020172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.941148805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.924534267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.920761363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930578471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931167662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.930560413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.930264465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92187893 seconds)
  done (took 222.250421581 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.123907066 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.925589486 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.929969151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.880614466 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.926785424 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.926433288 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.924444644 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.124702382 seconds)
  done (took 19.639116173 seconds)
done (took 628.655482947 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.371730848 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22243578 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.106976044 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952033217 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.192099228 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.987589459 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.950001243 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.010791093 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.671183123 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.016211143 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.623998292 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.968747599 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.678242288 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.974689562 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.074779596 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.006758655 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.510759922 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601855314 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.130386707 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.015373346 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.129668695 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.89231749 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.025731045 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.694594481 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.705574846 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.943292107 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.133979634 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.520526081 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.959802527 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.111208928 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.684199723 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353183982 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.961753971 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.947291504 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.001005121 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.981801062 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.287758781 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.959199048 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.073120296 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.697297865 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.003831765 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.568355371 seconds)
  done (took 105.558166906 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.919786948 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.919125379 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.917248559 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.918510558 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.91792623 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.91661029 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.916257421 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.916013902 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.918078761 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.917673123 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.919189375 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.920341027 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.917379154 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.918243762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.918652038 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.919430691 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.91903623 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.924418293 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.919372696 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.917746668 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91864521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.918729349 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.91886176 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.917860864 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.919125922 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.919687517 seconds)
  done (took 51.751431529 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.929781678 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.07214319 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.152366817 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.951119457 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.930688891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.936938969 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.94904484 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.936295899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.933367061 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.933669243 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.026677427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.937173465 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.951272034 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.156683938 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.949119074 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.93123798 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.934042204 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.931744829 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.0773662 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949599005 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.95237618 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.936772746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.951222098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.945562481 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.934948537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.935200606 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.935824262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.366353557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.941862554 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.029621728 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.976758769 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.953180238 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325057856 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.163605073 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.988515948 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.940693231 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.932766306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.032512455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.941356456 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.935198356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.949732041 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.93856941 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154630038 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.430271017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.947825878 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.936038947 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.377366303 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.045419144 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.975405095 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.943452217 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.159962353 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.952142854 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.935358151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.93331058 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970288213 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944177498 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.933748086 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.236243159 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.946982095 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.953366791 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.939121935 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.935395312 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.086443467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.943901794 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.081362969 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.944058865 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.942377091 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.936043304 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.158753175 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.950611422 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.427400431 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.949726592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.935448777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.032386213 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.082426283 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.40246694 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.94747625 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089694086 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338703951 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.958859757 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.942243522 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.359646116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.963264295 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.942259364 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.938331079 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.937962826 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.934366487 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.979626336 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.952780554 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.369619258 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.439020937 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.253540348 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.962242564 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.95312689 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.935744491 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.239994099 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.944033862 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.937337468 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.151997434 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444890691 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.949176107 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.943957829 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.421480274 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.950862164 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.956660317 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.945151216 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.161454226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.952445171 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.981828542 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.93946308 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.945260425 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.940103669 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.956785272 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.944333398 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.936661059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.421071789 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.052364331 seconds)
  done (took 239.280789215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.933544528 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.933200123 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.932023252 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.931399114 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.930968461 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.936096747 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.931282707 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.929937055 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.936747653 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.930107758 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.930351769 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.931214824 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.931650909 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.942799415 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.959221615 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.939728775 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.548307671 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.931880557 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.933012109 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.931580663 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.58208874 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.93825694 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.929306245 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.933860283 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.931021028 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.929571502 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932962179 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.96109074 seconds)
  done (took 169.31399715 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.931787459 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.046324105 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.949969104 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.959548074 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.935280787 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.930204824 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.952888889 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.944131452 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.935747271 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.92545784 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.92774396 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.992462706 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.939376287 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.030607025 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.961111601 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.959683005 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.033810135 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.935660532 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.927838563 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.930944335 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.959213767 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.924151982 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.993731482 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062876738 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.955882772 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051568018 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.942003684 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.939244892 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.933687058 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.052324415 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.953695826 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.996004569 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.961387475 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.946032115 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.050038371 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.048717008 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.035093693 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.960218806 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.931237787 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.926566245 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.925433559 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.915884214 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.045302519 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.952022981 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.92800117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.037538568 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.948047525 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.929638333 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.936763581 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.926794416 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.94314598 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.944056004 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.995040279 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.061370724 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.96574519 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.954637065 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.953479844 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.220928647 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.93874112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.027709238 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.924224358 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.046474676 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.950831012 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.917217139 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.92952384 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.932962905 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.958851609 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.959146509 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.035596819 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.93703887 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.030746316 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.967031786 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.936574932 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.929738504 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.933342902 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.046495603 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05359315 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.9664878 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.963540122 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.957228711 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.922556709 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.928093672 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.918179311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.944648613 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.930576953 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.043162883 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.050900888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.937513316 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.931218605 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.927704265 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.92898582 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.955559056 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052166991 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.967327958 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.023987755 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.997417339 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.003046353 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.942433637 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.939766987 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.929373115 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.993329436 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.94562775 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.941212842 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.267390031 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.999390417 seconds)
  done (took 208.987744587 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.026157291 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395170684 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.985300989 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.984000382 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.215509136 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.358824106 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.754671013 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.977067579 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.976308075 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.002392214 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.137514769 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.036344769 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.993174163 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.962261593 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.391049885 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.969153751 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.979017641 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.996980112 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.982052054 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.527834989 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28318656 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.098583515 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976678404 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.168145881 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.961902621 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.249354656 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.293194052 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.366808243 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.016225843 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.322651926 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.325739165 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.661190598 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.194412251 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.221130021 seconds)
  done (took 76.655841545 seconds)
done (took 853.401497957 seconds)
SAVING RESULT...
DONE!
