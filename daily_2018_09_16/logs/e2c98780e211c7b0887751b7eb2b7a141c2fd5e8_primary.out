cset: moving following pidspec: 7563
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364222573 seconds)
loading group "string"... done (took 0.510951808 seconds)
loading group "linalg"... done (took 8.188403032 seconds)
loading group "parallel"... done (took 0.178669255 seconds)
loading group "find"... done (took 1.326095518 seconds)
loading group "tuple"... done (took 2.033142978 seconds)
loading group "dates"... done (took 1.369390005 seconds)
loading group "micro"... done (took 0.251813728 seconds)
loading group "io"... done (took 0.686871172 seconds)
loading group "scalar"... done (took 43.22404361 seconds)
loading group "sparse"... done (took 13.062825631 seconds)
loading group "broadcast"... done (took 1.049554912 seconds)
loading group "union"... done (took 14.911261095 seconds)
loading group "simd"... done (took 5.242259069 seconds)
loading group "random"... done (took 10.597511696 seconds)
loading group "problem"... done (took 2.009730253 seconds)
loading group "array"... done (took 23.548663341 seconds)
loading group "misc"... done (took 1.464289023 seconds)
loading group "sort"... done (took 3.661835738 seconds)
loading group "collection"... done (took 19.860665174 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542362803 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126419631 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149055503 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.155092874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203239573 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140965186 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161291768 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096132613 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.932363307 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179713807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144377417 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493668028 seconds)
done (took 5.054305554 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.220115555 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081918044 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096153728 seconds)
  done (took 0.853292948 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090601806 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144404664 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090900112 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076467318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091570862 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076281852 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075585701 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091329794 seconds)
  done (took 1.325297175 seconds)
done (took 3.174803611 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736277678 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28190073 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20332659 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506489461 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180738456 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214308778 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665515079 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351903605 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.243566423 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104206831 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133908019 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.400018358 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131680073 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.660131073 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087998567 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125295272 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170926812 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454022162 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091236706 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092796893 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115733116 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152526134 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.113594296 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.086192469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181025635 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077496504 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187256894 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107084756 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076187804 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28158964 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199818853 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669870393 seconds)
  done (took 10.798098652 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114556042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13575327 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096561164 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138404273 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135848748 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080546522 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09916307 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07881238 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123354234 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180563732 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132665502 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142209583 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076139584 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080643958 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118122512 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249474272 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104631493 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119997818 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082344291 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105115587 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137715562 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095590861 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108509139 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091002437 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168227815 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214912887 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109232295 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122725102 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092438326 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09569296 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143184173 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156599903 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075030083 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094910454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176524777 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10428006 seconds)
  done (took 5.072317406 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189345439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103122089 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187021296 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.142667663 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138669779 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164662182 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094052399 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261527943 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.133424032 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175598246 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125025022 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110627641 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077773227 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09664021 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127132253 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076202439 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.742916809 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165125018 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113714162 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116281193 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096330646 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08550277 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373038378 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083552177 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094981008 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081813097 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088192878 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160905649 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081121087 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.197896577 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097785397 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097639645 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115226531 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209394614 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123165958 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118600168 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097354266 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075367224 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181170058 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102539669 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077864789 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125055541 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116652252 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133928634 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093696939 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078354628 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226350428 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075489705 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093119241 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.997918558 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176137428 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104215689 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075136863 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.341343108 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116590851 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077652168 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092694003 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075539739 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280115516 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112461922 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096310001 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076930119 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097159427 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084311133 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386626259 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094002069 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.747860483 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079713231 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086873888 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096650606 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093798216 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085972 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102594462 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097351386 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095137869 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079844589 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077062243 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094575249 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078650195 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116401627 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099813019 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078364442 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158171334 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077519211 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097139232 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126335063 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095837206 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076882841 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129669104 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079358463 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092669579 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135875324 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07906316 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116082703 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093065376 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124962643 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094073254 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10728028 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.208294981 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076143592 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076624926 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126069782 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098295603 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126865331 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.090025058 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097625607 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083248706 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092759752 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076283673 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146755622 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091371048 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079128198 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096703248 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09116068 seconds)
  done (took 22.500075345 seconds)
done (took 39.048243051 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.358471827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109918631 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110111902 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109431865 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107172655 seconds)
  done (took 1.548077271 seconds)
done (took 2.277351459 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28301592 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170578122 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090093506 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165861029 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072712123 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172724908 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172623134 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091363398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198202548 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07297387 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162307604 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088359823 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073111037 seconds)
  done (took 2.566796324 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092196016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11439595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0801211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093387431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090957132 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092468256 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108520162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098842896 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108342063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082592698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091695837 seconds)
  done (took 1.778669556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090889623 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112129343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079910581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09164693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090728678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091427496 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108475454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09811576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108496055 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083222504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091475292 seconds)
  done (took 1.773123852 seconds)
done (took 6.837207589 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092526361 seconds)
  done (took 0.812155243 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.025034665 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.083608046 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117850726 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167330702 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342368092 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216541929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.604164003 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134458489 seconds)
  done (took 15.614042363 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112691584 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097108873 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096430343 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097018495 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079888375 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099781873 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079732603 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09832913 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081408859 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095406183 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08145833 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094173458 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081872928 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094480548 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081608224 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082239644 seconds)
  done (took 2.238855111 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117837457 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116768707 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103009364 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087561908 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101443972 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083632522 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104114474 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100841511 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083402722 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099442162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088526349 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102438958 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086250829 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097954655 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08578553 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104962558 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082265624 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10175093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08685833 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102951713 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103565289 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084647641 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102417312 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08757516 seconds)
  done (took 3.15222347 seconds)
done (took 22.542069542 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151270349 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084196667 seconds)
  done (took 0.963442203 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098330609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116375391 seconds)
  done (took 0.949106852 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10468294 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095886826 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13512472 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097486627 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096139993 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079581728 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129285318 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097287697 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080723393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097038636 seconds)
  done (took 1.748407349 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083302225 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100614115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088714258 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116939023 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090318496 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098499989 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085031046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100400261 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086025156 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095294516 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087949001 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114211389 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103509684 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099212418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102172618 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102887819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089919797 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100723784 seconds)
  done (took 2.482490368 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078309169 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081716787 seconds)
  done (took 0.897008357 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081429921 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093619468 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082827967 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098868779 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079829344 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094671574 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07841386 seconds)
  done (took 1.34843316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491293216 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141909459 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269805994 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083622852 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122380593 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312762626 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.093553615 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082431845 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101103095 seconds)
  done (took 2.496068863 seconds)
done (took 11.620584357 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090390283 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114116199 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113363123 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466262363 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114832551 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.077092593 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.15846141 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259410338 seconds)
done (took 2.136137932 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148673767 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336461877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123131227 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086024878 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078689232 seconds)
  done (took 1.368831791 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075935777 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080255686 seconds)
  done (took 0.901724634 seconds)
done (took 3.164010225 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077352862 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076903891 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092508097 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.130194669 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077735387 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.075191428 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094052414 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07770382 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095489096 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.077938755 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074942318 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.094461523 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078518435 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091827807 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075462989 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091211708 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078563726 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077529599 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091582394 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074839336 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091606231 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077892657 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07495893 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091606617 seconds)
  done (took 2.819465725 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105437758 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096294718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084864081 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100679515 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082472601 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100657066 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083576614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094633734 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099949819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081555984 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098118177 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082926727 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096229209 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083321375 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096358995 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083240016 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100209262 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078458058 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097044221 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082546556 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100367546 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079184745 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098927901 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083993716 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0992708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082497087 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097511414 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078558747 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10142221 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098192481 seconds)
  done (took 3.496767174 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082033913 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073587653 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092740894 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083127695 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092924872 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080864707 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091781303 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076531471 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07630487 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092440808 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077629376 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093063476 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075862084 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094079602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077355522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079145719 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105793685 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076387345 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092206523 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077109952 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095308333 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076417398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078019035 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094004334 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076002872 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092397411 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076612305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09195401 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076984439 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075062439 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095943818 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079139436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092603663 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083050548 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095976122 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.187625655 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079751316 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09194115 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076867171 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092103625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075361584 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.074861201 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092585091 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082257008 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096317779 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077822708 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092589833 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077326 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076208657 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097259826 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075086843 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091733366 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078161827 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093782456 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080227308 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091973613 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077381069 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075808972 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093909705 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075537235 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091893873 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075749175 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093980589 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077230696 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091458191 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099290314 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076735413 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094245749 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080438504 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094458322 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078418982 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106480602 seconds)
  done (took 6.984808536 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079864147 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101841089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077771783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077034236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091452297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075865128 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097750973 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076371597 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094840288 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095283401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093156166 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078072049 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094050608 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080078331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093332042 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078911322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103282673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074167864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093241935 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079910402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092436287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081099568 seconds)
  done (took 2.660148479 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21057769 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100761987 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139136284 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093733759 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113113301 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109587419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083128092 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101538491 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083470496 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10386213 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086840677 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100299951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112360394 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086813488 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103561361 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087306725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099741872 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087816207 seconds)
  done (took 2.660927854 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090994099 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095899597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101600652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097612652 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079703585 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099069774 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08633993 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111714507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081820636 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096194371 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090381116 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098467884 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08184905 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096491625 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081572604 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095945932 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082085874 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096369012 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090048839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102717793 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101920204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090256973 seconds)
  done (took 2.808202657 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094084594 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096606922 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099753177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100246936 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07749229 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097616268 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08706295 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096030599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088503444 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097360941 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079567337 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097052662 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086759431 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096208025 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084894832 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09669043 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081602878 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096648576 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081514998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094653718 seconds)
  done (took 2.588455441 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117338673 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108962606 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093387128 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120855689 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093859774 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111380845 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121334054 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094714349 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111856522 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107524604 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110358887 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109466517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104510688 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117531466 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094158113 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120579355 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120397521 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103133323 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109680717 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093176854 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12121291 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108520406 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102049337 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109972031 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092522612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110612381 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093113097 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115651103 seconds)
  done (took 3.774488988 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077909335 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076768984 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092475552 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075763887 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093412561 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077110667 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075986399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093781339 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078542769 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093543151 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078699674 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095520764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079369611 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078503208 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096135277 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079298242 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0961096 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076907554 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079513899 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093747602 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078997295 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096797183 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079754739 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093777927 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076947638 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079344593 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094224876 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076791988 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096270253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076860608 seconds)
  done (took 3.300257281 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089200504 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103143157 seconds)
  done (took 0.955083891 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075658006 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110550318 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076089729 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082508636 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102342822 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079890709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106592376 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101694705 seconds)
  done (took 1.495533169 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095827762 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115288501 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085429254 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108678486 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098456984 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114588948 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156654345 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082939714 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102066933 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076910078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096105572 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096657955 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084626106 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09748189 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086074377 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103283473 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080269286 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107822654 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087023631 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09938291 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085611951 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109141944 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08200223 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093978643 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081150236 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107898571 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0891639 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098628695 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083152665 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106113283 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085089238 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073339989 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101825191 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084971939 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099178837 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096868188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11057509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082802623 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106108595 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085606643 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10678075 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078475471 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102466077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085489332 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108303983 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088001562 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103371862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07839336 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094546291 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082885401 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095407518 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079861548 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074209678 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106190501 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084810642 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111532935 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082033009 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099720139 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083368603 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100312288 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086526695 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100195951 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08212823 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100354882 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087280243 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101401027 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088150883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095905003 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073692195 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098044087 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089562277 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120104139 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.08868961 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101288409 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085827457 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098340328 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083412997 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104017713 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088268331 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106677253 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085255636 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10400093 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088575192 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097554787 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083211934 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104593339 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082967241 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083584386 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095615579 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096072331 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100670069 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080995247 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094935794 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089942364 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101123721 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08351278 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095448443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088280876 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073869467 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103797169 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086290761 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098883741 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089448276 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104305959 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086133244 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10528756 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090920611 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09777918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08322877 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094454439 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086788509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100264831 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08748977 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09242509 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083799625 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097686939 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085322268 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.1060321 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082447525 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085543469 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106857558 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086993915 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10066283 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076592694 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101193031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084477689 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107858994 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087471174 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100689174 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078340112 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096356054 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084602016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10161924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085452446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103293738 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08439274 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09171623 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081957049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085150659 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105873997 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080404065 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.098845967 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085489233 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098610791 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083281125 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104189995 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082382368 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096481656 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.085332175 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100042056 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078741061 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107230595 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084069136 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082424207 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102432703 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089410401 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10103788 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085822258 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100516658 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085447729 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103874642 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079770876 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097984788 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083512132 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10799356 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082989657 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096494145 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077750668 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086723515 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09667597 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084814944 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097275664 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083381296 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103517329 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082403468 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101029578 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082551989 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113466995 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093405726 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104102966 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085965042 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108235933 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084932626 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100049287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084190736 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104202902 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086596051 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10569397 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087361265 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086278211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101481142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07710743 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104890897 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088967386 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098023745 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081790262 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097413835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085917537 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106462464 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086308086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103757395 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082920077 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080912002 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107820101 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083063647 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102833186 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079617986 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103505534 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080192354 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105024492 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086985495 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10852294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084510574 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097511648 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089688121 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100107518 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087202486 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097394394 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078591075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079140132 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104100786 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083400842 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101933622 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0750456 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106544846 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088817855 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098764236 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080069108 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102129196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089905294 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10026312 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084729623 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102431215 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086896988 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112203412 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079644503 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.1009484 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091412837 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102905289 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075867874 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087031463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100851659 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080255865 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102093733 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08282091 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102252203 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088249088 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104363043 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075572142 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102826692 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084992534 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079568821 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098277412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08809444 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103128772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083239395 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108888637 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086973655 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104382702 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085239547 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103358909 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087378982 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105015605 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084474081 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105369921 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083826747 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098823621 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083481296 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097617099 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082627932 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08239314 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10432587 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080753031 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105753106 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085237633 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099808141 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086163164 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104076127 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0821097 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099827896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082247503 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102530441 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082034431 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081011349 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102164023 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079548046 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107310518 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086204997 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108172195 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081476689 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095932045 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087266166 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101661857 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087898609 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105216597 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087300299 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082615644 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103916002 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084506095 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109332704 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079031518 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109087501 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087498912 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100164939 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085080721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10058184 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083099323 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098011108 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083743614 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104751625 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081565697 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085478529 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104859312 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083644007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099788076 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083130989 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105430874 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081687201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106393616 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075525886 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098539354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080973147 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085359007 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107853922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103928178 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084597444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083758532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106063372 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084255564 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097221883 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089722693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106686544 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086575193 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108378577 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080916874 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101153953 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092625249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093519111 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083655686 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100571531 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079600521 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098430129 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105231047 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.089719812 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099396239 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080922034 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096616728 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088511856 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102340389 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076283329 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082294893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103716478 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083699361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102331425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087158115 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103210415 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088069668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108001259 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085117791 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101474054 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087517731 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096787528 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080462515 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080240604 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104349878 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086937508 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097374902 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078506436 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10376799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083985882 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100071139 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085136919 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101381563 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089667389 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085458139 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10373125 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108895442 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076682312 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084735114 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104411022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085278241 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098865592 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086276239 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103817379 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088287682 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107749257 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086399135 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100597159 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086056611 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101207599 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085917841 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085203326 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105849274 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080474928 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106434181 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090601227 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100993716 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084383995 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099867939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082926992 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105738743 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08816321 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102961015 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089496457 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103605686 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083867269 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106329138 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086799295 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085036489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106959271 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084112729 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107216095 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080991945 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10910064 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082374838 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106791072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083994802 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097859895 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086328624 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104567599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084994939 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10541571 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087950214 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080534813 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099334123 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08292667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102578924 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091585434 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109398468 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08477015 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104073695 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080474686 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097697434 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087938476 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097500171 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08474634 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084821174 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107235989 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084124648 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101731673 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085132426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108466381 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088369411 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105968899 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079460664 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106427044 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087777776 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103831088 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083800042 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100586448 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089230393 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106016488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084142516 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081166738 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109766666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10468588 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089281082 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083617674 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101618685 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081822962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099284559 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088024902 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102863156 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089626331 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103586249 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086604018 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111127406 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082039147 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100536693 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091572895 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104543327 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089054487 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099230942 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083357839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0876904 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10766044 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080155881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100280211 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07924741 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10423702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08133617 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099273758 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09239498 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108791998 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084696038 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103455448 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08568468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080959475 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099449359 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081349537 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107288937 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084155069 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111504652 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081892951 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099847662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081822882 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104713939 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086287715 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104579827 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079778423 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080663947 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099801097 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084941124 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10910259 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085393549 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105026089 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085849685 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103594822 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083519347 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110012206 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07933836 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104445214 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094841555 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106010536 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083357863 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08846225 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110212921 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088135747 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100382409 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087634138 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104382777 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08312582 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107483356 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088011994 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117515676 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085936335 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101094535 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085477457 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105062871 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082523228 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10950976 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088919749 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107034526 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088583848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103302433 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0907076 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103820823 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089957558 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103249343 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086245207 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086333373 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102238591 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085397226 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099913146 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089244147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107743498 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086758134 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10845511 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082193151 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11188021 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092179027 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10684737 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080222579 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081533265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101682181 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081398515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107567623 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081646588 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103792387 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084824076 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104222684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08394083 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088898762 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105621877 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08854207 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106686496 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077100055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103779578 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086109475 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102658505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079925 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10623616 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088994609 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108398922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092765338 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082782402 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106722216 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084981379 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103603759 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08194014 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109482845 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086282114 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105697347 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08239496 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106206045 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089359166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086098993 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108689995 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089521295 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105811515 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09215647 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110348455 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080146619 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09971589 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089219006 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104297814 seconds)
  done (took 56.522476322 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14603596 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086892194 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077805746 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097683877 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124348073 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082611117 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098187413 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083017976 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102041176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092727082 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097520241 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078636189 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121627737 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127646951 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122557179 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094291789 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097927699 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083078087 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097000594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083195249 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12025357 seconds)
  done (took 2.926860014 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102720984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114499309 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115578025 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100477816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109453646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115864574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09524346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117768375 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119931768 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091595229 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120190083 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115834231 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091859969 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111140528 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091747749 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113891526 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121133134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089379339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117534605 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115525629 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09411682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116087089 seconds)
  done (took 3.192806358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089431786 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08607612 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106770257 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.078058662 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106135099 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078240982 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111507876 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081102462 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110691374 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.082183831 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082438192 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101151943 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087092037 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.098620678 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.083134423 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.10052976 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156789146 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091341039 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106789607 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088281139 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100988357 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085920183 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.081138694 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.101636796 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082206162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115363122 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088853679 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.107916716 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08704663 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.101710417 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088124199 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080187848 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103949838 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08333628 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.102454068 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.082516061 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106394736 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088206066 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080547631 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104112865 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08462041 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102008366 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088588053 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104431686 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083901638 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101289587 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085097208 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086388912 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099067471 seconds)
  done (took 5.447573061 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113214923 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.136383351 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10752657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14902205 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122314468 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097031405 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109169146 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147655369 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.081738274 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.107677589 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103324296 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122552716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109918793 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093278705 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111750966 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087285944 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109047787 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083027042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113144422 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103938145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093687717 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111185406 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101818737 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118713996 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112532703 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08596928 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103790068 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092615093 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119152534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113937377 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093868281 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115250566 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122482839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090306342 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103310035 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090360213 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12438702 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087620556 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111234704 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081963712 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110241302 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113137894 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091644712 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124677179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087433069 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109569265 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107760471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08106567 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12003209 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09040795 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117955743 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12227335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092162547 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108501153 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093038286 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122914287 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108112903 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085971035 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110958015 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098909282 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102584476 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092008185 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121059257 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109719309 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096413914 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121081665 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110322514 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092147259 seconds)
  done (took 8.19080613 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113962585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109740165 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102736274 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123719044 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113298623 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092400083 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113313865 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092618332 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112759694 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119754132 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092727794 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159981128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109964061 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099137589 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113109293 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092106334 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113784811 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091713694 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114090708 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092563858 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113541496 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123552693 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092600583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124006593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127285632 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089806882 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113674093 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09259664 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124414527 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113623097 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125863304 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093322864 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112962825 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102402215 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126244375 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113090459 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086468488 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113529216 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092555934 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113899105 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090233049 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123768396 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114280777 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089972361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113843075 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092347431 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124550451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127326449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097514077 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119733362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112816165 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10406809 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113538544 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112906219 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10347907 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132230943 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124208147 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124158617 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09308894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124643936 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123785197 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11176418 seconds)
  done (took 7.673546675 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113581982 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11510428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123111589 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077393047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101848952 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090666263 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102260767 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082115282 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1195061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097997384 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120985969 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110330638 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096136123 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121763966 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112547991 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09646059 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113397967 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113058787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098838045 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113543318 seconds)
  done (took 2.952997583 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090266719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122038092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082999309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114224703 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088377099 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113693311 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087233489 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108710683 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085592705 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109195819 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097207485 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118021157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106281794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092801135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118725673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092143084 seconds)
  done (took 2.458756049 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.093990135 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123485662 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124136136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08452218 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10331238 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082054606 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087115596 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100374929 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079064749 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119983957 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083812688 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107883156 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085365358 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10048743 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079268679 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111769549 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.080327818 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.103877957 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086896192 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125778796 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095844588 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107665269 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088524247 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108852713 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105134763 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091802308 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106484965 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08256769 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105330756 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0886108 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105757195 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093029837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102204682 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084517313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103587551 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082672674 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087692564 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110179641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111724808 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088611748 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082745551 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105716182 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08787047 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107561097 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080712947 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10966602 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080604508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113123311 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082872648 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106367431 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087922563 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109558573 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086072451 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118209267 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089492973 seconds)
  done (took 6.199326941 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097212952 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105756728 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077533918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079069961 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105141438 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083194528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.1070767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084266254 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104723713 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078488434 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106489053 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089237185 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108053489 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089215329 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109189097 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089572291 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101655506 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086988015 seconds)
  done (took 2.542312845 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088103735 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081657242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110760042 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082444402 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104976663 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08701279 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102222567 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083476168 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104548029 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085288724 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105145991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086669781 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104245902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087887508 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08490596 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107230846 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.087522835 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104941623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085523988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102315521 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088037568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104724003 seconds)
  done (took 2.921302219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119167236 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126172965 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093487782 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.215158661 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.126427752 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110944053 seconds)
  done (took 1.630884917 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106821908 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138984026 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082203602 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105586975 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095803825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108714334 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089199898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110074084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123593452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125110546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090727189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124667454 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102657819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12215213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119552274 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098550071 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111578732 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110606556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086655961 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133163576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089991495 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123659328 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111011502 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090286041 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111469304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10145257 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123532301 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125051668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089999906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12364203 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11936113 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090529729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123711791 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126105786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088177488 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123545456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11073627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108950274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116752887 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119277165 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084305614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116803214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09787445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114753798 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120186841 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08690488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113855863 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106276874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08746505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13526058 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114725635 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097430647 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114171882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119670395 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097688283 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134775518 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120756408 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117386873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113488122 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099989655 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117325482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114708407 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096852002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11986404 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115052436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117537799 seconds)
  done (took 8.125338112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121547861 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104336742 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087025197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121043556 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118332865 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086721788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107586066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10655525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086673285 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103654706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151638433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086397143 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118121793 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11701381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087436725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1079903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08666739 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119842361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08550752 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135946156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106918057 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117517877 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098100163 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11930439 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120937876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114760462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088370952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110195496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088444605 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111550874 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097105174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112449253 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122679398 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086992536 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123323217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090829715 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111911207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11758822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089764778 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120475452 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122957894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111434851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112620653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091017809 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126430955 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112407843 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090229098 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109554747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090698318 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110509207 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126545464 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104279149 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12582865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123886323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112544399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091382736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112030751 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089650071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112938098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09889812 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123390077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1126958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140815656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090732105 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112809502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102053324 seconds)
  done (took 7.993211795 seconds)
done (took 153.06771298 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098261047 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138236842 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100567881 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171459975 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082089717 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136746386 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115937228 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116993113 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081940036 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082557762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103720492 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084888925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173223889 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082266729 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10230079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086109375 seconds)
  done (took 2.602115113 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179554327 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29259453 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101879642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104531118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089349447 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107785465 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082711918 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094462565 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105570702 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082304275 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105994554 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085744763 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106157772 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08546443 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107043864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082229322 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083929722 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107073822 seconds)
  done (took 2.858935261 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111121645 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141014513 seconds)
  done (took 1.10560975 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117689481 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17380541 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271115685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15046226 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132930475 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098703949 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152418886 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123675921 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201256457 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126856308 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127546091 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089386631 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139566158 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093546477 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112798846 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092182837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140094027 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110113477 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091277831 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113977175 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116175495 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103767431 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092182796 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110716784 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186726754 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124869246 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082256668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.082367789 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11160861 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111199263 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089199545 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117848607 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102555608 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.166350636 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096207572 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.149386039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.110355137 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088490779 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113678809 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09039299 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120631076 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119317496 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101124911 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112479431 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085151321 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116434668 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08866789 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085488886 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117202325 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095426533 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116185089 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114686089 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153998026 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095817986 seconds)
  done (took 7.278323746 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.811592446 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154643863 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092146603 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.91285705 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135089188 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103432975 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.805918373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137972501 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23362659 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.796029775 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1258274 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123462052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206175466 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247065923 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.896832371 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308293367 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715475988 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.317351256 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1389952 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147778687 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093264175 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134005395 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127614153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424451634 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.08875907 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087848609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114496168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116847775 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157202266 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087401008 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111950621 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174021524 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.239583538 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204920743 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088726986 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109677037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086274733 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162572233 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26997047 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216826824 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151033889 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105019058 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086005534 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117879646 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127424823 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083247143 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15970219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166700865 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188806477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088604764 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118940744 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09355852 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11740449 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160243558 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106263807 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29285177 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311058667 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108404319 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094258095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123630897 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241662896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107376425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22617395 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11218085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214250253 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085962941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780062848 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161763947 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108272015 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091956583 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113988243 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090931379 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116887634 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162495703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386120361 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098226032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111263993 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084992784 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226371146 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086106408 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108113704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158681096 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087212577 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115336224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099074726 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117845939 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163387229 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.222858288 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118914434 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116127981 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09004939 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120757199 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.086927683 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209211873 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217367187 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155154387 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20643668 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117644283 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160555667 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160216383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117306942 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164394253 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115001837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101505788 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117859971 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216777339 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138339576 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086624082 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112869641 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091714287 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14183666 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089038763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114762414 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162247046 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480431417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160776269 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08285395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113061144 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094065525 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158061512 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115187368 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257220837 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09434625 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160479254 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114052689 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082871447 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115070454 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159113312 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118986005 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093756809 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119347196 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093109262 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245489178 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194909883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120399937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21713778 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175418276 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115403448 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168018042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116109381 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164831426 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094393583 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117513481 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087419023 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784970545 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120795398 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093377351 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112689325 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182034922 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086452825 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108896433 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086250865 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082953453 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775006694 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089028533 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105546872 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086637795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114793072 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092951418 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11355869 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111216563 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157961204 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228784285 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096146126 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114833243 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086922451 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158121473 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111140211 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086572064 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109379621 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087389512 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117248806 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090048066 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109565576 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168587702 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156572047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221250364 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572162505 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109198473 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086654511 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227402667 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086369042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28334816 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117249225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202972783 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184859491 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084390325 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308594503 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163420408 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183820319 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089700598 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.165658992 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105727072 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093051835 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178514626 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086127149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115072978 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155748346 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099619553 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120181561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929716133 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086729211 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222809966 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106877254 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165493518 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088094833 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11775448 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291952295 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086951625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126590579 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159381029 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1122047 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087702715 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703660484 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109498566 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097655323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115630029 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222856054 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161555362 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116670504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093551268 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117903562 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159349085 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205813885 seconds)
  done (took 42.571159435 seconds)
done (took 57.268695657 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276620365 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211448712 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261904719 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163921256 seconds)
  done (took 1.872572519 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175906103 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122226708 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141833922 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10275826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.128902407 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102143382 seconds)
  done (took 1.653602478 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.366892409 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27636777 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238663354 seconds)
  done (took 1.76562338 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247351314 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.265403506 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324578794 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.398381295 seconds)
  done (took 2.221488795 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205827411 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126761048 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.100289947 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143216825 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.150178545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210458613 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14018431 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153839539 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106930301 seconds)
  done (took 2.267562379 seconds)
done (took 10.667203123 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.332428327 seconds)
    (2/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.276141822 seconds)
    (3/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.223178706 seconds)
    (4/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.209764174 seconds)
    (5/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.257149319 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.194720427 seconds)
    (7/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.170020653 seconds)
    (8/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186582689 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087930438 seconds)
    (10/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.234150721 seconds)
    (11/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113672199 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097345583 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.169010833 seconds)
    (14/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.205680907 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113960903 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.210381236 seconds)
    (17/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203999976 seconds)
    (18/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.185981694 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.228843738 seconds)
    (20/286) benchmarking ("sort", BigInt, true)...
    done (took 0.245626747 seconds)
    (21/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.191035427 seconds)
    (22/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097401801 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.155287993 seconds)
    (24/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137011433 seconds)
    (25/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151969287 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117991346 seconds)
    (27/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.220237748 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081996568 seconds)
    (29/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.172464934 seconds)
    (30/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.209342208 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100118601 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134087034 seconds)
    (33/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.22622418 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.232019986 seconds)
    (35/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.180244299 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.082266239 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.184157431 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09341587 seconds)
    (39/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108081936 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09301283 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139881931 seconds)
    (42/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163546373 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194819386 seconds)
    (44/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121586198 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099924854 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.118745457 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093095756 seconds)
    (48/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.110055251 seconds)
    (49/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.07395975 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118266578 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114026949 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118779304 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093291949 seconds)
    (54/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.192614477 seconds)
    (55/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.137484795 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14655659 seconds)
    (57/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194167256 seconds)
    (58/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094976251 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120998813 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.083814372 seconds)
    (61/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.194663042 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107387939 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.113324944 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105275917 seconds)
    (65/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091591999 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124090313 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.152445854 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182152023 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081534127 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112665631 seconds)
    (71/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188742806 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071902493 seconds)
    (73/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222283592 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132441222 seconds)
    (75/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.137308399 seconds)
    (76/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115254983 seconds)
    (77/286) benchmarking ("sort", Float32, true)...
    done (took 0.238112242 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.086888074 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096875445 seconds)
    (80/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077332706 seconds)
    (81/286) benchmarking ("sort", Float64, false)...
    done (took 0.180615976 seconds)
    (82/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115700667 seconds)
    (83/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10021101 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173458777 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071220714 seconds)
    (86/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.072491063 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.104316057 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095431946 seconds)
    (89/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.14077907 seconds)
    (90/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072705476 seconds)
    (91/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.122503826 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.170750999 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125710531 seconds)
    (94/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075660517 seconds)
    (95/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.192249565 seconds)
    (96/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.2007543 seconds)
    (97/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.087220257 seconds)
    (98/286) benchmarking ("sort", Float64, true)...
    done (took 0.243322774 seconds)
    (99/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113227884 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109018035 seconds)
    (101/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147548328 seconds)
    (102/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187354933 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087725295 seconds)
    (104/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117193898 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083721905 seconds)
    (106/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124992462 seconds)
    (107/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.153962436 seconds)
    (108/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173202779 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087018009 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11905413 seconds)
    (111/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073106288 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102670652 seconds)
    (113/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074870918 seconds)
    (114/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122433892 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090288266 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.189814487 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095536014 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.104942578 seconds)
    (119/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089060048 seconds)
    (120/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121288874 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089871648 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111831832 seconds)
    (123/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072961617 seconds)
    (124/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.180780306 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091043027 seconds)
    (126/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192455561 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082134372 seconds)
    (128/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121043087 seconds)
    (129/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084555004 seconds)
    (130/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.16238097 seconds)
    (131/286) benchmarking ("sort", Float32, false)...
    done (took 0.179605399 seconds)
    (132/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11343703 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.137029394 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.166220553 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071161614 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118139528 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08643827 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102038208 seconds)
    (139/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078473364 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075777184 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112708393 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095958061 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121937102 seconds)
    (144/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.168303427 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128368864 seconds)
    (146/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098893219 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111155507 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094978078 seconds)
    (149/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.096043279 seconds)
    (150/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071895102 seconds)
    (151/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093585666 seconds)
    (152/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.114851268 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094792132 seconds)
    (154/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.097447182 seconds)
    (155/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151759108 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102049732 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109687293 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126386469 seconds)
    (159/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174771913 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083881109 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.212604033 seconds)
    (162/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109118805 seconds)
    (163/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106440914 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167913648 seconds)
    (165/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088800202 seconds)
    (166/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126190374 seconds)
    (167/286) benchmarking ("sort", Int8, true)...
    done (took 0.23248258 seconds)
    (168/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075681187 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098933693 seconds)
    (170/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102222505 seconds)
    (171/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079501334 seconds)
    (172/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.101373451 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093482126 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.175980332 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094639013 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119465983 seconds)
    (177/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0939183 seconds)
    (178/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119643397 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099566974 seconds)
    (180/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086656485 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187815717 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110304235 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075922202 seconds)
    (184/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.099988679 seconds)
    (185/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087593005 seconds)
    (186/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089646974 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.236025755 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11165278 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.078246235 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12517457 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076527929 seconds)
    (192/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.12795867 seconds)
    (193/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.119209333 seconds)
    (194/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070538632 seconds)
    (195/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.166006393 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073573045 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117154478 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.091328597 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106400438 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.11095221 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107477884 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082869506 seconds)
    (203/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108723667 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085606606 seconds)
    (205/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084325763 seconds)
    (206/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112894911 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091377052 seconds)
    (208/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115540612 seconds)
    (209/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086787933 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083568495 seconds)
    (211/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095756422 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082967504 seconds)
    (213/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.169129066 seconds)
    (214/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073716338 seconds)
    (215/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.135741249 seconds)
    (216/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.070316757 seconds)
    (217/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.095703471 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109531326 seconds)
    (219/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106546453 seconds)
    (220/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07131522 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095665983 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184372026 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108745488 seconds)
    (224/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080571967 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090711455 seconds)
    (226/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11393266 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076758346 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.100535983 seconds)
    (229/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089153129 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090500056 seconds)
    (231/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099976349 seconds)
    (232/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093166702 seconds)
    (233/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114866908 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087513267 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132450011 seconds)
    (236/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245657486 seconds)
    (237/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088744096 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094800805 seconds)
    (239/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.150709084 seconds)
    (240/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.159779203 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073861058 seconds)
    (242/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119179664 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095735406 seconds)
    (244/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076857818 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113465644 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090899493 seconds)
    (247/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.108634305 seconds)
    (248/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.075937104 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08866394 seconds)
    (250/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.111600849 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095333587 seconds)
    (252/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122755923 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114280189 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112004505 seconds)
    (255/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.130038753 seconds)
    (256/286) benchmarking ("sort", Int8, false)...
    done (took 0.196633033 seconds)
    (257/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106378898 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089160202 seconds)
    (259/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111055491 seconds)
    (260/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.071793977 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096277224 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108907107 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074658968 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107284454 seconds)
    (265/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073236642 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086049466 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117483254 seconds)
    (268/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.075856099 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116202795 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.083491644 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114785515 seconds)
    (272/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092442047 seconds)
    (273/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07920287 seconds)
    (274/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112772096 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084964009 seconds)
    (276/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178992456 seconds)
    (277/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07263606 seconds)
    (278/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.097379726 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083639651 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112556771 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.084767714 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088427387 seconds)
    (283/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10099585 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088264171 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125640906 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107576825 seconds)
  done (took 36.407486327 seconds)
done (took 37.300386028 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096503786 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148476356 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093342302 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137418655 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100705142 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125062733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093446817 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123975511 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.100539724 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126736578 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100211258 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101530998 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097748659 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126015977 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099443953 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144944211 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10184301 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.12037652 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092031456 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087475894 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117154506 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087995982 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11512166 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078364688 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100155825 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118424146 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095413303 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124634774 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088669552 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.113488034 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.087907955 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120974007 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086737943 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102891803 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.116347187 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.092318192 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125424678 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098683188 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115851578 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088539583 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121857388 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090219542 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096419427 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.117553081 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.090571384 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111248801 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092331237 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126276706 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118124878 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117954414 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09535189 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123025074 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097608028 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120742663 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.087638285 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092455574 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.112677472 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122176649 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117278565 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095474257 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121158698 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096949638 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112570358 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092050405 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.115690199 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097687209 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100479275 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112665935 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099042656 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118898405 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088313429 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116669474 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.087227925 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089046656 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117198803 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.09762796 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107744336 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.08824712 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118918091 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088295178 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108241052 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086453893 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.086270309 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108571676 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086835976 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.100158411 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08226708 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091833689 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10882897 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.088270008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116455118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092970024 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113555222 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098981792 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08872344 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112343927 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089179927 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112202333 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089009853 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111592701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086600882 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092184306 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120969627 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086310345 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111100938 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097274501 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110423907 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090739037 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086196465 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109142433 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10048557 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117325264 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084712018 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116926726 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083116981 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.086001088 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106767684 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083562397 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106769167 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083967966 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108611952 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084074529 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086301114 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109001851 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098235435 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107023887 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084506799 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090220497 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.106597127 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089528023 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107917456 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083676579 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109190824 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08148208 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086279152 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107235851 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.086863568 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111107848 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087058517 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111350054 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087574478 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087994939 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109044921 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0830748 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107172682 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077686445 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089125936 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109110402 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087326225 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110073542 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086436216 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112017413 seconds)
done (took 16.464189601 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084401761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184149173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.139142078 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.118243713 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132747029 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084820039 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121240275 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141036103 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085060801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140813021 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106970904 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128100571 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148627918 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084281888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089408984 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.116974536 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.088499048 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.130207982 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.121338596 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129529668 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140210819 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.082412079 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.135500969 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.10958817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117417986 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103118098 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108692981 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.088707748 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112917962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109132242 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128859765 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089399691 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113315966 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105423887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12547522 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091694077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.107977203 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091367151 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083603798 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107452173 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.124770495 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106248827 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113058144 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090091194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.087987063 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116118582 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.085612197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117604103 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094608063 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112061147 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100963487 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132388448 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111855298 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100546365 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108103301 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.0949248 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125751826 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09250492 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088632654 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117057704 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.087825147 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116610521 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.101496286 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125781516 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.089178523 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123110242 seconds)
  done (took 8.229262258 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101993449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138761721 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101743405 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12656575 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084086424 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.10878473 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084876709 seconds)
  done (took 1.697066054 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102054576 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111275144 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135633265 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135546073 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107897662 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.137952176 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08965962 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.111158824 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104928806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110598747 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109308445 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153148995 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089025266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120554784 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114248892 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.111178549 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112713291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109520825 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088714865 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140403278 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089394359 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129789787 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.087628035 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109324386 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102999183 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.088829731 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159313458 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115067244 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084825999 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093044686 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107355578 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149631115 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103255045 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121430589 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084856335 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131950523 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104087266 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112108026 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101287304 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117153244 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103291607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087376218 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11135349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083093272 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115029701 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099361476 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118661608 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08850636 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093301321 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133956143 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.087715567 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129418945 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088598254 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116583357 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086895345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113420588 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.095961183 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.111483442 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109645662 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084838518 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130555814 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131928039 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103589812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134082648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088245774 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128879789 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104677237 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093862461 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115620543 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091441537 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133181458 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086613527 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115074821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100205977 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117147272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112462364 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140013457 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088367201 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123790536 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086262411 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112586462 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086320484 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.14041462 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089738767 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085628913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115952724 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089868613 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108264984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084603592 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.113409221 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.084126479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086931988 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112876118 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085970621 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113796552 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105954093 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111131221 seconds)
  done (took 11.457294389 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08678 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086142139 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113260586 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087773061 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111858667 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08650604 seconds)
  done (took 1.530505877 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1155449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112090887 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099992403 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115252459 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127852281 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135180357 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.117434767 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124554095 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.128988082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.09758 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.137263459 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.115776475 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.146618538 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09640905 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137760981 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09532801 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135630321 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094791493 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12194691 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091394486 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.127850146 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.091965257 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116766356 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105108473 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119954161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.091112987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116182107 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097918255 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121841245 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095189424 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115737076 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095868779 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.116590398 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095919964 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135773364 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115983613 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090339448 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121687486 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092598886 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119465295 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11290465 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115919505 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097062716 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122469882 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095487756 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116763827 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097767777 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11554171 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.11063943 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124945954 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098685322 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115248732 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095701833 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122302844 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093676545 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120813941 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.099398362 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136978599 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096418914 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120385345 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089335455 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120577835 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097415134 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121047788 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.09628905 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123008399 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092390204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115995617 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091620347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117307348 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.099299098 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.113174253 seconds)
  done (took 8.982155489 seconds)
done (took 32.835514673 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679201788 seconds)
  done (took 1.63618384 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.800963942 seconds)
  done (took 1.760099565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.693444108 seconds)
  done (took 17.679866246 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.459497264 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.535087529 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.9694121 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161894549 seconds)
  done (took 3.085281017 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952909792 seconds)
  done (took 1.931206601 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281777238 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230182995 seconds)
  done (took 1.476471287 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763674323 seconds)
  done (took 1.738765678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.425191396 seconds)
  done (took 2.395435381 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326188173 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157003228 seconds)
  done (took 1.467543339 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.569814892 seconds)
  done (took 1.549334228 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.282934791 seconds)
  done (took 11.262851441 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240385281 seconds)
  done (took 1.229484478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290954213 seconds)
  done (took 1.271353128 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.478149806 seconds)
  done (took 4.459359332 seconds)
done (took 53.907132472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09557779 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098692751 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123606491 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095671054 seconds)
  done (took 1.38942746 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10167813 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117446776 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101523246 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118683305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1030797 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118990892 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095081473 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.128038262 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.09178309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118215687 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092773911 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09125695 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120890972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119357928 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090091057 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095446675 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125185778 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094033873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121919218 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093492523 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115163401 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094335967 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122492275 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091937332 seconds)
  done (took 3.551565755 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097055124 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.09391952 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123932779 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.093769876 seconds)
  done (took 1.39914576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09700114 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127940236 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.103452157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.121697865 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103966733 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.127340753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088475632 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089902055 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120036828 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.097884359 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114721587 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109251657 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128077962 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09661443 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123301 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086718912 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114442986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105217132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122824559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.098760529 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118078207 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097564239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088823796 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128748568 seconds)
  done (took 3.602452338 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169382201 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125365219 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.111797449 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117548928 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.133220202 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136718778 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.085018047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136893367 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.085650131 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125652308 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.08839417 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158214349 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123507735 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.084694804 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084401889 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110269967 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098409394 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123893538 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087643664 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124483979 seconds)
  done (took 3.303416614 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09533047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088363723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110060796 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088161733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12108341 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091981643 seconds)
  done (took 1.587498068 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093815806 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086399017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115504832 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08812796 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116769857 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085183413 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112133952 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086927801 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086424121 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110971411 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08949225 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112374258 seconds)
  done (took 2.180665594 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.511730195 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123222211 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088555936 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111166826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101101779 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117506415 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109269397 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119042823 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114531499 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113036814 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086239946 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089700825 seconds)
  done (took 2.676830319 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199745929 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095879126 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256973891 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348384105 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15596465 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163216613 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276789044 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161711315 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176519551 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141541478 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193535989 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156001302 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126923062 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171429342 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138806226 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152729516 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169161404 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187177802 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146985485 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200987634 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159108006 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163892741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150608134 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14698895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135039971 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157824041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09458908 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130050576 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167390992 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167117627 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170884173 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147627513 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113829002 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.461286777 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210946872 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17873417 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277392448 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131680118 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176700499 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138000347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242864041 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135830533 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187230483 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151139089 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102713302 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17375517 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.346685468 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179844042 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108455811 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147095329 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17862611 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173856845 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172620449 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135140682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295672166 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144415079 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114289297 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180992903 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179554161 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185226902 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161721282 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115943062 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18389805 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178824566 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173758932 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140450564 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160104462 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096658937 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167244617 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190113339 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16961792 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161771148 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182813782 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136461516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160308248 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167238367 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152374113 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170861294 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127963382 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119082166 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148904078 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109047378 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128140738 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193887083 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09575261 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193252948 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131521261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.171989917 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198223584 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153911642 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1295299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15815572 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158308925 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144220335 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087606067 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142913503 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149094533 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154143888 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10162548 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154527121 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139741966 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098366516 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150144874 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093625039 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153943926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124570877 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331066121 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162471164 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122619768 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159641072 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118948181 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146841488 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165278745 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180884363 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131164955 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104034446 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190202463 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154064902 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131610985 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17057388 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176978285 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124531816 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136350936 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163957019 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183428073 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139684608 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183094296 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112907737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131713854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138397235 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156445631 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127327648 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155167072 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130841696 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148018973 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190057545 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098265433 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139773145 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1724903 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098081294 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129008297 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139204808 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106874793 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132497644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.112688297 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136605239 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153812042 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157893356 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125487334 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147285898 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140013404 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18418937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135146225 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.119665432 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143390005 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11691009 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167250233 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180638999 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101670204 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191878749 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16027522 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222005107 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132850154 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128864758 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175793852 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100059907 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116705484 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163165898 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15625021 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133345509 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201646602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192307344 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159395915 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149621085 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119648587 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16282953 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162782293 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14670773 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106691807 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158507316 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15276113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12130526 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095393539 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125911644 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110416418 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128770512 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105148136 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1726859 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160279934 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20967353 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156742511 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11136338 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178875511 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12280975 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159946428 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.398463055 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117509682 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18071905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176388276 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16020946 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138603055 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167935688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090863065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121216059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103641609 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158525738 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132607829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105409825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138113584 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17828668 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.354964656 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125246762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226616782 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163053594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189578663 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093497167 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166895938 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164988465 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155356705 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146381146 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12900982 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120650854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175039144 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141934973 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179102449 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158958617 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162806635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185812212 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146028376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102096658 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145366931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161840023 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136059397 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137558476 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143287541 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136585823 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313855185 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.130222512 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096344618 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169705076 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140910775 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169145177 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144875609 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161692924 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10171584 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143860922 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155309398 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115158494 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112355113 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330157097 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183446064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141127445 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.342815973 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175132384 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101254018 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306836604 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183272635 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.361492635 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11325543 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139777454 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156823644 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158415994 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320453183 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180679892 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143622582 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174258612 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15608887 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.10582238 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135010984 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118303129 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148613839 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138677735 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130245558 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.12138568 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132543061 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171410766 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139558057 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128646607 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159844369 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147401852 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113871175 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142196843 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195848462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155036736 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171406986 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.144812 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160100926 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191420177 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103102223 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133979078 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.102154047 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18128418 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130325107 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156844755 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18145283 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193488095 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155728061 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160706054 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108166376 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117237859 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15595175 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117995784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221512645 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111521032 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132033888 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183138555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140315974 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101616402 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157613787 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283883195 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141267175 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170515939 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083211925 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277659141 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122030169 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102305853 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158198759 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166823744 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133442404 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1484804 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158076782 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142196184 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159478053 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109345517 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214742747 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200434734 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163455097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16863074 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10502684 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160358499 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317208286 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177159513 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142155916 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.132442973 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133617648 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179289093 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179811403 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130279244 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160069339 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158910484 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128186668 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188813266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10749594 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192190988 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128752671 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161056185 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110287322 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121816584 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155597789 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18520013 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128638451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14124186 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154396783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131230098 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096659236 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148355743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155209448 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139734872 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09704916 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168967982 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120857216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130983323 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174338102 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131123129 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151498945 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115714968 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134060689 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13914192 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112628452 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135045031 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135212656 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172860681 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12778839 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173686082 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167958815 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161366622 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314509497 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145016538 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663383342 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.099702186 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178941439 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14582765 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176341479 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118758536 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162210988 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159132629 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147938914 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162479304 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146586044 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.201166065 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161103741 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153825285 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128894605 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113513516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140213097 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.12882366 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12071582 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159122076 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139043019 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105374428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153906056 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1423521 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.102975049 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138466331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180406602 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144889729 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170640385 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175138761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107882606 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162527283 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163052442 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128391171 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15632093 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168626357 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112156174 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147253805 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103058524 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132803582 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175061895 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093612165 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156827441 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157519407 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158155396 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159184527 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103807573 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156712896 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139307818 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161268217 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10068632 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149144861 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154848148 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104322996 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125084598 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152918396 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122325877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147418074 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124581968 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138749816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179176931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092769294 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13128608 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282309167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155285279 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183824302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140350608 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10523623 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141890565 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142457514 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122201648 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156972397 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127765707 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102256627 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128670662 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160417393 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113675571 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155851312 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18516042 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328898626 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199870015 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134510943 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281694931 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111907564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153133525 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.119588575 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.100587601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141202782 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104715513 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143340814 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188269349 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176194809 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144515587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103003498 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125385336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.094458334 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132388272 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15978528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148884438 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127579249 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140325855 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085345553 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140787237 seconds)
  done (took 75.985459472 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144908443 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131378696 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145971476 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199615806 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165759107 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25008971 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208661488 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234639446 seconds)
  done (took 2.56077563 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090022473 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141846499 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.128403229 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132937925 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.114070919 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11414826 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300702297 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130827125 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.113043264 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118055417 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130977723 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114904711 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.528874612 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122672191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088383279 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109530298 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114078513 seconds)
  done (took 3.663846887 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.183974609 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475071056 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.022859831 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.192049836 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175433133 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.09141273 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708223786 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09156231 seconds)
  done (took 12.014380859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.122082181 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150600774 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.140054996 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.168129596 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.126920229 seconds)
  done (took 1.799324271 seconds)
done (took 116.689752789 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094480729 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12397663 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09537687 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125626793 seconds)
  done (took 1.512044119 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101217428 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.081053771 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113330917 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078759102 seconds)
  done (took 1.454454549 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190450487 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174728517 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402150172 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075735565 seconds)
  done (took 1.594224133 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111319354 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127867236 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101998453 seconds)
  done (took 1.433175877 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103664785 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097830977 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.12694344 seconds)
  done (took 1.41614797 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101140666 seconds)
  done (took 1.183739563 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107798367 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140281387 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109838147 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.140586863 seconds)
  done (took 1.586234056 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094112115 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096376121 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136569785 seconds)
  done (took 1.41281913 seconds)
done (took 13.046157786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103606219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.515115543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393957959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142742776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718389352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413023813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003416908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145926056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166450443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095457329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13948221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696582584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061834907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.442914729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.052525235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340802369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69638981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08855268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11564606 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089195267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014780562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089218908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089092842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116456517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668188053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421197807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089336124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368527234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088743527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124331808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376124606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116925025 seconds)
  done (took 17.059391762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095063093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175526873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107485352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125844313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096970476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121427712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093413252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089240628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180906843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124573685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106102206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120443214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.095403023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120029991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109472142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119925726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089734946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116858123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089688201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089572969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137086666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091724745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120347884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088614368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117322499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104270907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118177701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089896097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116995488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097139104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.094462053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1194484 seconds)
  done (took 4.647046415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141562572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18604119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134880451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12453264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179647908 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098843174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.204562084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147781759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189234526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089129337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134974626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092299528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152570842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096752993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140397648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092529237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117610027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0894254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115660932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090582648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108197257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117096254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088986145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117208832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089062333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131512849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089757991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117178976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089464522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124707087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092225471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117222122 seconds)
  done (took 4.994305202 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.094340806 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094207872 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133574524 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105485037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118802313 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092825945 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122143375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09117085 seconds)
  done (took 1.942675382 seconds)
done (took 29.727572732 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.108039271 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.099524877 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13777265 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101982457 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127920588 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104698621 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122538794 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100728614 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13445916 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104913982 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14154565 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.090296414 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090509252 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116659803 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102775641 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12297562 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.1023429 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.130333092 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109398243 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137720252 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090576431 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131755475 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099774105 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13495162 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104068898 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131779792 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.106068367 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126711234 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090811909 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090498824 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133207844 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11841584 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124967553 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104254305 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124829425 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095585576 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123645534 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095656092 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134936916 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100833891 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129767708 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101968378 seconds)
  done (took 5.866462062 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115065253 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.154031001 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117719677 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.119697105 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091425434 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.111834129 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115856695 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090928075 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114271785 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114309239 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.110909611 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080726612 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109900697 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076334344 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079209882 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107644195 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084099036 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.106294765 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080168628 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.0800876 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111434128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076064286 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082024994 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110324266 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078472278 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112380204 seconds)
  done (took 3.733406764 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097078811 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103913269 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139212991 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.173077283 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123755419 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12683831 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098104218 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137230558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10573234 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117013783 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091480275 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148110111 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107204667 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125225021 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091883915 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104085536 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132541036 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09035986 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124271498 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109091024 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134515041 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.098819677 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137473275 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099856711 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117460565 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091166314 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122613348 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099399107 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099363339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125902868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095209792 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120723187 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.090921639 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129748303 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101359068 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123183611 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10950441 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128619103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099359494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119104682 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096606766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093782502 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140025026 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165423879 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091866925 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125068242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.092818097 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099222208 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119040157 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106947519 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12838805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090120492 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120754239 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090939488 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09032625 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134221986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095710677 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120688328 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101482482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123845976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10108903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122935849 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103935376 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12397105 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095997222 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090587385 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119017421 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088099751 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141276073 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102404568 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163619358 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098771446 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125938925 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097884324 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125348005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095724014 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118571685 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104856923 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13203051 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093738992 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129087344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092501826 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092021765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13706529 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091819993 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119956267 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090438059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12456019 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092027591 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090966198 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133353698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092495738 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12114459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102689907 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118332384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090357289 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124319574 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.095189906 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116742934 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103333351 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123683003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089675613 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127944152 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090329763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092286627 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128252281 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093920832 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118501863 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094080385 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124568231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089348179 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121030022 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093173831 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090687129 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.12776197 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095771092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122400864 seconds)
  done (took 14.148437284 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22903965 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217952227 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192272864 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295317268 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10437819 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144599552 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213137892 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125321901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119787649 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158605414 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168827014 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.151794027 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171910843 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.188576095 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.176556594 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118503519 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110399241 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165483344 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21440599 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.264688191 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140383938 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098047394 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160452805 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157988473 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132621186 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099018471 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137114963 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102126085 seconds)
  done (took 5.673473126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106705097 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152539962 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09485005 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141910589 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115868708 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119269671 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093292692 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121149377 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103068193 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133764368 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089281832 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125696653 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096529794 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128966639 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091132863 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128239843 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099671191 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120005352 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092966902 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094021564 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13006941 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13679564 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097679742 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089411669 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129790204 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.08896801 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121401882 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142552287 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089889352 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141405322 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088042769 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098332521 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133737719 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090558817 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120357279 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092176084 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121500371 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091957088 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092402493 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11858613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089413886 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111189975 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088791612 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136682134 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096586035 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114104494 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096974262 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125015767 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091058377 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087543716 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122787781 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093368015 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123267739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09852867 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121118114 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091626512 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092651016 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119699064 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096548597 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122126513 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088395239 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096255732 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125221365 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122829951 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098958549 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094669663 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117415419 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092205556 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124254647 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096614068 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.121123724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097156128 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087462961 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12438964 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094534758 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125647145 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093071497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118005045 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089922236 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090350826 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108466381 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.091155826 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.109870393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093731997 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088537035 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.118256443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092230131 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126318185 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106594399 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120870118 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102466197 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121304158 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089045489 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12250428 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087381902 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093100452 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136038353 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140035836 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089740162 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117504504 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104912999 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.093090407 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119139009 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080228982 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128927789 seconds)
  done (took 12.492768473 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128721418 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.158007101 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094623943 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138604701 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128161608 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162840452 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104529593 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127846726 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.092180259 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.13901659 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096915972 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129737595 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090342035 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135914846 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127228226 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.133915729 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092022437 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135339298 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101231766 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170915986 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.115153745 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14631748 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113489768 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127044301 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095795826 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.137825826 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.131041204 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.137159798 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103368317 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14134414 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106397577 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158662891 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142661728 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098395066 seconds)
  done (took 5.372805883 seconds)
done (took 48.382914868 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209106549 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427049008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184910465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.087875813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.244595825 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.212988485 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197905313 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191161593 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.721601665 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183923515 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4330269 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.811954289 seconds)
done (took 60.024860537 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.212348184 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347177889 seconds)
    (2/2) benchmarking "String"...
    done (took 1.488996787 seconds)
  done (took 3.952152409 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.748217611 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.127728096 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445165108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186317093 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.185898999 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.480677365 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.902729751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.569490892 seconds)
  done (took 28.013650113 seconds)
done (took 42.044968998 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.189721533 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.248976155 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231525377 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173683008 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29742784 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218248476 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.482936809 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.431674319 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.19407443 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178679868 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.19420225 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190071564 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195987368 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.548450131 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189443848 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204490814 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.270280923 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.646129751 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.590648062 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196821237 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.197131681 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.213146988 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.207076567 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19010205 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202327299 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192587387 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187248441 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219355276 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.747452957 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188395235 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202012795 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.686678922 seconds)
  done (took 191.424127751 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.187761582 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.380133462 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.393795253 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.250939378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.874274696 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.388069079 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.327629982 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.94508514 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.205790288 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.188972075 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.434127848 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.189674071 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.509389792 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161221197 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219517016 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26697749 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.368632233 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.514988224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.22578429 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.346671316 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.192160178 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.390887809 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.323824564 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.414205395 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219034251 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.222446774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.19862712 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223228277 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.379245902 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.302067225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.198647386 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.230244999 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816472879 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044867383 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207787307 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.203311664 seconds)
  done (took 150.066510118 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190312297 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18995748 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190204631 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222950527 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190491015 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.75546159 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775103999 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.724937389 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.293111653 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.591523439 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451526236 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190804245 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284910111 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205889897 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191532279 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.191951757 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207672939 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218623444 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190437105 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19108031 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778011866 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209351919 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.268188984 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.366808326 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207055903 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22429555 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589610312 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191677664 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224014759 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523419977 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241202603 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191751066 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581865188 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.584335567 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305363815 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194281852 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224942636 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191852059 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.472217315 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192593228 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19285534 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195875351 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870536961 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197504014 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.758909385 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193821955 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.1365896 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.192704304 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192804203 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.300895517 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.887901364 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215326628 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192657873 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195855978 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.193176485 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193216298 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193976187 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225410051 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.250392146 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.310327823 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.194289508 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.196675184 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225743518 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193960672 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.241167791 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194900644 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.316885728 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258280556 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301992599 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782667313 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19936204 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29417346 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315996451 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.195415393 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195249313 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194584498 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194379295 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305441065 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194512991 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.610763295 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.370640006 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212670679 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.60344856 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296901066 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195772993 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607954251 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19987424 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194711761 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945869006 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293056514 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194834995 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19567032 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195362488 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.611837285 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781440674 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468871797 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200435487 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194797563 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.51499963 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19974381 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193928785 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.61953279 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.750647826 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.841748495 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196520147 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308070642 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3710223 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212052745 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193501504 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.581198439 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200257961 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253202725 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194891083 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592949508 seconds)
  done (took 364.021800331 seconds)
done (took 706.630858786 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.815843179 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.81283819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.923857937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.803654595 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.766542314 seconds)
  done (took 10.247794507 seconds)
done (took 11.372373696 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385426409 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384326933 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255646908 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385492936 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22795868 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402420048 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364656995 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215356608 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298857723 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275519475 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296777693 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247318012 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230754897 seconds)
  done (took 18.09649203 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50855918 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.516778132 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259574938 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506014647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23579406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504783312 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396244564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416565043 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41185707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210760977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208639765 seconds)
  done (took 16.30236141 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543308755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525043941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262836421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513374403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237381388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519339439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401013913 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42202419 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418216275 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209391353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207847963 seconds)
  done (took 16.385246929 seconds)
done (took 51.909244591 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.20373193 seconds)
  done (took 2.328289691 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244201034 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406867454 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228934995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21234163 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.205010357 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214159554 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213229095 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207347634 seconds)
  done (took 11.057313194 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200552623 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200090285 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203255606 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200450286 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199567465 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203093035 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200376262 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203206632 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202620918 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201932442 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20400857 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200287468 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203293844 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200717225 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204198003 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.203623373 seconds)
  done (took 20.356583678 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20317674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200713845 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200951597 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201529987 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201636745 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201148075 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202519988 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.2012811 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201421808 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.202365551 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202090199 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.200583572 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202537645 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201406565 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201486349 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.202779857 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20149068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20171959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206432325 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201783401 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.202595953 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20245254 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203312379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203167156 seconds)
  done (took 29.979657346 seconds)
done (took 64.848258246 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.811503288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.691273729 seconds)
  done (took 6.629822357 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.262567329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.26455872 seconds)
  done (took 3.656264228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205002717 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205092143 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206077522 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205496807 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20550402 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204535885 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205759592 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205500135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.205076811 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206020405 seconds)
  done (took 13.181359093 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.205649786 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205778698 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203341593 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205642249 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.205254485 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203689049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206009765 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.205496267 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206506078 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202144494 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205865393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203601181 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206191183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204213683 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206989849 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204110471 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203732617 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204690571 seconds)
  done (took 22.817277822 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219367178 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228078029 seconds)
  done (took 3.577532183 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334525832 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246863523 seconds)
    (3/7) benchmarking "month"...
    done (took 1.3137842 seconds)
    (4/7) benchmarking "year"...
    done (took 1.301553623 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.246441068 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225110522 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.245350486 seconds)
  done (took 10.042804055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.207341663 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393258382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.495674706 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832410656 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207666107 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.211660806 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.039950535 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.211032023 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214583025 seconds)
  done (took 13.942503976 seconds)
done (took 74.975674145 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.233609881 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.206239596 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.44221372 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.209293307 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221820428 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.499258967 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227384074 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.32757648 seconds)
done (took 37.498627881 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.220979142 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190943078 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.950322837 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.206586003 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.286946813 seconds)
  done (took 18.765444386 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223230354 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536861795 seconds)
  done (took 4.889863844 seconds)
done (took 31.007224311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209290222 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208353954 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.206243649 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20910042 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208496429 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.207185533 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206660119 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208243522 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210138928 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.20829273 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20697909 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.208658311 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208335043 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.206381183 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206404549 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205972988 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209943478 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208893188 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206044186 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205776205 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20705857 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208139331 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206999796 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206624185 seconds)
  done (took 30.115160019 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210073683 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208306985 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209439916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209791606 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207456253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210511582 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209879898 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207143714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209697692 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208667813 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206233611 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206770176 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209453068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207180428 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209233966 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206447247 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210459223 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205690282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208684121 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.206376823 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208341452 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20807593 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206820236 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209049225 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.208623424 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205895814 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208540143 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207935173 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209783404 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.205784273 seconds)
  done (took 37.378222994 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.214104283 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216505633 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211770768 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210269864 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.20890831 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210204656 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.20953164 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209933977 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20958171 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.20918203 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209419966 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210185086 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209735196 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209970639 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.209915964 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209837499 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210461845 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210403743 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.211616582 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.211348055 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210385859 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210017162 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209881139 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210164681 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210612923 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.210235733 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211566186 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210467313 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210517769 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21061214 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21004138 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.20994409 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210923178 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.210230041 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.210979241 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212203873 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.215571466 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218146611 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.210789357 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.212020304 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211600343 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.21136703 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.210978486 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212157256 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211090398 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.210747463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.211851768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.211241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213207015 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.211203787 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.21098441 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.211494411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211645567 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212766074 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.211704634 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.211130414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212112413 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212059007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.212993653 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.211849059 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.211862746 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212976317 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.212529831 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.212236805 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.211545173 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2113949 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.212578974 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212153567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.212988148 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.212923417 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212314952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213151945 seconds)
  done (took 88.355231842 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214155362 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210220753 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209865674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210396213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21020842 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217484505 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210413871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213547178 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212262805 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213290209 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212716161 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211901295 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210416424 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213720146 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213023102 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211322692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213235723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211108397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.213960168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214277816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214869312 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211417692 seconds)
  done (took 27.809489595 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213698264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215245159 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212974284 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214957538 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213551133 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216545498 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214555114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216503613 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215118159 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211918209 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212574771 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214504347 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2137927 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212245246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212419788 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213657823 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214798708 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213692111 seconds)
  done (took 22.989172746 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.213019051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213026819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215005805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212905249 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21375904 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215875545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213382843 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215702536 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.215861798 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214232456 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.215978597 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216354807 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.216381524 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213688133 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216244698 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213798203 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216296711 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214330559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215794797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214232035 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213886692 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21703218 seconds)
  done (took 27.864349469 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217792904 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216141086 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.214079529 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215091559 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214471954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216784661 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.217344529 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.214453727 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218127952 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217933337 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214353521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216828142 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217006601 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216125324 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215159853 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214827954 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217769281 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217091403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218297571 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215276791 seconds)
  done (took 25.463324887 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219808967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220245101 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22051362 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221265847 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220455064 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221099434 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220041259 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220995217 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220832062 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.22081729 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221670066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221417634 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220682849 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221002754 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22096131 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221779738 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221014853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220642997 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221861947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221430184 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221685813 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221430234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221684697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22127042 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221211339 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221592419 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222034028 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221639498 seconds)
  done (took 35.331240969 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219582504 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219875201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217566401 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2173878 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.217819677 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218438715 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.673813495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220292311 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221426274 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217926374 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221443545 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221258188 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220442076 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220564233 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220208781 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.220602146 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220903137 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21965445 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219759754 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21988096 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222792823 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221314146 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22233579 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21923151 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218970448 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22215189 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220117611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218820509 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222699454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218746607 seconds)
  done (took 38.199136889 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241770845 seconds)
    (2/2) benchmarking "in"...
    done (took 1.240939216 seconds)
  done (took 3.625038988 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.218999312 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222133052 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.221784691 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220236491 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219337192 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221775108 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221853888 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219646616 seconds)
  done (took 10.909380833 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.221485367 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222215851 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22251986 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222202601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224473132 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222282413 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229594186 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240587984 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.222882766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.223925235 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230617814 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23035399 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.223956254 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223200621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222404551 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224769659 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224076583 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224986068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224770415 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223657801 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225292013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225018798 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224683557 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221092321 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225654012 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233588147 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.228021892 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224486734 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223540078 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.226842231 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223929656 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.221422459 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225400785 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224955058 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224530996 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226068973 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234380233 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245315501 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230593491 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226230267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225583804 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.222293293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224910686 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.226326013 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225867588 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22587862 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226467098 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223768141 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224276639 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.228983204 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.231194865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224579336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223661613 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228168135 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22637153 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232144777 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246057865 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229543518 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234702892 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236446603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239998936 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248463552 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228152024 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228327779 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237243142 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249364251 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233990786 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24136651 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225169652 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.227169486 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233397152 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239275425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.251501963 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228400066 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231605016 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.226858452 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227136333 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227271959 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23566457 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.246777031 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228726509 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228905819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236987952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24977268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.226020674 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228244743 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229658473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228811288 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.228270962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238843932 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24768 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228489507 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227010987 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.227919942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.229220022 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228454024 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.226467793 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229172001 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225248603 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229107141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228918819 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232287229 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.236608148 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229667754 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229495888 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.235073832 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.228667555 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228398101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234913052 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.228669797 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230149711 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230870952 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23402722 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.226664838 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232326328 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.236828161 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230084423 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229133339 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.230309338 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229726956 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239712657 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255512397 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230738843 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229592966 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23502695 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242967598 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231995793 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.231903647 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230802807 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22712393 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228055543 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231034657 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230595359 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231042876 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231706027 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230587658 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228006465 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231031442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232697599 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232359483 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230512816 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232231349 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.232089005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23326978 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232535081 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232931406 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.238113141 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.230463941 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23215608 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.230909111 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.228656431 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231603502 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231405599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232793502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.230775626 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23233677 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229913784 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233096877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232590162 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231723025 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230889942 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.232414009 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235129583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233522657 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.23580543 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231931774 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230465322 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.232112959 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233017987 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.231347053 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23337947 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.231189145 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.235783445 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242120252 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233459853 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23376416 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.234737735 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234625427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234986649 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234966565 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.236014973 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.240741149 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.23470403 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.240808787 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234556631 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235012274 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.23451733 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.234104155 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23338819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234679334 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237188091 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.241310061 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247071561 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25744219 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234741886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238293513 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235381884 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.239512057 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237963273 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235060042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235922258 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235961085 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234025809 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235411673 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236274851 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235970856 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234077976 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234900265 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235011256 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236662009 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235714165 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.23481074 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23632657 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233090063 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235558385 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236779917 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235509179 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233129533 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235531541 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235808256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.236191545 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237425011 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.242533057 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.234104706 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237176614 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236746168 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237138753 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23549599 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.236129394 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238777182 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.236355121 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243818467 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.253770384 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236303351 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242748122 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255752572 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235662828 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238266033 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.237275189 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.234566121 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240998062 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.245071757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237393859 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238742537 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238874977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237146507 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237642074 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.244136933 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.235960933 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236407934 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.238173089 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.238149562 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.235569725 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.238709094 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.238417783 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23849171 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239743128 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238213667 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240210414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239545491 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239383135 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.239777025 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239646475 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241536422 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.247163259 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.243453185 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.238517979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.240556078 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.239709637 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.242734451 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.238656145 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240978641 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.2386471 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252008678 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264734591 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246281479 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24035617 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239159111 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245790453 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241064751 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.242779107 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240524315 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239810056 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.239783554 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.240040535 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237239783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240126585 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.23976466 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241175518 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.241897883 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24527633 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241460692 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239197339 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241303731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242048566 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240800161 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240475363 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.242037796 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.243710303 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242130582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240312349 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241511314 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248270117 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258722214 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.241455667 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.241009065 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.241428672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240595512 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242303482 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243100072 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.245826594 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251152896 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.2452489 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.249736469 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.243247857 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250354264 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243847422 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.245572078 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251220294 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241125334 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.240632243 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.241555695 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.24398415 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249842528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26183624 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.243380209 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.248013853 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243675451 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244816943 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.242807605 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244357557 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243082806 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243768357 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253061909 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.265101799 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.247025473 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243781403 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.240374175 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24495691 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.24365329 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.242897681 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245590715 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244182894 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243419414 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.2421972 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.242356737 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243650018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244836406 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245254611 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24146164 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.244394839 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251175869 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263239508 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249927651 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245092271 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250810096 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24546845 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251865969 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263848448 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.243854951 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24622328 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244314842 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.245568307 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243994938 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244743429 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247026305 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247435518 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24964717 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246762383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247159512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244123622 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.247806291 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245580871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255834259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269558084 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248282884 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250302003 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244395302 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.248006523 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251468419 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247786105 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244837478 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.249843461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256118205 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254959711 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246188026 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.247510939 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246261882 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248498663 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.246663934 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.246651397 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247958389 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247000897 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246489055 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248821589 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249678225 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.24682826 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24568537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247230201 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.248013531 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.257909068 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.248663911 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248568704 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248449461 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249058971 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.246938894 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24709215 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249654754 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247451775 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248240099 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249813977 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254996152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254455539 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249724555 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248902044 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249415705 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.247572851 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.247555449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250101284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.249781521 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249810668 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.248928252 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249074281 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.248652078 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.247348485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247698248 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249074019 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24974722 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252138152 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255785721 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247946374 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247172656 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.249323988 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249227654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.247793567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.249620115 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256075695 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25336414 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260910696 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258995023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.255180721 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248909843 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253702434 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257644452 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.249308142 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.249433166 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251062018 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.249973522 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.250585803 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25284192 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251146344 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.256451326 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.24982158 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.249908616 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259547266 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271529566 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251277655 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254012396 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256323983 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251749596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249040337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251295255 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.250983888 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258472226 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.269578742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252542741 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25379208 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.251702466 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.254788124 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256906475 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252460515 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251393927 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.248767566 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251769899 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253137249 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25248263 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249757788 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251282275 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250991913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.255502827 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259012394 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250346115 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254047187 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.252448611 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252681876 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254091925 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252681288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.249841898 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250142927 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.252202978 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253426478 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.252775438 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254143031 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.25212152 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.254581137 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254766903 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253115558 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256801268 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262686684 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261024681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249926393 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252738685 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252852913 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.255420336 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255075536 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256104763 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254409113 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.254103393 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25349935 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254785405 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254576415 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.257756867 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26909337 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27554412 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254276004 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.254743201 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255921691 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254828058 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.251644799 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254068836 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.25548628 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258145529 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264220334 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256652726 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262372567 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274500703 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256171947 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259678148 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258674061 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262538302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.25767375 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256109071 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257786986 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261059296 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271538777 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257246099 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26647247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286882762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274026547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256935009 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256877714 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256211977 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258212041 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.257936282 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259234888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257507176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256623044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258499223 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258578458 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261681508 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257065856 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257611633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257836311 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256337362 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258512103 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255081821 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259078727 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257946196 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.258967881 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258302329 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258390182 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.257665503 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270246048 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282905709 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25889061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259477754 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255222169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260587821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26110289 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268799146 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.266093683 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260060211 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.259126086 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259372827 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259302114 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257363081 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.25898279 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257695177 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258931781 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.256964608 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270359256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283725328 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263761762 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259075898 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260053651 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259730768 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259444042 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260260886 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260605322 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259842326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.261625677 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264932106 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.26053993 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260129397 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.263417113 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.267772647 seconds)
  done (took 742.345915492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257903962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258313733 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258078553 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25772524 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258037373 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257699502 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256992197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25816913 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257491203 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25815075 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257687518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258015044 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258170809 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258326993 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25844514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258272651 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258861597 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258250149 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258877187 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25920879 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25968774 seconds)
  done (took 27.60083642 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.261345095 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.259969287 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258420059 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260562716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258169202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261689771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.259419416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260957407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260849274 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258865261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26105734 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261431801 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259365171 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26016373 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259318406 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262180477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.262466614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259803095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262401562 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26013697 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262662129 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259899409 seconds)
  done (took 28.910395349 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.265175916 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.263835249 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262899662 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260001495 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.262970095 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259983852 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263947264 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263412913 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263713697 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.26300313 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261732896 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264853462 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269986805 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.268120157 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.2641789 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262359486 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406588994 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.264733588 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265252445 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265441322 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260754792 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.269761107 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.261647454 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.261565244 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263027392 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.265377263 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264472157 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.264182466 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265043461 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265339946 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.269619762 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.264944949 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264645782 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265335477 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.26420698 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.265407931 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.269017055 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.266001237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262553046 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265533798 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275773116 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.285569177 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266876122 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27159455 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265732494 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.264866521 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269347258 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.274772176 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.263227757 seconds)
  done (took 63.340859081 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.265493096 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.265619651 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263300218 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266022977 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.265735044 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.266972038 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26691604 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267626309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263384692 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264285643 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267255793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264214407 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264626611 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266311923 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.268341345 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264561284 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263898012 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265603271 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263751478 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264015007 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265049392 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.268387307 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.26690796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.265663577 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267172112 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264942408 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264578367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267217422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266046544 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264829998 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.267981117 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267933606 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267945821 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265516469 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265027262 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268370719 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.268286114 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.266634239 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267919297 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26558155 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.268380312 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268355449 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.268089787 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269053192 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265734663 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.266891137 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265658887 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265842901 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.266630891 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268628616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.267892996 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266059182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269546301 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266674836 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268844462 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269165131 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.266031423 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26591587 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268445729 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266511696 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.267032182 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268876765 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.267431593 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26920259 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.269161407 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.267107845 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266523781 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270280843 seconds)
  done (took 87.319426432 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271700952 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271917855 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271121496 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271483991 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270998314 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271798219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271284603 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.271254822 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271407157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272589968 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271900721 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272600348 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.271410907 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270667688 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271664041 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272592325 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271343408 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272260058 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272597138 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272765936 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272202619 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272013886 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.273239274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273809224 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273950365 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27274853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273491757 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272718012 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272747687 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273920516 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274560906 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273455672 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273496051 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273373431 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.273975901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273443869 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273182797 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273158085 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273724755 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272925243 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272681303 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273639756 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272619862 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.273471417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273355096 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273744674 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273637691 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274963844 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273257005 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272972169 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273540977 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273770457 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274433137 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273392162 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273186307 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.273882872 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274284566 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274789492 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274078855 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275217005 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273819898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.273456621 seconds)
  done (took 80.113061686 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274540544 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274255923 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.272162831 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27118421 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273955234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271975806 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274466298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273342267 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275357859 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273605105 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274796226 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272637488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273533194 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275584661 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273389285 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274442032 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273006533 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272410679 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274774838 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273400102 seconds)
  done (took 26.664370092 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.271686021 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275567562 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271864493 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272272256 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.275515382 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272054394 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.275461323 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275977796 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272409422 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275629988 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275868038 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276258475 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272889779 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273504719 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276133898 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272999508 seconds)
  done (took 21.577370271 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274149986 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277376272 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277350543 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.277125529 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.273352044 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274750731 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.2767723 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27320691 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273898427 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.276648048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277386204 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.276874867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275690751 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278733756 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.273507543 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276827756 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.275208284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27538281 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277752376 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.278478723 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275192615 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274818679 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.277636346 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.276878268 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.274406549 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275414454 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.274233738 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.274148352 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.275002998 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278164607 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.275091865 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.274917174 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274972341 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274811675 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279803839 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.275701083 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.277620204 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277515562 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.278767521 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.27797407 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.278778477 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.276105106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.278215114 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.278231101 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.277069598 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.278523467 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.275425329 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.275247933 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.275896864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276852899 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279125862 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.279530014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.279523166 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278972246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280070677 seconds)
  done (took 71.404766472 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279411808 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280170758 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277274664 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278326136 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278989206 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.277531123 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279638595 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278193442 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278042287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2796732 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277344972 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281850054 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277371682 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279438742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277860367 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281002246 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278790376 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277555565 seconds)
  done (took 24.214489347 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278950886 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278880052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28107663 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278698578 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.277715483 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281505886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27785369 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282261936 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28130352 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.278544667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278192908 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.281309887 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281408751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.281250173 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278893183 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279478654 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.28390196 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282108818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279358911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27912539 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282979301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281145091 seconds)
  done (took 29.363745174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.281368678 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.281070465 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.281445739 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.297767345 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.301599739 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305064751 seconds)
  done (took 8.946085482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289320709 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282390253 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279455504 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283355115 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282801613 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280367438 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280282116 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280553626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283500994 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280350363 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280624349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283077082 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283097929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280269343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283142042 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283312603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281653524 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281663269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284711794 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282849333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280741578 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283393628 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280562127 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280928959 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281045165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280809004 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283906046 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281385974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281098309 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284904704 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284080129 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281803769 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283544123 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282094174 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285117527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285699539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283371908 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284323071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283931129 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281731786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285414307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28432832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284422284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28297381 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284496315 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283383853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282837737 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282416243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283397123 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285595245 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285691218 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28279036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286562758 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285265123 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285884006 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285816406 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28276308 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282841891 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286218338 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284438719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284190321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285280947 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283450964 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283346083 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287586554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282841953 seconds)
  done (took 85.918076482 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284243757 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283323555 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285155448 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285595537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283052819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285153648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285529438 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28486526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284155689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285239218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287068728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285272155 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285889485 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284719676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284663289 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284964804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286004645 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286656818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284807871 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289193328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285032638 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285200284 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285857485 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284823396 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286095368 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287862324 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286118809 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286024378 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285517132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285420045 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285283382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286280102 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285341004 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285505423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285921663 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286253664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285747856 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286602522 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287020748 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288565184 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286551724 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289085861 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286167852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286874815 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287727078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286012656 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287628615 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286918182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28768488 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287741677 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287461374 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286879346 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286415883 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286068511 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286529218 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287909905 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287167095 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288001566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287230332 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290503713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287951334 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288655733 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292140214 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288130404 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288671145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289434222 seconds)
  done (took 86.112300136 seconds)
done (took 1733.003212555 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452575347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406105652 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289920134 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.286882395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29022157 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.313421217 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.295177841 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289284459 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289602973 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289347892 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289534824 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477078892 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.342132992 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.29107647 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290605748 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384300342 seconds)
  done (took 42.485188964 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318436602 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.29665123 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.411191661 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31252169 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319512849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.48281589 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35495578 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.2951386 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.469459259 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335012078 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.881223777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317548629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29581002 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.424985609 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.31445723 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.484604434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.542480821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.885634039 seconds)
  done (took 29.950657176 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.753305472 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.314858202 seconds)
  done (took 9.276129174 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316626127 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295958447 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295823791 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293878126 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28681278 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.287602778 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.295534671 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.30309095 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.052880369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430481891 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303380585 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306733161 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314506955 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29726225 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292984206 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332275522 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.44753727 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.294616406 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292228079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300866483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295134216 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388994023 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337481112 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294447494 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425765 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.073719523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.305196075 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302455943 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.431119546 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.295143652 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.29547119 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296953264 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.299303772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.181976766 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.814351355 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.297075204 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322113983 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305062357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.295225653 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445987471 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29966972 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302982672 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.290295455 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803060038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448875103 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413946751 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.621361596 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.305435051 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299796914 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.361562161 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.30555242 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29932183 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.341930359 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.111270834 seconds)
  done (took 110.171526363 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.308862482 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.68066982 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458550287 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308087972 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016884496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982268299 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313199544 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.591288125 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.330953033 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292991214 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582880371 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825669234 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317633483 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.302923913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.483419316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353418831 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291994213 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.077165099 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315444212 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.293712388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796815447 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306697782 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300220883 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.474974757 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330008828 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753742356 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.733823922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.717233336 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3182926 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292845205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762386208 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316620391 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.364848256 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296062706 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.563436322 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663240784 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635274604 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.300999128 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336886448 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294338748 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.314592331 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748003702 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640555708 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.295117412 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301846367 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750874441 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.294822729 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300068603 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301377417 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49408095 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.942181692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293666656 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.742128276 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302086336 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.563263096 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37519055 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386855565 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783770067 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295494095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.355489492 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363009647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295226338 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30199514 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295276392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297860767 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647005862 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.532815518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299465421 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.646993992 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.759317767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317206056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826708938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.132091951 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306225437 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.360027866 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296378169 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.870694131 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791273206 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334246952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296494756 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633758356 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.296358106 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.587564123 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318021335 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296674404 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823360806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.309173589 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.348357833 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.299379268 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301908026 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.959287057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297811528 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.590730448 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.33288211 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297004737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.297431686 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.332202568 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296741226 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296930868 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.301267142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.823885653 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.317908462 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.42956764 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317870184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298019117 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306096275 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.300621274 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297859447 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514419474 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.902796684 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322780985 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298391341 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.298307509 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307431226 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.469694041 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304802151 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.609731789 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.298323525 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299838866 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315321896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.915925182 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361931676 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299583396 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.319001809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.215352661 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.508602628 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317974496 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314754074 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306534851 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.29923207 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.546262002 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31884485 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.35776646 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304107256 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005489096 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345976333 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.301375919 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.570549344 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300232096 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.168257825 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324895157 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30005741 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585979041 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.569433854 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578715446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303564409 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.316990769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.984357009 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353463792 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446335103 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317933537 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.343642097 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496621759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.434119078 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299696838 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.895587567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299829473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512320656 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300728219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599311178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791668098 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317642242 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304087784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.012119764 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032566034 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.984935985 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.304765256 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.57885941 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.272389079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.780963386 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.301078692 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301478267 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.789412998 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305446691 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310698884 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.302366154 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.301957963 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444247885 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475543558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.478286517 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306857885 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757978627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307060486 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311871962 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315313554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305744104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.655073446 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391882945 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.306952248 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.3211833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.304665426 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304669655 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776202541 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.128196352 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.304947066 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454164941 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937592936 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.322036577 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305053268 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.041581423 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.991796413 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.818604543 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.36023401 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.618075384 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.311754941 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.342829059 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.904629664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388234428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780871306 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305825738 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.30402715 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903629516 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.322106814 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.362695447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.300357785 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308013263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.846623537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321952206 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.308282662 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.552691775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323264906 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556946334 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.304391104 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.348551615 seconds)
  done (took 1103.088308924 seconds)
done (took 1296.179044942 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.315593662 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313068928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.29881954 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313934731 seconds)
  done (took 26.467093943 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.31709472 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312631461 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31370622 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311434174 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316991828 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.31249775 seconds)
  done (took 9.110418021 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.352289177 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314134445 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311750149 seconds)
  done (took 19.204792391 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.520407457 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.605430442 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.646150873 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.529811948 seconds)
  done (took 10.528937583 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313645056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31389461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313526548 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.317280682 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317830817 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318269093 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31855275 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317745416 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319189035 seconds)
  done (took 13.073714728 seconds)
done (took 79.612035834 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.21539246 seconds)
    (2/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.149745523 seconds)
    (3/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.688316365 seconds)
    (4/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.291921286 seconds)
    (5/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.67020436 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.253104475 seconds)
    (7/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.414974154 seconds)
    (8/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.134354073 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.607566908 seconds)
    (10/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263560072 seconds)
    (11/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338617576 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.347333123 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.306023949 seconds)
    (14/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.301696076 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355980399 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.292938107 seconds)
    (17/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.996430171 seconds)
    (18/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.565673829 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.300649043 seconds)
    (20/286) benchmarking ("sort", BigInt, true)...
    done (took 6.314400364 seconds)
    (21/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.6358521 seconds)
    (22/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.391054135 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.306407235 seconds)
    (24/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371071184 seconds)
    (25/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.429173842 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.317209246 seconds)
    (27/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.327023248 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.309321918 seconds)
    (29/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.920226881 seconds)
    (30/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.320919163 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.335289375 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.25071365 seconds)
    (33/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187572769 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 6.307277664 seconds)
    (35/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.307108529 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.212528383 seconds)
    (37/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.550110526 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.417905925 seconds)
    (39/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.839436049 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.107003507 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.391753265 seconds)
    (42/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.265395716 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.850704872 seconds)
    (44/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.318300923 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.038950651 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.790414301 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.822095704 seconds)
    (48/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.299146386 seconds)
    (49/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.505558596 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421788604 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.711032252 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588111426 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.327155564 seconds)
    (54/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.771058297 seconds)
    (55/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.675544368 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.137996199 seconds)
    (57/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.425161298 seconds)
    (58/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.310208098 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.436619766 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.366994779 seconds)
    (61/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.125863834 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.418742236 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.01660004 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.786129928 seconds)
    (65/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.34162005 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.419815403 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.339356333 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.115242411 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.183180787 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335568915 seconds)
    (71/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.297433735 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.462004529 seconds)
    (73/286) benchmarking ("sort", BigInt, false)...
    done (took 6.334798696 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.720835021 seconds)
    (75/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.684828323 seconds)
    (76/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.314551899 seconds)
    (77/286) benchmarking ("sort", Float32, true)...
    done (took 6.317525162 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.523930509 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.230365046 seconds)
    (80/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.313518755 seconds)
    (81/286) benchmarking ("sort", Float64, false)...
    done (took 5.624192739 seconds)
    (82/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.314753861 seconds)
    (83/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.299361807 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.531947073 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.298541423 seconds)
    (86/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.975258764 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.304180645 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343874454 seconds)
    (89/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.733418604 seconds)
    (90/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308408346 seconds)
    (91/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.574392919 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.312759898 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.624101347 seconds)
    (94/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.299489572 seconds)
    (95/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.29893293 seconds)
    (96/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.375227652 seconds)
    (97/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.298206008 seconds)
    (98/286) benchmarking ("sort", Float64, true)...
    done (took 6.336209387 seconds)
    (99/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.31375283 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.541739662 seconds)
    (101/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.178954542 seconds)
    (102/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.308589331 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.377339059 seconds)
    (104/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.4311533 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.722264854 seconds)
    (106/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.045661089 seconds)
    (107/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.316529736 seconds)
    (108/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.078010474 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.943886712 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.325872623 seconds)
    (111/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.833443258 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.305598285 seconds)
    (113/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.95074653 seconds)
    (114/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.397537345 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.375218757 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.82842387 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.336294678 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395269683 seconds)
    (119/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.760486225 seconds)
    (120/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.62164635 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.593528819 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094149213 seconds)
    (123/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.30546883 seconds)
    (124/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304630669 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.621410134 seconds)
    (126/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.301306338 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.211648791 seconds)
    (128/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.314560942 seconds)
    (129/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.417207359 seconds)
    (130/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.651469877 seconds)
    (131/286) benchmarking ("sort", Float32, false)...
    done (took 5.324180714 seconds)
    (132/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.746590603 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.313929673 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.567396711 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.301801442 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.452464118 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.338240134 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308899663 seconds)
    (139/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309923789 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.317883 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.127072519 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341404185 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.37304501 seconds)
    (144/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.337947009 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.823008141 seconds)
    (146/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340865863 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.671865396 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353385208 seconds)
    (149/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301446635 seconds)
    (150/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.301987629 seconds)
    (151/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.447471269 seconds)
    (152/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331628268 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.970019179 seconds)
    (154/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.96252176 seconds)
    (155/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.309057573 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.848635484 seconds)
    (157/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.350577269 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.463270517 seconds)
    (159/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.288444104 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.432425264 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.396874264 seconds)
    (162/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.201387798 seconds)
    (163/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.339971532 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.324471451 seconds)
    (165/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.376263074 seconds)
    (166/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.426603293 seconds)
    (167/286) benchmarking ("sort", Int8, true)...
    done (took 6.31583136 seconds)
    (168/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396549333 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.316257979 seconds)
    (170/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.950295248 seconds)
    (171/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.304944978 seconds)
    (172/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.602636794 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.348999045 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.315470429 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.407139656 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.099550603 seconds)
    (177/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.569340857 seconds)
    (178/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.359966948 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.357931139 seconds)
    (180/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.332719864 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.435035836 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317759156 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.313023404 seconds)
    (184/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.719751268 seconds)
    (185/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.318586348 seconds)
    (186/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.429939038 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.367611453 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391543363 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.305393025 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346181199 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.30458084 seconds)
    (192/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.313195578 seconds)
    (193/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.443089879 seconds)
    (194/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.823536238 seconds)
    (195/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.956986349 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.327471616 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.309014887 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.526972231 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.676430505 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.880245498 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325245207 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.266146646 seconds)
    (203/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101679667 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340285275 seconds)
    (205/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.921473382 seconds)
    (206/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.354351835 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.325892882 seconds)
    (208/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.539803837 seconds)
    (209/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.926319978 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.360535482 seconds)
    (211/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.333197341 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.065410356 seconds)
    (213/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346249334 seconds)
    (214/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.306614146 seconds)
    (215/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.596060499 seconds)
    (216/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.510975636 seconds)
    (217/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.306039476 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336060334 seconds)
    (219/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.777244846 seconds)
    (220/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.748754645 seconds)
    (221/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406981813 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.428123868 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.320350906 seconds)
    (224/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.190434524 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413572813 seconds)
    (226/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329943692 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.099666687 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.969400417 seconds)
    (229/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.335166442 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.450819396 seconds)
    (231/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.554584365 seconds)
    (232/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40828707 seconds)
    (233/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455911562 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.536231648 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.827299449 seconds)
    (236/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.322415122 seconds)
    (237/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.38505043 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.347132682 seconds)
    (239/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.511540351 seconds)
    (240/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.710154166 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.337392119 seconds)
    (242/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.35021574 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709551199 seconds)
    (244/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.307968944 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.975969049 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.48457081 seconds)
    (247/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.689591543 seconds)
    (248/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.539554811 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.982480727 seconds)
    (250/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.347250471 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.231980644 seconds)
    (252/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.373618692 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.189146321 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.562542751 seconds)
    (255/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.72847729 seconds)
    (256/286) benchmarking ("sort", Int8, false)...
    done (took 4.356057578 seconds)
    (257/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.452252333 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348312147 seconds)
    (259/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.32247253 seconds)
    (260/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.987881974 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.412371452 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.406410276 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.30893258 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.433282438 seconds)
    (265/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.553249205 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.286394098 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.12667309 seconds)
    (268/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.844729494 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344967562 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.364866572 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.331763574 seconds)
    (272/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351005163 seconds)
    (273/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.3103022 seconds)
    (274/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338774681 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.382636793 seconds)
    (276/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.618294042 seconds)
    (277/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.316774333 seconds)
    (278/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.310082372 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346183805 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.919807355 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.152948176 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.739322003 seconds)
    (283/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.985705202 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.228071293 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.737796486 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.966214023 seconds)
  done (took 939.490924273 seconds)
done (took 940.71801024 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357257332 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353703759 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.33513841 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.355981494 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.446491027 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.510951394 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.345253226 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.336625739 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384034509 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384740647 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.334735398 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.51029865 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337874897 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336060785 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334958185 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35134524 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.46141965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.344726498 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.352873439 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.34611769 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352699764 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.334501104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.38606937 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.510573296 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.340377352 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.339474102 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.338891178 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.355013217 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.447547727 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.339608689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338973259 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.349120936 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.459500262 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343294543 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.331004123 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357184853 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34735058 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.345563573 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340712378 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.36962452 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.828694886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338106564 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339657219 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.338420643 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.338565817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.342526399 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339135598 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343632337 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352342552 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352797726 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.823798369 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.353602988 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.342184513 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.339136583 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348487214 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338631864 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.341373807 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357775792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.358646409 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35771356 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.398359479 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344394076 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.340137611 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.35567945 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347447592 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.860271672 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.334771224 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.343606388 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.837480793 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.345015431 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.863579086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349156545 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341685897 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.354130862 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.372200455 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.460901493 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.342579029 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.339587832 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.347512401 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.338997356 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.350318435 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35409213 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.346007822 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.339909914 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355902642 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.515650846 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.350354611 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34152669 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.349212453 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.361336447 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.348839994 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.351544052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.344250962 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.337655919 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.350012113 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.343563185 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.344830135 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.344549033 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347179796 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352933417 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.836304706 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360978501 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.338815675 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.338837965 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.341183855 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355199495 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.837946622 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.341954387 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.363771153 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.389599462 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.344040578 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.425106476 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.35330146 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361259651 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.351427326 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345288624 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.338752596 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.407840434 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.833179782 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.35822948 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.344018123 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.340798518 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361028546 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.345064984 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33919289 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.422101296 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344703636 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358573047 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.465306562 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.353339623 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.37462215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342786611 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.347060551 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376111708 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362398683 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.375026265 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.346362219 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361354565 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.35961983 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.341701774 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.354736918 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.354032022 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34629403 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.349947411 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.338405725 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377548854 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358905353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358956679 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.366600922 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.465274569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.341611441 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.408406669 seconds)
done (took 228.025405753 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.40436918 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.334427294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435704913 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341378447 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.441596885 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442043912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.339233775 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339596523 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339290192 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.719465747 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339342849 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.33978961 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.337597076 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.340104966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426124114 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343786439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.340657163 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.685515853 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.343372229 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412816237 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.340881803 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.339795739 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342229267 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.723645354 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.339232006 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.341360601 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413897761 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34315559 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.686734377 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.338899354 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.337689029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.688038876 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.433554021 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359736036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353328337 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.351638989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444923413 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.361462403 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.425659749 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425466756 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.437682454 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383430651 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.337990707 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.339880069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346511591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.347042962 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342445192 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370561532 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.342405609 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341616239 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.686709672 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.354313108 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.341233116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.34247089 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342271587 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374280941 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343083407 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346491733 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434687865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.346174193 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.40731893 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.725415796 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.723663365 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346501093 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.347008665 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.342300053 seconds)
  done (took 149.085229134 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413227871 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41747187 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.460786462 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.346576592 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.395639363 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465612569 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352418965 seconds)
  done (took 11.108106342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351865505 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346160273 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396818909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395715107 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.347089509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525829398 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347111528 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357120283 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.343428513 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.397673781 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3514428 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347853068 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354374312 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345929131 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394513799 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359081292 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462077817 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.348693998 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.349277054 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.497630186 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345127934 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.355040238 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399006081 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358036736 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352370877 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.353868862 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.166712422 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349266001 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344544455 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347710873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345288903 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.421697882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348847574 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.347084234 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345879858 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463304388 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349779726 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345345425 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.348036113 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.3470486 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348315262 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348854723 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.348777569 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.3457966 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.348649242 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372550283 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349305061 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.34923123 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.348511231 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349017165 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.4008881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350341836 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347079811 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347464668 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.402517561 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356544631 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.352189902 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.347258801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351015025 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347911801 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50073981 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397323094 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.350373638 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39865051 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3512105 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351540901 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350089409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.350391084 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405591725 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.351278462 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39886307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347534411 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530281972 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374695431 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352169003 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35377934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353748423 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352492831 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.348742291 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.357488004 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.34944267 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351777967 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356402747 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348884924 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349002535 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.517121189 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457245163 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349077776 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.364058493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357096186 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349037439 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.407663856 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.35221131 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349275543 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403905938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467129773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404893988 seconds)
  done (took 155.137092996 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356659904 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359363978 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.35439291 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375229537 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353042973 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.352783287 seconds)
  done (took 9.414420128 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355379185 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354679933 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.353519023 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353732923 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352546767 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357432414 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35406651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355237621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.357659596 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353980824 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357049808 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.357522092 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359100304 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.355401314 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355231296 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.354201669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.355415136 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351823378 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.353123876 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354694741 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.450336862 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356079951 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355988392 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.35555944 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363199583 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.355229568 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362434137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.354094513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.355994715 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.363006478 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375513764 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359228888 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356897816 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361050369 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361511288 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356564752 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359296362 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357523345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352741369 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360012125 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359352495 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357750469 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355175536 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.359119185 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358240091 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36007904 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363205171 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363746873 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.357026175 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360016947 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359052755 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355248053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360635467 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360322412 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358877171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377658929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364357838 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.35816796 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.357018442 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.358388497 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.358576225 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361156877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358952707 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363024735 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363888915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360147955 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358632407 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362075292 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358709763 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358467165 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36074319 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355501401 seconds)
  done (took 100.162766306 seconds)
done (took 426.160819361 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.440012457 seconds)
  done (took 7.708613686 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.465814408 seconds)
  done (took 7.736662685 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.747981239 seconds)
  done (took 23.021774739 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.414184837 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.402243423 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.376917586 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.354124417 seconds)
  done (took 26.815942649 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.386688284 seconds)
  done (took 7.655093267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.360569162 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.361031494 seconds)
  done (took 13.991669361 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.426214606 seconds)
  done (took 7.694076319 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.041314408 seconds)
  done (took 8.315407217 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361573711 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.369821473 seconds)
  done (took 14.267859036 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.352498592 seconds)
  done (took 7.621853288 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.744332629 seconds)
  done (took 12.015832993 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.359419551 seconds)
  done (took 7.631588213 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.436974037 seconds)
  done (took 7.706931218 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.727972662 seconds)
  done (took 9.998662998 seconds)
done (took 163.451983174 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.354348763 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.360786829 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361531617 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361579736 seconds)
  done (took 26.709275004 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394982195 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394043568 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396194507 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404832445 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398214722 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394869724 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387531709 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38833076 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.406571551 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397522758 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397339923 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.396900527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395465105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.387634556 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.398310219 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396717813 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406204683 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.396785421 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387252745 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39918901 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36365198 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407714233 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.399278947 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363465483 seconds)
  done (took 34.731997702 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888533971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435331738 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51743957 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415211663 seconds)
  done (took 7.529285353 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.41473648 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.416766429 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.433083154 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471064375 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493840101 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426251071 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38983144 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385640659 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37191402 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417350198 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49240634 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432066422 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50169129 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363925954 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549322753 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362649253 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.36419438 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.414857984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467738412 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.483212996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364835177 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415555142 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424494342 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433674986 seconds)
  done (took 35.564487168 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363773983 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382398892 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.363814927 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362195465 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371206207 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362939553 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363333685 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364811927 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.363361571 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.37041565 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362865259 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37594615 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.362869351 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363880652 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369281046 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365718327 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369811852 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.363475248 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364137541 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369941772 seconds)
  done (took 28.610298552 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.35921351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.21362178 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711105621 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615818536 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360052139 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.357516659 seconds)
  done (took 27.891904556 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440304535 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585199487 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370425217 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.744284153 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.820692554 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367126921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366737097 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.617475428 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958543021 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.955591185 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433210801 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437055013 seconds)
  done (took 20.372142467 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.363475617 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.366930135 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.369482019 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.383403782 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423823145 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371026121 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374442652 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.361551671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431072716 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428089116 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.370361026 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.425784453 seconds)
  done (took 37.947345401 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448218272 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40361963 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.397548167 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432811031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078732541 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572989154 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364540229 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090359777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385701169 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636831256 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362774741 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451351184 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616912807 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365489249 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370366465 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399275684 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59489556 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880528216 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371981886 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.641219026 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395109607 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373433548 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.733073697 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621125867 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582358113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.340609495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624177425 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140729394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666232985 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38369047 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375127104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364215206 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636444321 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.432050222 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460138535 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59673696 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385770249 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.910417676 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.362820423 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.617301205 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385621405 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366659921 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374310573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364594069 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29802243 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366568829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517555865 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.370915369 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.076367601 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365350371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643135891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468255604 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368502159 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.356354568 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427371911 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390470816 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.368977492 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462148384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942276579 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.919839738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375211242 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323983159 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377950114 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.65360533 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010888434 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370899175 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369509851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368584421 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300355507 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.647793486 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389966492 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514203276 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391378418 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018019579 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108234016 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388204774 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297333194 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953657211 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377506004 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.310331816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59487212 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143611338 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30270316 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311420795 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302300049 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096908104 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381823734 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.832330607 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390096928 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098856652 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623196907 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393841443 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393020872 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590266067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.252636745 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368981041 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.368523761 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49597182 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390268304 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101582927 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322314294 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.372668122 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623429113 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579606966 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370101652 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41114095 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268890947 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373118924 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.390939856 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383992265 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609974912 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.987695822 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391830351 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932696546 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393481113 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146700849 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139320909 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374038231 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.381599963 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376431871 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647931004 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161066459 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253628875 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438330699 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375300951 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370196609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.824112558 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227426998 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.262341443 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.594404351 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408664336 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388209788 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.373102848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316868523 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381700213 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377644331 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149376276 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594795099 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371251872 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654735567 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305754356 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51810762 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379853272 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.593670087 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.663804903 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.383315134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631452834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372431822 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385783613 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390180588 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390859809 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472590849 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393871211 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.372535325 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654174232 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376435045 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375962591 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.836322675 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158718004 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374237412 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379476397 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372663161 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015400822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359404844 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381024201 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262938332 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387679702 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441820879 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378816901 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611246557 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.77305072 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391215876 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.37880099 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.376494062 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603405364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383736216 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.680038729 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461776137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.878542297 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007240983 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393926032 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.308629957 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.084517217 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.067339243 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374274898 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.573707205 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37505621 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610712124 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397491416 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373207158 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991300296 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386404435 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.690074001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388337003 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386892483 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.683390599 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376079615 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.769468922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960990766 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38649566 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393659511 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519419349 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.39004497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309289269 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892231 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380958322 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376259129 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.151675201 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410823693 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.704378755 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7948518 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659668166 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391940364 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655877087 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.795989832 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.415907398 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375036385 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381666346 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389203468 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393004272 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392672138 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388137125 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.696877791 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.822847289 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946129239 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152145166 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94388094 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702778838 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.38948856 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.266108444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116701423 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332389498 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.035620754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623254184 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116509715 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342823011 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278749541 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.67708735 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203637168 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667028963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614145652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747077815 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.3957627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661267028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598528728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413342074 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389490878 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314758024 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.683053184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453049271 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387377544 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465455897 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57830087 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389335687 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167061749 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.437639073 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.171102625 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.177586327 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.007231967 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765490612 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379326727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387915372 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74336647 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412112754 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903238897 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022940367 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381412438 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894183776 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335661951 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615934877 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400017944 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383707901 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.118821956 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.388062111 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.642421012 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661649806 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322407556 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386040441 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937974314 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.237062265 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387444671 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381353009 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143581052 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39268194 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696016675 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.389571942 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.785069112 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393620063 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315605663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315121801 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.074070614 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389291052 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357275415 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901882658 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.399661904 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393924218 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386715043 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233682632 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637128076 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396541643 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994682491 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615529695 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397470999 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405485464 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38652162 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382281931 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369463631 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.26445985 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617230039 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479243789 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605667951 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.403725007 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.290086117 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404081101 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594542657 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.264282229 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396618443 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631049688 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.101735524 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.405445311 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131027685 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409723085 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383905182 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395624233 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394740178 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404320165 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455247318 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622765656 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.403533973 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396713709 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.1736137 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389391618 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387414388 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398562961 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478094434 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.003731125 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.751832003 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.158082983 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008626116 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136234381 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01102575 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674958345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393941236 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38989919 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319635224 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533282844 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910180236 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659150938 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515748485 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385811914 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426079332 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401680304 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398562124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604421389 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661361165 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.255966566 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390085333 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051867884 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.543933088 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397594355 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.598262936 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909608111 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966907851 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501340424 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403148758 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13549474 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681013049 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478070576 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386934372 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977665859 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.394558019 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.156443205 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393017091 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399306331 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534241468 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669152582 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.466612205 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.397657836 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.543631379 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.160803835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.635907374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643456037 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865434297 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62729205 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016135437 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150423928 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658734242 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458322468 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626743095 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.500525358 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536952557 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.387068166 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277792894 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390296908 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232907802 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.098783311 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.399273679 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015254787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657684576 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.393036553 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.402425268 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418723269 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399304307 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611570009 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122705413 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614550988 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398844723 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398640896 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.959698887 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014060051 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682159794 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332098993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.393906439 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63725508 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633145808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414493175 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.843574606 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.101212206 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983244844 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.369516095 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412997463 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393434609 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152972597 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020123139 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.758059329 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916400459 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.056382051 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39795387 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672045541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396179806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402387061 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673515632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395154764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404747438 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639252211 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.020170413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235762684 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.414048742 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.753147083 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.335485293 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617786681 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428856276 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326704828 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395421515 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.850319905 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413730648 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522112113 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404973925 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.392631374 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407029775 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.132678634 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678705051 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.398550765 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.38503594 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.399245947 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398645223 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496226947 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522259363 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398146368 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.1062248 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741780746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650263204 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410727874 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.388072582 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.398509123 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394684661 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109916799 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363022675 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409220193 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99115165 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.419071867 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.410991144 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398567602 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611852736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606088603 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399048294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636557184 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403825343 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416415821 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.301117903 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161083548 seconds)
  done (took 1705.754074091 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431668652 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.445190916 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.419522458 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.427813732 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410283871 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428976267 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.474691157 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458199909 seconds)
  done (took 52.804541676 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.404562974 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.560272754 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.426544267 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.399744319 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.411163859 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.400623746 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.878425311 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.395621999 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404302889 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.406010709 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.396957005 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.398014503 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.060050716 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.412182364 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.404270892 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.390787795 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.404134218 seconds)
  done (took 66.46806089 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.822827854 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.65419423 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.767214038 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.406063297 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.445820157 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.407108406 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.707492904 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.413734511 seconds)
  done (took 54.934864905 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.407912932 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407303388 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408918975 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.408381166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.409686541 seconds)
  done (took 8.352879061 seconds)
done (took 2108.944467475 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401811372 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.403255247 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400880675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.404160012 seconds)
  done (took 6.919581658 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.383902659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.103830342 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384733798 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398633613 seconds)
  done (took 18.581705707 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.427033239 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.40491221 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.14688268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.0709808 seconds)
  done (took 5.529617744 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.148685961 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.160676621 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.145421866 seconds)
  done (took 7.767113968 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.398979918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.40316439 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.403776373 seconds)
  done (took 20.516641284 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696308704 seconds)
  done (took 3.009520821 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.546887901 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.594946939 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713748097 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.721261416 seconds)
  done (took 7.889234508 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.792169009 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773163412 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581167302 seconds)
  done (took 6.459504335 seconds)
done (took 90.817623556 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.454961271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.769718848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.601599039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.430244865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.829718582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.6014651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.608500387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.391787148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.936548738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.926415538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.472685264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.789918479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.770029888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.772942198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.767671005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.646689578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.63394298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.484270759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.116430182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.352189779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.611000125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.063356086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.303663625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.083520842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.633493565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557707462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.664712151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.650453748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.290468144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.678549911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557831413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.402900143 seconds)
  done (took 199.168910345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406151506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399680826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420052981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.400812176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400319351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400482253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401931499 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.400481433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405437629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.399815383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400515258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41301249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402391207 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.408299825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402214098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.415328412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.404204764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401979932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400146852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412880143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.404268586 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400600855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402037288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.41678045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407424289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.403068398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.40144679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419300308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401462581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401218229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402105052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.401875208 seconds)
  done (took 206.272272953 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.402341759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420017381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.405379348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420318994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435880807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.404382469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420146748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422019269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.402224731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.402492356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422801891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409791946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405502594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402180224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402908687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416581325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.403309039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405710973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403346829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40381102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422793046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433002891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402942443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.403292798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403617401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408872288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.403343895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420853077 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435692093 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403724731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411128118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407386756 seconds)
  done (took 206.485312535 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.599164709 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410551242 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412857151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.361466006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.412971299 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411214483 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.407522971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.608838846 seconds)
  done (took 14.942394022 seconds)
done (took 628.181999239 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.874923667 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.58281733 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.625746275 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439408921 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.294851142 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.458767502 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.431767001 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.61688722 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.392155835 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632174252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.742958923 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437092975 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.835747412 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429944929 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.699454164 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.541112715 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.314127417 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.409112887 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.765489651 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.023160999 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.705628881 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.957925989 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.620146262 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.390546364 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.863937954 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.988793508 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.217337622 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.304530493 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449627 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.774298683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.26201509 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.523848325 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.485709441 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.488219008 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.541496434 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533805364 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.410622704 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.495648234 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.620283293 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.71931676 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.073062053 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.18597004 seconds)
  done (took 96.480488378 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.403702954 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.40450619 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.403097392 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.403503007 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.404134987 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.403257273 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.402838743 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.403172518 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.404428136 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.403610428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.403300649 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.404868374 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.403890376 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.40501527 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.404041539 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.403641565 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.405968006 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.406100123 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.40286091 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.40402768 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.40434442 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.403192249 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.403938043 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.404024724 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.404310849 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.40615251 seconds)
  done (took 37.829032345 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.416369158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.673438992 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.862561611 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.430022418 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.417710595 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420847995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.500419533 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417879458 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42024431 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420840055 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.59124016 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419706634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452470607 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.869361456 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.419550867 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420437585 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418779698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417943205 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.680743837 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427121226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.52138792 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.418865971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.501856685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.427631046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.439951318 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41905668 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.423619877 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.987642011 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.423344918 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.591921608 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.279827645 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.505576579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.934434679 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.877781098 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.289181257 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428042011 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420077966 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.597428463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424671685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.418540183 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.503004979 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.427206106 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.866243682 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.102579003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44729254 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419871276 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.011839333 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.605545853 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.695558624 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43557493 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.897471059 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431495989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421860848 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.421714964 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.683887518 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.427833516 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.420661509 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.002025605 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450164886 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.504051697 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426277863 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.420623383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.6883301 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421847353 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.677814519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.423201862 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.428417741 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44181507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.868736345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431389057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.116882012 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448148472 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42223937 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.593006517 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.680869106 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047205951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431447802 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.695696973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950333262 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.510554029 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.425741702 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.977026817 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.506685545 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426996736 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.424735025 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423748695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423069444 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.468309279 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.50237722 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.055491467 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119013504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.041444698 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535196371 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431249739 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.423411354 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.014154876 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449936548 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423628943 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.868324661 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.133535911 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.451701243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430927269 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.126233281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452349042 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.509021277 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.429228469 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.878794513 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432584144 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.470926231 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.424622139 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430732148 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44770527 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50971279 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.428482376 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.425719235 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.094231624 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63013475 seconds)
  done (took 187.703176671 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420526536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.434341649 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419736226 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.416834556 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.41730413 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425562206 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.417972558 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.418411465 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424735022 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419303925 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.419236242 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418477235 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.419789171 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.426519592 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430202827 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425689011 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.029854938 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.418242127 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.420256451 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.419078248 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.231721967 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.42881158 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.419046991 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.41944774 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.419287748 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.422384301 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.426591543 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.423482015 seconds)
  done (took 154.564245849 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.427716699 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.031198477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.430691316 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.568833524 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.450474358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42552921 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.567021301 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494940483 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.427513944 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.42492998 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.424292577 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.750699078 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429664276 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.975900277 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.636725552 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.577118204 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.979608479 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.44558008 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425116559 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.425847242 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.569398238 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437872557 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.75175687 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.031239782 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43787773 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034080063 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.417728527 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428844913 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427526825 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035227586 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.427588403 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.753113187 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.510084303 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.494184149 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.035640863 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.979600041 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.997872734 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.584689833 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428343161 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426400768 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.425851757 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.418443605 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037596222 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.430665666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42966178 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.030703965 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.448153307 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.42943349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435840626 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.428450548 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.491035016 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.492559519 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.75665529 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041433749 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.510297107 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441245367 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.56897495 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.829880504 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.432678192 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.981292353 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418626318 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.040215066 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.451127317 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419832429 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429486862 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435609152 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.589621282 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.569244669 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.983886941 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.4500677 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.982980582 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.608629897 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.428452611 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430523149 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432493893 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.042260545 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.984719345 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.607580477 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.57394228 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.641811322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.429000422 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430042901 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421406004 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.51357678 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.429460288 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.043428063 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.003389655 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451019216 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.432539572 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432952406 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.433154953 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624737376 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.053402728 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.514652208 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.977592325 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.778273572 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.760358714 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.43266837 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.493583558 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.449553594 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.761581607 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.433986461 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.492629647 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.89480333 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.761974312 seconds)
  done (took 170.896920972 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.692856451 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.694469642 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.525591056 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.58305443 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.04698467 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.009323092 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.74012416 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.57765968 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.544964693 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.701268164 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.653456611 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.522498543 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.657064037 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510421847 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.199521127 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.511303715 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.528933588 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581081182 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.576500626 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.479112486 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.108808063 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.72976711 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.626251373 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.407924048 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.529272706 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219967887 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.00814951 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.991573262 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.608131627 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.800828904 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.000158002 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.576902656 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.447647327 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.145724173 seconds)
  done (took 68.876463184 seconds)
done (took 717.669471772 seconds)
SAVING RESULT...
DONE!
