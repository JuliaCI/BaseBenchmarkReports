cset: moving following pidspec: 14880
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.169583674 seconds)
loading group "string"... done (took 0.454982827 seconds)
loading group "linalg"... done (took 10.228415522 seconds)
loading group "parallel"... done (took 0.223344099 seconds)
loading group "find"... done (took 1.879348268 seconds)
loading group "tuple"... done (took 1.968861385 seconds)
loading group "dates"... done (took 1.328423703 seconds)
loading group "micro"... done (took 0.455577847 seconds)
loading group "io"... done (took 0.437802756 seconds)
loading group "scalar"... done (took 44.398194551 seconds)
loading group "sparse"... done (took 12.597139699 seconds)
loading group "broadcast"... done (took 1.040216392 seconds)
loading group "union"... done (took 10.039012174 seconds)
loading group "simd"... done (took 4.183761487 seconds)
loading group "random"... done (took 8.365552485 seconds)
loading group "problem"... done (took 2.191764946 seconds)
loading group "array"... done (took 23.959734808 seconds)
loading group "misc"... done (took 0.891992645 seconds)
loading group "sort"... done (took 3.320481121 seconds)
loading group "collection"... done (took 14.523412956 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.600691123 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.111148462 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.174435956 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118214354 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238614663 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139309009 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137296688 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09778382 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.753723637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182826266 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12378417 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.359169599 seconds)
done (took 5.918338063 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.231306515 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.081561134 seconds)
    (2/2) benchmarking "String"...
    done (took 0.14683953 seconds)
  done (took 1.070944707 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.090025206 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081626698 seconds)
  done (took 1.016792307 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.084833657 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.330957991 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082435189 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.480345604 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140617137 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085876895 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082465209 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081638765 seconds)
  done (took 2.12846712 seconds)
done (took 5.378144926 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.377802304 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.833000003 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.479347428 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138532563 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.276155979 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.231083606 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203101238 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.21595983 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087224593 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084613964 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.167686072 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.415975382 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.294294328 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.817193062 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097384302 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099574135 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134218503 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.775574041 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082688142 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131807412 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.364786292 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116568647 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105899554 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14666549 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189565145 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10862018 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158153397 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083190859 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.684029643 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123415938 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208648723 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087474806 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15653671 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.127606811 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177813601 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.119854281 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680771966 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192139428 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.141781892 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.084415687 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690196267 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.10259061 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.170279847 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097902026 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085851026 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168317021 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118772051 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083680458 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106230037 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08320956 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165492279 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464824953 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110701283 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.183298526 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098782524 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696398915 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108636612 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.251648358 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.13095348 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108641151 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082663478 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086570294 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.149696642 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089514507 seconds)
  done (took 19.311529649 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144172245 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135775757 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085238304 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134382782 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.0989243 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083296463 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082763678 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087716923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090944802 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141772287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089139506 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151649794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082786691 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08477702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146140248 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203192787 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090120067 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094638016 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085444723 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107213075 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111522951 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088342955 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08366906 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083287838 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.142519808 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21268302 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114570698 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1158734 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08339602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100560973 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133904847 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131680054 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.085559475 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082408439 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121557472 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127914531 seconds)
  done (took 4.908411873 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186718531 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100495887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163582392 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.137222532 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111457905 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150790203 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153023379 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233710353 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.693502962 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.159183428 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16725703 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133180721 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098776695 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100786245 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08560059 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083893456 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.550919575 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139619261 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113119505 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168218235 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084590797 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08615631 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.388392974 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087079325 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082434475 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082818951 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085642269 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160840752 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086768255 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.580570193 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084050856 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084001892 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146563866 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199689713 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090033276 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120503395 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100299201 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082588159 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.084622237 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084069991 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08310452 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.094042312 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11759085 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125332472 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099820496 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084251317 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187567014 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08893029 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.092933191 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.824779065 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176389844 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.174270697 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082787338 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.159867532 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10354063 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085860502 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082513526 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176630764 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.090087476 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15275873 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085761614 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084258602 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083074057 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084537599 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083049474 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.554045772 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085141054 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.102223268 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084261658 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084323283 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.354574908 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090921598 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08675446 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103597128 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082483552 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082761323 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084350107 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084734195 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084214301 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083360738 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11846858 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090351427 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083976719 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082908247 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146103407 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084972649 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101835486 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114321374 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097662774 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082720232 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114863706 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084486555 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086043006 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.155375254 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08224144 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099049407 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103325119 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087645915 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146410509 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083862006 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194799677 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08366454 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106281405 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085879224 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128882479 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085093204 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083831473 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086820235 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087233318 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083116792 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145948466 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08373741 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085918873 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086468183 seconds)
  done (took 21.558172515 seconds)
done (took 46.627806857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33788234 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085371418 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083816866 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083214851 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086232293 seconds)
  done (took 1.595155671 seconds)
done (took 2.489305282 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.179019432 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102691502 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096412015 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.098817644 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.105115526 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.102771876 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082259109 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09821658 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121192031 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097433741 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103302262 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.084022206 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097835732 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100682412 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099081941 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085681969 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098630886 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.09896173 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115872901 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.084072335 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083423235 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101809248 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082967288 seconds)
  done (took 3.239999359 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095454739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100993185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09336773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097187523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082162596 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094455574 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093534798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100892922 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096733999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088726279 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081806243 seconds)
  done (took 1.926226585 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096079977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099197303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084926943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097646437 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082636872 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094484469 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094215065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099222242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097107587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088858304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082668922 seconds)
  done (took 1.917822018 seconds)
done (took 7.98390586 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.446928415 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.689516108 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.152891668 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208389159 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.244824218 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.181745977 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283742061 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.16678272 seconds)
  done (took 4.386570127 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.125602713 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.146536335 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088205802 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085819724 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085490207 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084814128 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085117959 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086940228 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089652142 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088724502 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090144093 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.107565554 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086601587 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084529749 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088564092 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085542858 seconds)
  done (took 2.459240877 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129110114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110251089 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.08849078 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088982771 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089874426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090191602 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091839263 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088172889 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086712466 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087434268 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091194646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10564636 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088515401 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0862673 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088914372 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108404395 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087308941 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089618985 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105642532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089359551 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088616413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087004365 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08751373 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087283219 seconds)
  done (took 3.232636729 seconds)
done (took 10.981621345 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101174314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084794551 seconds)
  done (took 1.087953483 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162265166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155213184 seconds)
  done (took 1.228686649 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090573395 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08341653 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08735253 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085956931 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083346418 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083827565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087519302 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083067916 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083593474 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083158248 seconds)
  done (took 1.767506702 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087174378 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085103765 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087391951 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.149775598 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085003972 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082992262 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084214555 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083788755 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083924682 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082450473 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.082999597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110392205 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084003302 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091347286 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084711118 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08563144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086209251 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084575804 seconds)
  done (took 2.535972459 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084247729 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084078302 seconds)
  done (took 1.085153233 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083624734 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083036481 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086496319 seconds)
    (4/7) benchmarking "year"...
    done (took 0.082995798 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082594239 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08250141 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083723841 seconds)
  done (took 1.499690084 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438929649 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.199815802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.288492845 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10238539 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084914121 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.291773204 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083784248 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083852805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089533885 seconds)
  done (took 2.614665217 seconds)
done (took 12.736076434 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095407592 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.16368575 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.488249457 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105812122 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084242736 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.150515026 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.203558514 seconds)
done (took 2.227243475 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.249262012 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139454062 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.109724407 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085573721 seconds)
  done (took 1.507498408 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086862625 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09130316 seconds)
  done (took 1.111922707 seconds)
done (took 3.552857587 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084222274 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107667607 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083139791 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084793549 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083017827 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.083393182 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082847273 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.082987679 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083571611 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082989433 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085411011 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083238842 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082880739 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102054302 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083559322 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08412278 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085110632 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083748039 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082866315 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083341993 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083195981 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08584397 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083441501 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083358498 seconds)
  done (took 3.018584249 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084054581 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084264162 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083572287 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083044261 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082907797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083414993 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083105579 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08309604 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085616765 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082504529 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083991384 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083289969 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083212173 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082583858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100297235 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083887221 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083792784 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083477846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083021786 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086547972 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083541606 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083866745 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08381412 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083376692 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083172812 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084035666 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083133318 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083489328 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083415515 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100848777 seconds)
  done (took 3.482408796 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091586907 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081299028 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084225156 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08655977 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083189231 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083640316 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080715783 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08343111 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083787771 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083515987 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084450942 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086397011 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084969279 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084459251 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102336328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084829099 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086030602 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.084742601 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083931638 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085225301 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085079516 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084031578 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086089699 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084237806 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083912132 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081941695 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08385012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083991355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.102086574 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084621966 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085331428 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084394391 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083994063 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089606551 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084385394 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084167103 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084495781 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080746576 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085305187 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080794372 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081010681 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083537134 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083316653 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10311794 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.088589073 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084572799 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084636336 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084879075 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084244143 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085505776 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083732203 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084170889 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084925322 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084560345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084944 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083972493 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083776399 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099929612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084973375 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084931546 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084341402 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082034294 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085160052 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084619422 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088338835 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085318699 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086549603 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084403211 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084612365 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084561691 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.085721361 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088123453 seconds)
  done (took 7.100820324 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084769279 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0847895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084484296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084590805 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084519618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085849877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083473762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083656627 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083752209 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083169427 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083260923 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083729258 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083560969 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084104396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100990221 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084717184 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086944741 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084295212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084172883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083826225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083884981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084208367 seconds)
  done (took 2.819654223 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085818048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088361262 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.084987371 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087203608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090218822 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088399078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083830962 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086341661 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083950442 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085182889 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084564887 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084227414 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086492236 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086902401 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10373074 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086379953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087189641 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086755797 seconds)
  done (took 2.519767124 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084830687 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084063373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084538843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084398722 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08450229 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084295524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0836907 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083280674 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083620593 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087549474 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.083315034 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083630681 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08333137 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083919997 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101838613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085196277 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08543275 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085162384 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083745823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08455538 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084022105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086220169 seconds)
  done (took 2.82562033 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085790547 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084794533 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084962504 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084894033 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085027538 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084193946 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084374135 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084562379 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08775801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084151468 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087733031 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084829025 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088386721 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084729155 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102386427 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085322415 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085255496 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086008604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085098356 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084368576 seconds)
  done (took 2.677749717 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143772301 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088841256 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086301643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086811782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086602746 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086536673 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086794556 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086245457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086202238 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08599584 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086020452 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086709144 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107675607 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087419847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086070399 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086377453 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086743262 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086711483 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087249671 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086920372 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087432876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087100547 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086762837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089625838 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085710818 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086525518 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105496208 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086460494 seconds)
  done (took 3.48208891 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085556217 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084304167 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084457668 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.084144443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.084404606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084777577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087232504 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.084221726 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084112428 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084530027 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084674284 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084344102 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083810329 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083793095 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102333331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085484848 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085090978 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.087769101 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084694115 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084319319 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085136466 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084956255 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084503811 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084249335 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085027102 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083866776 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084255941 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084297116 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088611293 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103087032 seconds)
  done (took 3.540566719 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089271717 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087487764 seconds)
  done (took 1.134563506 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086041186 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085905248 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085501787 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084963238 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085818854 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08580559 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085157949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087002362 seconds)
  done (took 1.644795626 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146378417 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160969989 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085940765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101106873 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161078122 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157427862 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120809296 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086478423 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089469797 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086479358 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.145523522 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086770467 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090730895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089045802 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090710383 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111283972 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085216154 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091923761 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088017521 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086433875 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088165725 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0930414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092095456 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089350744 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088245004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103394087 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092003411 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089578325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089179121 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110734989 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089244451 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087815085 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.090081723 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086026398 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084957801 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162005652 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094144095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090150196 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099394262 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087018727 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090299561 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.106315719 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090763818 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09235606 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092418274 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086814159 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087792044 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085741646 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087687042 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08844808 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085535504 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089088854 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085201099 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090921258 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094839967 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1135704 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087480768 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089690212 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089518706 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092635233 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089230334 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090665702 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091364999 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0865326 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092441455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094447292 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089844977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085316761 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.086615073 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105352659 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094823956 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114318579 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092125536 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086817411 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086681391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08519968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09202155 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08755837 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089041478 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087945962 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086383121 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087752909 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110921414 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08902396 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090402995 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089469309 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085788676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088975975 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087335422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095290114 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086149133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085174185 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087315622 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090466453 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088374384 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087741479 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087297523 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109230471 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088500476 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08750222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087106402 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090341321 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093198834 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087759186 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088048721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090567944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153617704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090087635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.095093652 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.110371928 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088124221 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091087466 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089712567 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085665221 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089850792 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086406385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086204631 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089035805 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086685134 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087223547 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091627335 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092533264 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086927076 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.105286659 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090685582 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086911646 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087336778 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088216959 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086131738 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085573602 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085673703 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092098434 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089601193 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089891877 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087055944 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089999561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085229086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.104840476 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08751034 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091035666 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089624121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089958195 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091771267 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091495071 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088071161 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090102964 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088384218 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088086015 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089574535 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086427355 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.085747414 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10717752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090557003 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087248184 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090462448 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087820736 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0903171 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086975181 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086907692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088085037 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086885748 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087254067 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0864722 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087675587 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090870047 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089158239 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.104291815 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087684214 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087939763 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087909427 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086996065 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088796161 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089592292 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087203987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085807617 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087624268 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09267313 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094003522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091203128 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087444771 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10854552 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090686576 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087633116 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091978069 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087985113 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087126034 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087378643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092468991 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089360328 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088897596 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088937218 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087863989 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091160168 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091300738 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106940564 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086916725 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087768845 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088962166 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094336655 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088478792 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087249904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086501836 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089355588 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088252866 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091350321 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086944184 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08714236 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087113982 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108769672 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091218147 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087739465 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090279672 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090807114 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086545718 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088008806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087361707 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090437902 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.087093766 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087294488 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088843925 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.090226091 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08759851 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.113707656 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.086474109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092561093 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091830439 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089625255 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088133747 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086476153 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08941551 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089789266 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092365378 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088691514 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090127454 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090707839 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087891533 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087820448 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111363496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087791634 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.086850001 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089264608 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087427706 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09205816 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087307113 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087077558 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090353246 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088330476 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092113952 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.086016062 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089663353 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08724494 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106362001 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.086544896 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092429161 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091237042 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087373852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089419106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087771174 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087448944 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09045034 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088182241 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08841244 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08769562 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091986218 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090016453 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111661345 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08917057 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087365186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088938027 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086956004 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0911044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088333206 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090384132 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089518808 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088155968 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089793627 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091270892 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087797125 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086806537 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087308715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108119252 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091663298 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092292438 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089876153 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091293886 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087002339 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093927312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089280444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093448409 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089910723 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086937171 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090228386 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090803797 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088371019 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107830331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088568894 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090965522 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090820222 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091422447 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089530851 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090312707 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090994112 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089877302 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091315459 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090335556 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090407083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089912767 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087708129 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108784845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08788195 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090540638 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088740393 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090637887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090679975 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089897408 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093096801 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088217532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09064436 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08916262 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089272758 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088457745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088706006 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087072296 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110152219 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088624486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091491062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088104989 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088532453 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088070913 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085981691 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090085341 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09186377 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088109901 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090276347 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087540602 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090703157 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090385928 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.105285525 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087980067 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08723618 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088628762 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094371896 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090196815 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092291618 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088364148 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08848136 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087095393 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087976662 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088621618 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090213889 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086937457 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109977067 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092631176 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091688638 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089408322 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092846418 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089781637 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091321544 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089042712 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087857895 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088619466 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087045881 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087437218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088830734 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094047034 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109214194 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089800381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092311679 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090018659 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087995826 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090648176 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089728365 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090015938 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094021093 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088674062 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092211268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089474927 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086674693 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089383291 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089006148 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.108243361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090356617 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090765164 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091645044 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089909667 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09155615 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091170032 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091521954 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08898004 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087477763 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088863348 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089735235 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089033824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089206082 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108420296 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094755928 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087807661 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090994931 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088100813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087759478 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093329855 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088605082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08778352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090032813 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091231244 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090797695 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09234947 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089430854 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113026594 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089368475 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090362604 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090406782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088865012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09254435 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093396151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088719952 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090205618 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089572427 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089062389 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090183659 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088792577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093327765 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108167101 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089362102 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089122409 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087130509 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08780016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088793136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089636426 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091631085 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094396171 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086971297 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087319431 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089140911 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089288083 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090510095 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092569469 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109850436 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092720871 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089161616 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088715812 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093943749 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090504136 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092436107 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089727696 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092130822 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089374423 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09127915 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087290222 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090978164 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090395086 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111529647 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094728815 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089481047 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09092909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091461858 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089490272 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090750148 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092134247 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090857403 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087996616 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089563272 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088403124 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09274564 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088097788 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109626025 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091677881 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091606385 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090848395 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089699739 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088968372 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092363574 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088381894 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092948494 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091396356 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090684171 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087126672 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088914594 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088924485 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090841441 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108464792 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088004204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091418372 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091931136 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088428429 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091789207 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088750619 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087187548 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087554297 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088791075 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089724288 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091138868 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089620259 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089822548 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108732826 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088128615 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092357103 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092217004 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090874564 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087714643 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087934144 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089381288 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088615119 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089833134 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088340711 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088348415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091793406 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090938947 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087709066 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109147281 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087275178 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092014689 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090489842 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08962631 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092220693 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092603142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09371321 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08886031 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090776338 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089436239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088304788 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091979055 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089259957 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110243563 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093249226 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092724501 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089481463 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090071233 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091968844 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091826865 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090301922 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089311737 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088902442 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0923136 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093780063 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090091983 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094636576 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111206819 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089671888 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089300183 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089148842 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09497964 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089269892 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08895461 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089542582 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089739624 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088327884 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090874741 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089536997 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090163598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092428188 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092338785 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111969304 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08977397 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090358431 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.087735819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089585899 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.092463201 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08944401 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089143592 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089166793 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093095326 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091317206 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093029788 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090506633 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09008383 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.108424653 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091459051 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092528666 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092405244 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.088173976 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089903271 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090108257 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093263278 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092750814 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089328503 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09259008 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091337342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091921959 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088575725 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112209035 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091158069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094362754 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091587077 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090531267 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.093487431 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09305285 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091083516 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089477305 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092763394 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093188611 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089807182 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.091808108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087987775 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091083487 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108624774 seconds)
  done (took 55.757377132 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105188749 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089015501 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089603377 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088148343 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088697227 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088626673 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088079621 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089165872 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088397853 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087664693 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088029455 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090328831 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089099457 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088026742 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108240069 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089925906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088535416 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088418385 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089283723 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088319167 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088731281 seconds)
  done (took 2.920207635 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088456837 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090744675 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087677603 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088585653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088624016 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087364443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088140872 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087947097 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088854632 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088093192 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08788211 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087862317 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091173114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087826389 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107358939 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088673012 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087957581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088319844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.08835436 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088434046 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087812101 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087994556 seconds)
  done (took 2.985007742 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090554948 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.091752896 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089202998 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087739148 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089205699 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088008772 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089183862 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088014239 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090762269 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090945124 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090225684 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089820294 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.091374231 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.087995053 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.109843995 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088414446 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.09101759 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089844865 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090823841 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.08881761 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089803522 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.08782226 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088108387 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093216055 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089693952 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089668292 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087775296 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089472317 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111024646 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090582783 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088700434 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089714606 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089823453 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090892534 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.093424255 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090483698 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089727013 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088752418 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088784586 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089591056 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088274285 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089911025 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089723261 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.108590602 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.0888514 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093006004 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089717625 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089914388 seconds)
  done (took 5.393168266 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089311439 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113641093 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088770272 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113756133 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.088331958 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088727757 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089980081 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112891509 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.091387897 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087983804 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088450624 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.088512939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110576659 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088646905 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088634692 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089117999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08924571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088781489 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087939706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090539 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089535433 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088269651 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.089401091 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.088448479 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087882139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088076561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089161614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111075891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088958115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089064054 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091631303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088549663 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.089656604 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089101177 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090119232 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087946402 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088534289 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08861982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088087807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088735131 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088877503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091278029 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111342773 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.116613157 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090305696 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088835675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089397426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088708149 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08892714 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091053871 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.089351249 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.088451677 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091467348 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089155486 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089026709 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.109019381 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090258738 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09010587 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089382984 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08954579 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089095197 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088935777 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.089912627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088952726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091228326 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.089197674 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.088556484 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088916265 seconds)
  done (took 7.382893247 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089489052 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089766134 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08953191 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0904432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088664422 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089010709 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089426592 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.09083075 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088555314 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088071226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088994753 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088624591 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088939349 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089018785 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109519702 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089912936 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089440769 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090339215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092348095 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089643313 seconds)
  done (took 2.845398645 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090131931 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089307723 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089825009 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089430534 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089929709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089943022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.0900904 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088797145 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089542583 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091100478 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089260852 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089351823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089068785 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089660989 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109949614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090547509 seconds)
  done (took 2.491986652 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091303717 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.090528459 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.169516981 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089927128 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.09243272 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091713792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088903973 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.088995603 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089476984 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096759173 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089561532 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110601853 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102287752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089885695 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089448063 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09162167 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089771736 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089137817 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089161601 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.171479262 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089969657 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089172578 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088892101 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114812237 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090269071 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091540147 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092040918 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.089148261 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.093059543 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089019732 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089289971 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089706495 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089382174 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089550586 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09045277 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090036665 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089494268 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090652021 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112054465 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089432919 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08920627 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089234656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088869943 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089050313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088926137 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089799819 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089837531 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.08947015 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091215718 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089668888 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089149045 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09062297 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111332126 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090004992 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090151258 seconds)
  done (took 6.255599238 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090732518 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090568284 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090559044 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089621246 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092317587 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09003406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0897228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093566328 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089761865 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089401314 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090128654 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093292091 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090397025 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089995514 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111723194 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093174408 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090842141 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090537325 seconds)
  done (took 2.700760088 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09040454 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090259997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089425892 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089846966 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089661302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08938825 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08989389 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089672228 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093739505 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089406777 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089143949 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090008554 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089026867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089374237 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109593305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091277169 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089555167 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09009454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089237383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092524792 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089334517 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089330237 seconds)
  done (took 3.045056636 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101284419 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.15867414 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100865254 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.165362876 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.091942419 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09225881 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.099137098 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092278144 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129124101 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.092598422 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.0918054 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092021899 seconds)
  done (took 2.354738097 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091225 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090375796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090483716 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090208702 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091082013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091375043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090393822 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092639457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089815905 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090757746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089564332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089814185 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089488871 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090441127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110820136 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090820828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090933527 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090344764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092744532 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090272104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092274874 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089787822 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090517311 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090548249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090701783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090905601 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090172281 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09036168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091074453 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114371214 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093010363 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090737774 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090752374 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091740029 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090205358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090211394 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090130514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08978747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089902509 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090415796 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092204338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089881166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090245899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11161732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090555112 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091246654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090705408 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090799989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090659124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090582796 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090671862 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09305224 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090631684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090829955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089909668 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090455519 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090398807 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090562089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112443775 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091250953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091222516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091003886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090476026 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092691341 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090256742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090465609 seconds)
  done (took 7.130601415 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091084489 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091220166 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090700966 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09099963 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091356638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091263086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091178062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091367012 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093555404 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090429328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090909414 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090531362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090544603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091113234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112724016 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091219077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090722816 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092361777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091438453 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093443584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091341769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090390418 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091000565 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091465122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090945828 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090741208 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090530293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090386147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090799832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112675607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093692313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090944422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090778247 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09174434 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091823617 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091463128 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090774672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090725105 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090495088 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090501405 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090509042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093223319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090740231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113164465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091196444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090904745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090760235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092186043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090410719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090578579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092112051 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091356475 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094214909 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09068145 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090278604 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090719552 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09028863 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090593303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11306802 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091188295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091826107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091050442 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092060988 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094087075 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091885616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092997616 seconds)
  done (took 7.172896298 seconds)
done (took 143.617200563 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.163314615 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.187382975 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.242554782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151856129 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.140567854 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122027563 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091549517 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.091791569 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.094509585 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.110974598 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09203854 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.091736838 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.14372053 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.191053558 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093302342 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.125195922 seconds)
  done (took 3.183394594 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183122461 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.265185629 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123688473 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.093352581 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096260649 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.0912091 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091491665 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.142536558 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094502186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.092554084 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092055686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091454198 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092448863 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091394326 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094228502 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090696093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092018601 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091698766 seconds)
  done (took 3.082942021 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109857614 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13408205 seconds)
  done (took 1.321870312 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115790172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.126346129 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269748825 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120173964 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107143751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098464265 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119680619 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122579978 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.166238488 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.091670758 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.09167985 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.092682046 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108895704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091024285 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099656783 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092552806 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1122996 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090373694 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.090810002 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091455192 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133777422 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092208899 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091369934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090974606 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.15857404 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091892039 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091852892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.095164038 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091272916 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091654293 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091107814 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091882701 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.091103113 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113485408 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094345952 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.094033435 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093183929 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09141385 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093276277 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092048592 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092566763 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09223237 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094010399 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093757614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.092267029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093076955 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092759356 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114981758 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091855414 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097201455 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092159405 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091154685 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091745025 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093753083 seconds)
  done (took 6.668938343 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.497971243 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126763101 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093449824 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.550241687 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09478138 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095457965 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.479803343 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115887752 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198985167 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.515429186 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108124058 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091835279 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106353771 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.201794487 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149974893 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.22549195 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.415266757 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098502162 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.117786142 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106449111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092540913 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094456662 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094851077 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.691278144 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092018457 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09385491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091913625 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091736399 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125899188 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09451365 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092061041 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.10874588 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.222235938 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.108680452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093123594 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092623077 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093445546 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.102476385 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176801496 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.104222 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17009247 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092472751 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115496246 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092937794 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094703711 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092177554 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093919745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.108464868 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105586573 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09189042 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095280201 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093102773 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093559778 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094931879 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094206659 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.22735269 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.250141496 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093691489 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09376165 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094755431 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177321098 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100321595 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107997829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109592248 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.102325242 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093270484 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.045145416 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106017805 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093872401 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092144814 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113796883 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092921153 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094686062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15312009 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.670643854 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092929251 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093360701 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093022345 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.167069248 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094112253 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093710957 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102053609 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092698102 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096008737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114735331 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092960112 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.106243973 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.189102097 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093338984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092518656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093086962 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102422388 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09154899 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188362479 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096266702 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093929291 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179955226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092112578 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.116514729 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10414437 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093311967 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.106451882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094135101 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097574793 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09269414 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096510809 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.100928492 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098760171 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092429822 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09253778 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104552288 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098616545 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114434757 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.106436763 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.781445694 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103643533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094572821 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098886826 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092866467 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.104654007 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092710835 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17802241 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094180602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10258358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093039309 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09254219 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115832895 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.094850801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098669745 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0930639 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092542191 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097232224 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.199614383 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.102471198 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093009402 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18531698 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174213164 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092816232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108442854 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09522879 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.128536782 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096531733 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092981381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092828947 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.043595127 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097613988 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093755235 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091931026 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177285084 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093486879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101129271 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093902602 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092563769 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.045701013 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097554298 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.116443819 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099828444 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092679227 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093570363 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092394185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0928657 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.097140837 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105573844 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092626342 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092716326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094575573 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.102371206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092630583 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093715324 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11565162 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094665731 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094920143 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094707544 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099806124 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.107264074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.094562441 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095944878 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.867864025 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093382108 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09407727 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105994298 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093445047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195339645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11748198 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104648301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101847504 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094582434 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226614914 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.102962204 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176370206 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097689865 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106752763 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092229136 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092255643 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.097314127 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094056424 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092058572 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094320029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11525032 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093859266 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15410037 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094266155 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200600968 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093484024 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.10692429 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095494354 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092930439 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.197202769 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093935566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097317131 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094399229 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093088846 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11859722 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.866987214 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094828212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096382739 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09470003 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095340849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.102977346 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092832127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093435221 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092620771 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095304423 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180118323 seconds)
  done (took 40.800820408 seconds)
done (took 56.122054879 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.161892182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.138338805 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185540189 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115513647 seconds)
  done (took 1.778562563 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180096362 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112055754 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.172919906 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092996576 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.176357241 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115042882 seconds)
  done (took 1.958872537 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.123237554 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112239244 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109888491 seconds)
  done (took 1.447329898 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.153017219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.146990566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415763318 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.341364876 seconds)
  done (took 2.261136333 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207860236 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095307617 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094296235 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.174388978 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178399399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.133021408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097515744 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103351284 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099849676 seconds)
  done (took 2.334877049 seconds)
done (took 10.888703128 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.211360854 seconds)
    (2/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.151652854 seconds)
    (3/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.505548261 seconds)
    (4/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.129268685 seconds)
    (5/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.243389286 seconds)
    (6/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.17804431 seconds)
    (7/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.101840297 seconds)
    (8/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.244281817 seconds)
    (9/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.108363246 seconds)
    (10/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.208379713 seconds)
    (11/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.167726334 seconds)
    (12/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.107061893 seconds)
    (13/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.220964431 seconds)
    (14/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098587629 seconds)
    (15/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.239716509 seconds)
    (16/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.178295995 seconds)
    (17/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.201936096 seconds)
    (18/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110409731 seconds)
    (19/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.165633258 seconds)
    (20/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.225447876 seconds)
    (21/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.173355912 seconds)
    (22/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.247217336 seconds)
    (23/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119477332 seconds)
    (24/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.193729109 seconds)
    (25/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217287293 seconds)
    (26/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.177197506 seconds)
    (27/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092459749 seconds)
    (28/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.146294218 seconds)
    (29/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105308635 seconds)
    (30/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.168348904 seconds)
    (31/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.205942069 seconds)
    (32/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.123153361 seconds)
    (33/240) benchmarking ("perf_sum", Float64, false)...
    done (took 0.103590041 seconds)
    (34/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22547984 seconds)
    (35/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.225546441 seconds)
    (36/240) benchmarking ("perf_sum", Bool, true)...
    done (took 0.103101366 seconds)
    (37/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.147273622 seconds)
    (38/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15173295 seconds)
    (39/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151331384 seconds)
    (40/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135043554 seconds)
    (41/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.104032534 seconds)
    (42/240) benchmarking ("map", abs, Int64, false)...
    done (took 0.144254636 seconds)
    (43/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.219789048 seconds)
    (44/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132257469 seconds)
    (45/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.10456075 seconds)
    (46/240) benchmarking ("map", abs, Int8, false)...
    done (took 0.203732814 seconds)
    (47/240) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129322091 seconds)
    (48/240) benchmarking ("map", abs, BigInt, false)...
    done (took 0.139766831 seconds)
    (49/240) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092668031 seconds)
    (50/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.111859309 seconds)
    (51/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.167320866 seconds)
    (52/240) benchmarking ("map", identity, Bool, true)...
    done (took 0.169662958 seconds)
    (53/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.155517563 seconds)
    (54/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.23295011 seconds)
    (55/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115850238 seconds)
    (56/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094960408 seconds)
    (57/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10916859 seconds)
    (58/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.133170166 seconds)
    (59/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093418034 seconds)
    (60/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097793243 seconds)
    (61/240) benchmarking ("map", abs, Float64, false)...
    done (took 0.142811473 seconds)
    (62/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.095295953 seconds)
    (63/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.122813303 seconds)
    (64/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095147175 seconds)
    (65/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109877358 seconds)
    (66/240) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102965237 seconds)
    (67/240) benchmarking ("map", abs, Bool, true)...
    done (took 0.152055361 seconds)
    (68/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.17661836 seconds)
    (69/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096530982 seconds)
    (70/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103352217 seconds)
    (71/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105697794 seconds)
    (72/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.111063966 seconds)
    (73/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117547551 seconds)
    (74/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093960085 seconds)
    (75/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.111342908 seconds)
    (76/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.122858054 seconds)
    (77/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.095628168 seconds)
    (78/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096298098 seconds)
    (79/240) benchmarking ("map", abs, Bool, false)...
    done (took 0.153019432 seconds)
    (80/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09233712 seconds)
    (81/240) benchmarking ("map", identity, Int64, true)...
    done (took 0.151378289 seconds)
    (82/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106065499 seconds)
    (83/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120730319 seconds)
    (84/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095160336 seconds)
    (85/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.206421615 seconds)
    (86/240) benchmarking ("perf_countequals", "Float32")...
    done (took 0.104218298 seconds)
    (87/240) benchmarking ("map", identity, Float32, true)...
    done (took 0.156400815 seconds)
    (88/240) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092688837 seconds)
    (89/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204697339 seconds)
    (90/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093378511 seconds)
    (91/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.106173812 seconds)
    (92/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.172893898 seconds)
    (93/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.096448183 seconds)
    (94/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.16223947 seconds)
    (95/240) benchmarking ("map", abs, Float32, true)...
    done (took 0.155487663 seconds)
    (96/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.106511551 seconds)
    (97/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.134646013 seconds)
    (98/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100242052 seconds)
    (99/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097166091 seconds)
    (100/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108907035 seconds)
    (101/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.108525415 seconds)
    (102/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.188227681 seconds)
    (103/240) benchmarking ("perf_countequals", "Int64")...
    done (took 0.101515115 seconds)
    (104/240) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102797247 seconds)
    (105/240) benchmarking ("map", identity, Int8, false)...
    done (took 0.143136127 seconds)
    (106/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.17793238 seconds)
    (107/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100077144 seconds)
    (108/240) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104004058 seconds)
    (109/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092670631 seconds)
    (110/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185095131 seconds)
    (111/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096451777 seconds)
    (112/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100653899 seconds)
    (113/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113161285 seconds)
    (114/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.118266498 seconds)
    (115/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.109040594 seconds)
    (116/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098649517 seconds)
    (117/240) benchmarking ("map", abs, Float64, true)...
    done (took 0.106463903 seconds)
    (118/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.183102755 seconds)
    (119/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095373555 seconds)
    (120/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095969667 seconds)
    (121/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.170903509 seconds)
    (122/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102056239 seconds)
    (123/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.142712841 seconds)
    (124/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.094333148 seconds)
    (125/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.115470587 seconds)
    (126/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097481678 seconds)
    (127/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093359892 seconds)
    (128/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096960561 seconds)
    (129/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092935958 seconds)
    (130/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092984123 seconds)
    (131/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09337833 seconds)
    (132/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.112178019 seconds)
    (133/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097090049 seconds)
    (134/240) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128381973 seconds)
    (135/240) benchmarking ("map", identity, Float64, false)...
    done (took 0.139829896 seconds)
    (136/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.151936103 seconds)
    (137/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092684093 seconds)
    (138/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.133097591 seconds)
    (139/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094791015 seconds)
    (140/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108194834 seconds)
    (141/240) benchmarking ("map", identity, Float64, true)...
    done (took 0.106555499 seconds)
    (142/240) benchmarking ("map", identity, Int64, false)...
    done (took 0.093903 seconds)
    (143/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094754785 seconds)
    (144/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093970465 seconds)
    (145/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.131599911 seconds)
    (146/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.097544411 seconds)
    (147/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097684339 seconds)
    (148/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095424162 seconds)
    (149/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093725789 seconds)
    (150/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094189095 seconds)
    (151/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098098754 seconds)
    (152/240) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104026728 seconds)
    (153/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.111584284 seconds)
    (154/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.111948145 seconds)
    (155/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099100842 seconds)
    (156/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093764264 seconds)
    (157/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093531773 seconds)
    (158/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118255057 seconds)
    (159/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110918118 seconds)
    (160/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09470266 seconds)
    (161/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.113779323 seconds)
    (162/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.094171678 seconds)
    (163/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.097637722 seconds)
    (164/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.095190934 seconds)
    (165/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093980443 seconds)
    (166/240) benchmarking ("map", abs, Int64, true)...
    done (took 0.109471637 seconds)
    (167/240) benchmarking ("map", abs, Int8, true)...
    done (took 0.12102206 seconds)
    (168/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097372318 seconds)
    (169/240) benchmarking ("map", abs, Float32, false)...
    done (took 0.093980445 seconds)
    (170/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.103894851 seconds)
    (171/240) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102467876 seconds)
    (172/240) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117987768 seconds)
    (173/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.097262777 seconds)
    (174/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.096136765 seconds)
    (175/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095508696 seconds)
    (176/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097168812 seconds)
    (177/240) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096545374 seconds)
    (178/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093528224 seconds)
    (179/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093348613 seconds)
    (180/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093408028 seconds)
    (181/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093677322 seconds)
    (182/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108638756 seconds)
    (183/240) benchmarking ("map", identity, Bool, false)...
    done (took 0.094644559 seconds)
    (184/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09574913 seconds)
    (185/240) benchmarking ("map", identity, BigInt, true)...
    done (took 0.169047177 seconds)
    (186/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094412305 seconds)
    (187/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.097264238 seconds)
    (188/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.10033342 seconds)
    (189/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108171832 seconds)
    (190/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094184594 seconds)
    (191/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094099798 seconds)
    (192/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09475436 seconds)
    (193/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093050927 seconds)
    (194/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093881538 seconds)
    (195/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10296991 seconds)
    (196/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093625701 seconds)
    (197/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092838146 seconds)
    (198/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.113521353 seconds)
    (199/240) benchmarking ("map", identity, Int8, true)...
    done (took 0.135053513 seconds)
    (200/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094669591 seconds)
    (201/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095344071 seconds)
    (202/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094899525 seconds)
    (203/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103679 seconds)
    (204/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104544794 seconds)
    (205/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094836909 seconds)
    (206/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094185672 seconds)
    (207/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098526236 seconds)
    (208/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.107369449 seconds)
    (209/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.096980642 seconds)
    (210/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096698251 seconds)
    (211/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093383468 seconds)
    (212/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101005237 seconds)
    (213/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118118372 seconds)
    (214/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094580642 seconds)
    (215/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.104566591 seconds)
    (216/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.097507612 seconds)
    (217/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.104662854 seconds)
    (218/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09767643 seconds)
    (219/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.094122238 seconds)
    (220/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.096708732 seconds)
    (221/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095423933 seconds)
    (222/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.093630155 seconds)
    (223/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093154416 seconds)
    (224/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095678602 seconds)
    (225/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09288639 seconds)
    (226/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094018855 seconds)
    (227/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127952279 seconds)
    (228/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094641638 seconds)
    (229/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094609451 seconds)
    (230/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095702204 seconds)
    (231/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093551509 seconds)
    (232/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095546073 seconds)
    (233/240) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093470525 seconds)
    (234/240) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094669727 seconds)
    (235/240) benchmarking ("map", identity, Float32, false)...
    done (took 0.094591691 seconds)
    (236/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094281882 seconds)
    (237/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094192314 seconds)
    (238/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.097166392 seconds)
    (239/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096932828 seconds)
    (240/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.097756129 seconds)
  done (took 30.602950331 seconds)
done (took 31.7208343 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.111025811 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173752123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.105600649 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.174909679 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.10617558 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121544815 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.104323539 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.132686713 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.110307649 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109474063 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10403357 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.100069607 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103561211 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105993548 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104063476 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169494255 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122655967 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101971959 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119614499 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.095039917 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.094578974 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095186968 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094126326 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.098992184 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105452266 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104479515 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099400563 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102383956 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.095027585 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09458244 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094209749 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102245543 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120511224 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107781819 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.10252196 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.09729438 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104132392 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104333875 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094448304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.095634499 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.105069413 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094839357 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.101746267 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101696979 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093503111 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119274183 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098649578 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109378547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170602336 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099011221 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.105014306 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104065962 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102356235 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093844814 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09400669 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094462277 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119482376 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175237895 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094680311 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099264725 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.107263025 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.102394465 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094897839 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094563838 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094861821 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111393909 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107260138 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119275422 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115555166 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094997074 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.094930301 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095162386 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094897351 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.094877618 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10362436 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.106293623 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.094074764 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095029639 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102660015 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.101537686 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120051086 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098808075 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094895755 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094708646 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097541563 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099902017 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094128465 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095395698 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094993947 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094145855 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09783004 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094637791 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094192317 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.108428947 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094827683 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120139848 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095643628 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095280288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094854736 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095329924 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.095872973 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100288696 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102173835 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094220442 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094629448 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106523886 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094677373 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095122592 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.095250321 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118399784 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10965305 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.115850243 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.100228525 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101968675 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.096486875 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094761516 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.09459767 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094655461 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094818981 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097493839 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094860946 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095636179 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121319225 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098754019 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108851456 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095669307 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095025311 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097260597 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.095516188 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.10285927 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094895681 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.095803801 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09443327 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.11162628 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097032802 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.097452537 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119243281 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098449897 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095441319 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094202031 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095488181 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094340601 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094479962 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094698854 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094532178 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100613978 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101382313 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09757824 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.094409544 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.096216291 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094616644 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119984365 seconds)
done (took 16.893729282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095848131 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114101106 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09539674 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171321931 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154888255 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.098476585 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.095154202 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095417243 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101154488 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.118757337 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.09534338 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097835659 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095332204 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.095829513 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.096112511 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10016296 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096599207 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095022281 seconds)
  done (took 3.057312628 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1051523 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11577422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106183542 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106836559 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.095486324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.095579401 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095647223 seconds)
  done (took 1.890989908 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096328172 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183356455 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.170326817 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.168219924 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.199000464 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.171835118 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0952165 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106332617 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095284016 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180091266 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21065275 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09568718 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099498017 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.171306079 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095294901 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.162393785 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12163987 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095981115 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.166196334 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095776949 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107770055 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103229246 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095450356 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176803082 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09841672 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122896057 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098178712 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09892409 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121914786 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176403822 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.0995373 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095110585 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.173266286 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096293761 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.201430297 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100345498 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.175175146 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098834162 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099486787 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094459838 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097534296 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.184126743 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095799074 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098841328 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099120044 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183345059 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097513551 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1763286 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095325743 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122385499 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099020833 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09623241 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097079711 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094673081 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184467523 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098228777 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.190125704 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.166957394 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.177593776 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.16400973 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096898076 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205453427 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.170710258 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096806157 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095272182 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094616904 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163443378 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094380984 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126985604 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.160984716 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095896041 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.168116569 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.16659248 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099423021 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.121492176 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.098832871 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095860054 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.16855074 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095097545 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099157758 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163699609 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094391257 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121843598 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096322296 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095524569 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099602411 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09691043 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094593472 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.165056586 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.164103154 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.097468155 seconds)
  done (took 12.810224714 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095335311 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095694868 seconds)
  done (took 1.390114081 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102854244 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095684181 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105020062 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09563479 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101621518 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.179800787 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.18003888 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120785707 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.104120609 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10316668 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.181649136 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.182595826 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.180154682 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121923219 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.181982678 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095907964 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.180779466 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095249306 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101838933 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099373974 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.099948401 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095849424 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122918345 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.16208076 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095677326 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095273921 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096486451 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102352984 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103093679 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096773478 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098958325 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095687961 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095902504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122137249 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.182934519 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097440108 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095286863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096211923 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094613324 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096476816 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.182899458 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099089008 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122202248 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096675295 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096315808 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096614057 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096129547 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097075964 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.181298051 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096563399 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096259915 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095185389 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099295625 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122580829 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096849203 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095938587 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096853308 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.182105918 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096781141 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097226773 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096028407 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095985808 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095967015 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098864639 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095644954 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122800675 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096955864 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097486235 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096777701 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09582438 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097029827 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095733743 seconds)
  done (took 9.38189309 seconds)
done (took 29.69087608 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.131305562 seconds)
  done (took 2.322369963 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634908698 seconds)
  done (took 1.827798085 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.775235581 seconds)
  done (took 8.997768224 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.365782578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.282848275 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.86826453 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134398149 seconds)
  done (took 2.84600055 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.115542065 seconds)
  done (took 2.330294811 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234963633 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194033761 seconds)
  done (took 1.627569318 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737758483 seconds)
  done (took 1.946823048 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.317269874 seconds)
  done (took 2.510394255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.193787254 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160839923 seconds)
  done (took 1.56511536 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.528496459 seconds)
  done (took 1.745641267 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.66482606 seconds)
  done (took 8.888026209 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230277571 seconds)
  done (took 1.446142309 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.25994355 seconds)
  done (took 1.484508914 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.114091661 seconds)
  done (took 3.338575878 seconds)
done (took 44.089244046 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103959734 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107169376 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107746547 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.105135838 seconds)
  done (took 1.633368843 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102649093 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.104358344 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101334505 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.10091137 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102703958 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101333584 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099066714 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100440736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100986576 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100318737 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100768306 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100159782 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.108871247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124300308 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096512573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101370148 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101877647 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100513324 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099609214 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100165151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097125855 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100863012 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100035418 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.105319522 seconds)
  done (took 3.678440099 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104611843 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10239295 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102897609 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100779521 seconds)
  done (took 1.640869002 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104312644 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.108149418 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108987612 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104681807 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.108358901 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106382581 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.10120005 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096076823 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099414104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.104512484 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108471427 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101474042 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132630434 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104164309 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106446221 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09607966 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103715612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10953864 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104608288 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.111398493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101953917 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103990562 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096196761 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099294467 seconds)
  done (took 3.751775118 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166769582 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.108122774 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.119438077 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.121965962 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.09831832 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.122062194 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.11940737 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.096347752 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.103434968 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.095187212 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.096225028 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.121203953 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.122884158 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106217784 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.09635971 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098791105 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.096973288 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103978514 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.104986771 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.095627369 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.149910631 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.109056829 seconds)
  done (took 3.687783091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105769447 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.101610093 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097630695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096304697 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109638579 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103801528 seconds)
  done (took 1.853612701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102503626 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099324945 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099505005 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.097434133 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.102334607 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097536527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096791825 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.098667062 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098684347 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099254531 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096933842 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09656858 seconds)
  done (took 2.421417096 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209441072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116853424 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121771758 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097640307 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100405556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09739177 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109375981 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098353058 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09961417 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097110706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096855159 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097904813 seconds)
  done (took 2.58112835 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147442709 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102491925 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160189754 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.456542035 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114094603 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157507568 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.38463224 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125343406 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.153908155 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111333559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131005904 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112795222 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147723371 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139678418 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109695744 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.377087857 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151868475 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14855665 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115715641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143490373 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126040954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165091725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133100786 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115899017 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139690711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1144911 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102562079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103600073 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119388752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122798502 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119476391 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141378236 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107896403 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133062321 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113608261 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119978946 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21099673 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107007894 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23401688 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132680865 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144892932 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110066115 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153982704 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116924504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107449291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140439154 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109478772 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.130460899 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10814219 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113190785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15504756 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125179133 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.119758603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108869774 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.430260658 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105861776 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114077991 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147644032 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139582004 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137904903 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130634456 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102333673 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170958545 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130908308 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127607585 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111211299 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117533401 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096102977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159563421 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166535368 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125335915 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157022939 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.139456693 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108280859 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124807045 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122645449 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149674094 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127590432 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124610323 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10121529 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144910687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106493894 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104900801 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168737923 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102290896 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167961125 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109258207 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.308304103 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136278437 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119802369 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117667391 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121774088 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153737007 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120388003 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.141596181 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115144934 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118520515 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148076897 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10206223 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117497127 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140903884 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100764505 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120207942 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128893552 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126217646 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133225751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121901777 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130644887 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111199356 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13471989 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11471843 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151371197 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123299903 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133249562 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105415886 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109651657 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134372075 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128925941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108705111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150010934 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132262824 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.140682408 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106699792 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106884298 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18365908 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11211112 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16021938 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108678778 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107039097 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.127982128 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129397197 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116055812 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125612614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105687769 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1233938 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156669128 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104609769 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112069099 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132492407 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128003096 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104021431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138109251 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106697477 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.115398365 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126301167 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109076638 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144703956 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129542302 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127178538 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11016375 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132360082 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113565646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106265763 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130024605 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147963304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100875444 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126168232 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134054395 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104204763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174783448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119896101 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177344966 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127147822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10598458 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17731724 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103319428 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126813353 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105391044 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121545811 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118972959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12639756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148458609 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.142756069 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123809556 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116463925 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11868117 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155325191 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11663522 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.109164822 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127412023 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124527579 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101819554 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098043016 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104862116 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112626733 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103404038 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110316436 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147818936 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121015193 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146665607 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126148585 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10785092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159379546 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103868841 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118707482 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126121383 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111829005 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125902965 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130618596 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132776216 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106524583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137044767 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.105412045 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101821869 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103479179 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122151173 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112205285 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106504049 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107163765 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132447493 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122046693 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139763511 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152739621 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146863 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142620415 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102387587 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142682217 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116174309 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128588968 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.176472503 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106671604 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.117835594 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133937269 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109981942 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14050114 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125574944 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153117516 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13034127 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129298253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102970728 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110383691 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158336117 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105025911 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11332224 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10770277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105678008 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108076624 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108180695 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123577234 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12449639 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114005664 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114765098 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.140347592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113316531 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104976949 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106955427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131519392 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13851568 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122338125 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121890283 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117553277 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112132971 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136014353 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120103359 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103778934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.438660485 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127373311 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124773003 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105265713 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106580359 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158639774 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112479347 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112916785 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177277949 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108363578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127731736 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155046639 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106377424 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106113125 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11380376 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114856729 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127828689 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098073411 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122484847 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140722478 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125166986 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139374983 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129839515 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124632391 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121151361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120152068 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108503244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16693286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124977429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122667038 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127680167 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112907248 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175657214 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127440628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103730304 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098175219 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177237468 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108818112 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125252782 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.174367906 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15136968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132129975 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157467154 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136932952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103432913 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126336272 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141506434 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14980734 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106493281 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107066898 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155646877 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164952654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105768824 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156328452 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.411523622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143875165 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11810752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120810943 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.425099835 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105018298 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105127975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113565152 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119132684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102576115 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.175925736 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127549441 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109088021 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113613628 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106614943 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171527526 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140036568 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107673058 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121651398 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106755403 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118376367 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111262984 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11856095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141002987 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.117551109 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117657159 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132265151 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122047923 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.103028214 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126210201 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126167436 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126173553 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113451831 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137555408 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177978224 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104196724 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113325409 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104174191 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098460738 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149201135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.149821354 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128971861 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118664608 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125996188 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106796923 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100652721 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109761672 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126500717 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108349576 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.105696142 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151146058 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106563373 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129776742 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129756794 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1094836 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129217518 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107288168 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098307704 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107563506 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10901351 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10674081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17009715 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122115209 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099642246 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119791225 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111913479 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119698869 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137698276 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108660007 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.522822283 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105048516 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134285608 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148633115 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142378386 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115506497 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129556531 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127394171 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143464526 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10779899 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109389911 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207985555 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111276488 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123331789 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105232922 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10962822 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143431308 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100109986 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116314974 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152819988 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113478199 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.108146982 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123844021 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138115198 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107828428 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1148353 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136928917 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147226326 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12660454 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177357591 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107306365 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15269331 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115624897 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104919923 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118135944 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119905931 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146065688 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109878642 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106953263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10977688 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128394113 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105714271 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121445414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153489249 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127703955 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128743463 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098663517 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126105079 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106057954 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126591172 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098703076 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108419329 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156875791 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107814865 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105214771 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130166358 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111706967 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12736545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099075129 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170614387 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135185913 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103999122 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105411708 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394148452 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150337258 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202260288 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131626099 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108832351 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138767585 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116516609 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122674775 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131286801 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099706547 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108610817 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099973123 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.240455615 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.126393341 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131354711 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149497495 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114665758 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176868643 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111768367 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277390711 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115661109 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158213476 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124436789 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103245123 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11104463 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105891282 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110995187 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17401245 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13046871 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129095918 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.113302813 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099402664 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106954704 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106626226 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116256004 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110787293 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155268031 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109525322 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.118972724 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108675902 seconds)
  done (took 79.789658175 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150135373 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137819146 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150860683 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219530225 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166859874 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282418872 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237888432 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249913448 seconds)
  done (took 2.92305492 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103343318 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.12374826 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.121699626 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.124001246 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.106131351 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.306339411 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144133401 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100805744 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143318358 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.127229426 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.102699334 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.458477595 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100691902 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.104104319 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126786421 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.100884614 seconds)
  done (took 3.708679311 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.482272003 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.344862753 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.558358598 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.206307565 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.42115994 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.123672326 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.533335017 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102302663 seconds)
  done (took 10.110365963 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13639013 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129426645 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.215205152 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.231535718 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136252131 seconds)
  done (took 2.187631542 seconds)
done (took 121.180812566 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105888189 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.108863365 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.111370075 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.10820988 seconds)
  done (took 1.757986742 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157027417 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100259293 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102646323 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.102633725 seconds)
  done (took 1.80448665 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42240683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.102135318 seconds)
  done (took 1.904873444 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132404475 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.125996376 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125830415 seconds)
  done (took 1.737247437 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115027224 seconds)
  done (took 1.463133225 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107284281 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.107161502 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176517324 seconds)
  done (took 1.738149745 seconds)
done (took 11.751999778 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.207322257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.950369169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411185785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154271306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.703690501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.392612826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.411481288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101488223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111155744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10162078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101143038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681331368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.355420748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876142019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.389798098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.875275451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.688579698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128104138 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101219164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101285972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.353227883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101189941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101222698 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101641234 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698980521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400485913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101597745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.883583482 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101565402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129012708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387525849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10102545 seconds)
  done (took 20.636774632 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133213532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122830775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106016562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102520446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100784708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103127234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106417344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101584571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11710506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10178569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102191618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126739237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105577469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102864707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117472685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10194256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101026192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103466207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102208597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102073206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105351122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101811689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12761788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101180243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101392905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110532406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102034428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101906741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104574537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101832416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103089293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102059713 seconds)
  done (took 4.779311915 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145099509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139205534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106949629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132940666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129488424 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103514053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.157803556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104711916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145659777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102320059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102925962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102053159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118515458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103492457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11766533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102400336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101834722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102407646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103653489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128672145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106172414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101894229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102037778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101755915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101627442 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112085833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101591043 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102669265 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102131274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129930151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10565029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102938316 seconds)
  done (took 4.980027928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101314636 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.110610423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134432028 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136576012 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101369062 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101320314 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101296963 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100544174 seconds)
  done (took 2.246948268 seconds)
done (took 33.997739347 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.115773865 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109363113 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.113108368 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.111441005 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.168511613 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100194016 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.111465958 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100073379 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108793593 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114430667 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128852582 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.105465236 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112900906 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104968848 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.170623454 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109996066 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.170509834 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.200481554 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.10239192 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.11063696 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100087021 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.170231688 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106174183 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101414702 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195563616 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105750648 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104806193 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103744154 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104059621 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102954836 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.169539571 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104187066 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102137635 seconds)
  done (took 5.383271221 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.175171895 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.100546111 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100845506 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100420293 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.100197417 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.099813762 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.175197643 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100355733 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.129271747 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.10083303 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.10146031 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.190083013 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.100670813 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.101608642 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.10408349 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.096973719 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.100006884 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.102319234 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.205925972 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.101143974 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.102909211 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.102538703 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.100048021 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100623576 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.195947948 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.097055288 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.1013914 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.100704582 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12937907 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.100566255 seconds)
  done (took 4.890553508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10557154 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.121013161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120080493 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.124545305 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104592714 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101801458 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.115988029 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111436684 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.10551032 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139368162 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101535563 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.106421416 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13210102 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103141601 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.114570255 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.116149039 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.115533448 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101322162 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.112298633 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.155225938 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109512103 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109983143 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.107969657 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.106091048 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107567876 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.142093235 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125193352 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.102457025 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.10205979 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.110400826 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101604315 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103361112 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.125599753 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114391037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102199738 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105443238 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112076024 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.104660595 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.136911724 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.113836679 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.105110194 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.102781763 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123914715 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.102408869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.102220957 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100511425 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112630843 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.116295986 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.115137387 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102912491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123955091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129110853 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.10200317 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.107084428 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102220142 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102220576 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122883372 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.112945176 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10640844 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.104994251 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.102920466 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102386628 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122589369 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.113238912 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.102966762 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147153395 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.102909354 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.102386591 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106974645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101842313 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.118935547 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101965353 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109675296 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.103635051 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122813052 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.100853746 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.103480705 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.102074004 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.13007348 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.108349783 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109728199 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112203297 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.103661904 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103393009 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.103190332 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102835328 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.100959504 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102699301 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.100839047 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.101761814 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.102473477 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101321789 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.131396597 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103479595 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103027173 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10161905 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106550396 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102945629 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.102028024 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.101925121 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111881622 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.124413957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.103227525 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.109663836 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.108805902 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102567324 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151378394 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10106077 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10218383 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.115304 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.10240123 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.102691182 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110285833 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103633041 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.105652484 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102923079 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129698084 seconds)
  done (took 14.320681942 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.17713928 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235361582 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.283982376 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.246735403 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.186356495 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.163625035 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.256106928 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111796633 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233406476 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.109130922 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.153768186 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233528133 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.116284789 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290125601 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.107011647 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126324345 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12518857 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.101593945 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.113513414 seconds)
  done (took 4.759815217 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104760596 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121772901 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.104103523 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.102278722 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.102414213 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103589514 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.114058493 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.108053958 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101962477 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.104823568 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115525187 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.116839898 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.106264902 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151593213 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108264064 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102087413 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102263241 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.109667628 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.104557796 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123646781 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112228437 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.107230578 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.104995318 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101664261 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.101041773 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101346856 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.101287725 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.131350402 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102820803 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107451605 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107656815 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.101443166 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.107399385 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.109332934 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104433346 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.108319659 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10236001 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107556424 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.213967028 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10294995 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.10204416 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.102586478 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104711427 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101602281 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104879973 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.110838745 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.101152796 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101585935 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110726292 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101277489 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102766161 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10280787 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.133135376 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102812541 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104534028 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.105366149 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.102891297 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.114247277 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.103421359 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102215186 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.103767173 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.109550939 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.104122959 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101899089 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103883843 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.107196328 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.136024244 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112238668 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.10211636 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.103483222 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.102809437 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107720012 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101760923 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102131182 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101987642 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109080672 seconds)
  done (took 9.670087192 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10324296 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112092736 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.11834742 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105880286 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.113014957 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103152283 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.112728866 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.117317546 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114983077 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102777622 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114343538 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104906686 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143489867 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.113063078 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.113296818 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.112971657 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.113181095 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.105052283 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.109195725 seconds)
  done (took 3.530593694 seconds)
done (took 43.918543674 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.422015313 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.580964229 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.383260375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.38182011 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.407218844 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.414907104 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.382074056 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.384802211 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.888860868 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.384487359 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.383081741 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.380977873 seconds)
done (took 30.765370415 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.415009971 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.38582298 seconds)
    (2/2) benchmarking "String"...
    done (took 1.387963361 seconds)
  done (took 4.437688997 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.38548098 seconds)
    (2/2) benchmarking "String"...
    done (took 1.385980857 seconds)
  done (took 4.142600663 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.381522964 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.410857185 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.381139512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.550978199 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.425799374 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.381649108 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.380749953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.383240275 seconds)
  done (took 18.2860214 seconds)
done (took 33.034688821 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.415103775 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.561709243 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.652004882 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.381813167 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.384384431 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.381801963 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.383570507 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.396235426 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.389321838 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.38828812 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.729310848 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.65388884 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.382111028 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.794779303 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.382387477 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.389170723 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.380739299 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.612686691 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.380677359 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.42739325 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.383824707 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.390202628 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.391722568 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.398773889 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.48159926 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.384804181 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.442966516 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.38056417 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.570118561 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.411923459 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.423525552 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.379966271 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.441728834 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.381380435 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.380812657 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.392678778 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.578749839 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.485324881 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.399340148 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.38952917 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.578603781 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.396721258 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.388911672 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.389995592 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.38523845 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.405661278 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.628134651 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.480895027 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.386936448 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.388419314 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.420687821 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.766545951 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.392402193 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.386308999 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.38568484 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.609409678 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.389173702 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.422149374 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.400340429 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.389541309 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.390105971 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.3894522 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.410646693 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.383045136 seconds)
  done (took 155.895845302 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.380913875 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.381102092 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.381457076 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.383596305 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.381412731 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.381370711 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.381400789 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.380112209 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.381359344 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.387180513 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.381314823 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.382352701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.381200688 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.327305251 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.381155664 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.407253031 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.384097371 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.381490576 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.381805113 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.381306166 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.390634145 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.381789414 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.382403998 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.381628209 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.407552809 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.441140603 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.403783018 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.385162003 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.380647732 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.380890242 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.411556847 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.386258367 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.881476222 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.234454263 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.397521354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.399546505 seconds)
  done (took 86.628477462 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.379817487 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.380202482 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.381048341 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.406985702 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.380083181 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852622931 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852489887 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.355833756 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.91924036 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.799303059 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.453499759 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.517747641 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.380208196 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.466283026 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.394993252 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.381473134 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.423539865 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.405551515 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.381863808 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.380698038 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85195643 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.394357553 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.392775197 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.538227484 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.380822878 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407256817 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.813039883 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.380783848 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406559575 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.761326541 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.407653367 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.38151325 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.632901383 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.340940447 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.488664112 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.383060773 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407526433 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.380734402 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.650289393 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.380822492 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.381151387 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.385803255 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906872758 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.380350694 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.851229106 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.381441685 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233887972 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.380338818 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.38141679 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.486925122 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.824304398 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.380552862 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.382172317 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.383092606 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.381097276 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.380926244 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.407108825 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.447432308 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.525743764 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.381200232 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.380813298 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.383773061 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.406803948 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.380569309 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38033347 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.848732604 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.441712618 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.155648704 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851975031 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381527141 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.477021567 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.470454046 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.496259389 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.381249507 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.380537993 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.380499574 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.380879038 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.485241258 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.380582547 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.381120461 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.739507195 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.53808611 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.381806672 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.381076552 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.428332001 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.471785412 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.380987063 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623073539 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.381321169 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.379899202 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995793139 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.469118977 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.380654827 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.380184825 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.381304793 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.3805582 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.739894225 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852890591 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.554010958 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.381457111 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.446878672 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.38159821 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.737862882 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.838963508 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.945997128 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.38222973 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.486672226 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.539596033 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.382239829 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.380821522 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.424150737 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.381402159 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.440014391 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.381099545 seconds)
  done (took 384.511259968 seconds)
done (took 628.406513991 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.384653834 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.388065126 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.386975145 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.392296937 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.39037294 seconds)
  done (took 13.314215619 seconds)
done (took 14.684652766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598670381 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.598004108 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.442930385 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.410779302 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.507859138 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.558233722 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.418872084 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.599817332 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599507691 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.55518134 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.405836373 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.427468187 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505203707 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.503398114 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.598727052 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.449534686 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.597376223 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.599200867 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502545206 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.451217702 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.42289746 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.598239302 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.405895905 seconds)
  done (took 36.137438649 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.727205156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.755541621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.433045518 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.739363208 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.417335005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.757032033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.604803858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.603813986 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.595575553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.442710407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.399811019 seconds)
  done (took 18.856781797 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.690489112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.697799465 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.435527651 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.695903413 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.419147308 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.712849189 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.574103873 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.569572874 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.572485932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.41755837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.400941088 seconds)
  done (took 18.566066082 seconds)
done (took 74.940366864 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.413099987 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.46443888 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.396322172 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.396813584 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.395756009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.395781963 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.397913556 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.396301935 seconds)
  done (took 12.636085293 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.395438201 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.394997787 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.395918079 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.395059438 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.394602148 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.394637823 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.3945916 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.395104608 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.395359123 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.394918853 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.395417334 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.394664658 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.394719829 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.39438721 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.395114716 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.394387219 seconds)
  done (took 23.700358857 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.397044517 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.394466654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.395072838 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.395001784 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.395650022 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.395432732 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.397663741 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.395065417 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.395959376 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.394364487 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.395634385 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.39459877 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.394719387 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.394105598 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.395223704 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.398071118 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.394523581 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.394998256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.399805497 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.394560023 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.394760944 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.394641498 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.395004834 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.39446568 seconds)
  done (took 34.871098327 seconds)
done (took 72.587196162 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.388621714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.399515233 seconds)
  done (took 6.168239575 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.791973799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.846480383 seconds)
  done (took 5.017336923 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.393574623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.393058359 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.394694454 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.394514379 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.393254151 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.39325096 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.394498526 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.393378319 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.393441163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.396231343 seconds)
  done (took 15.318519901 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.393068043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.394010453 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.393467794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.393522018 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.393467117 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.392851434 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.394241513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.393706172 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.393532742 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.392823019 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.394194966 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.393865948 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.393775667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.393593887 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.393743604 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.393754932 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.393949725 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.394022502 seconds)
  done (took 26.4645368 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.409065593 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.416965418 seconds)
  done (took 4.204039581 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.527846583 seconds)
    (2/7) benchmarking "second"...
    done (took 1.434686347 seconds)
    (3/7) benchmarking "month"...
    done (took 1.50172422 seconds)
    (4/7) benchmarking "year"...
    done (took 1.491747882 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.434955013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.422270141 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.434853517 seconds)
  done (took 11.626272039 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.393946695 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.648008679 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.790439168 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.129291682 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.394644631 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.397487716 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.184893322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.39733649 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.399591565 seconds)
  done (took 16.113969171 seconds)
done (took 86.291688372 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.395638353 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.38874872 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.405814927 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.394969703 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.815772351 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.409289156 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.389832421 seconds)
done (took 17.577610794 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.391618834 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.391023619 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.397698436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.387967748 seconds)
  done (took 10.946137432 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.339179541 seconds)
    (2/2) benchmarking "read"...
    done (took 1.710040677 seconds)
  done (took 5.427938539 seconds)
done (took 17.752001763 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394381075 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.393553787 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.393526958 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.393613267 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.39349082 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.393633573 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.394644145 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.394618437 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.394194774 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.393071913 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.3938442 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.395389536 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.393553265 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393969432 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393592532 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394123292 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393456333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.394714702 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394608533 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3947913 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39391263 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.393727531 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.393668681 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.39337157 seconds)
  done (took 34.8353569 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.393751031 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.39403158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.393560555 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.394008771 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.393860967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.393472063 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.393153574 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.393371599 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.39342157 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.39321922 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393500936 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.393118255 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.393105418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.394003642 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393311823 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.394125135 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.393777788 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395532041 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393384357 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.393613624 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.394360813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394219353 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.393678785 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393476526 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.394336793 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393900322 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.394015057 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.393433002 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.393600463 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.393511688 seconds)
  done (took 43.191875033 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.396939829 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.397983662 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.393339279 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.394423537 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.393565631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.393549389 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.394329748 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.393631104 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.39296006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.393071054 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.393538928 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.393360182 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.393127178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.393933023 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.393372123 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.394548113 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.393744271 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.393596995 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.395537982 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.394920069 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.394113069 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.393412604 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.394043665 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.393922101 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.393262009 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.394277877 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.393732732 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.393300177 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.394065152 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.393972465 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.394669536 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.394542625 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.394707769 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.393824339 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.393954519 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.394134871 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.397387113 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.397857201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.39414255 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.393398746 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.392900905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.3926074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.3932458 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.392930143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.393219165 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.392899916 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.393430919 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.39352756 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.395719946 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.393274024 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.393454397 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.39412353 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.393396905 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.393151267 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.393558408 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.393395721 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.393056421 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.393447787 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.394376155 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.393191744 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.393796794 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.39351727 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.393305979 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.393627957 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.394437618 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.393572215 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.393287559 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.393493963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.393441949 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.394275772 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.393601658 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.394113386 seconds)
  done (took 101.744988264 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.393777945 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.39397437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.394138246 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.393763119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393536888 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.394079139 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.393717601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396127276 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393323912 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.393784611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393608876 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394670554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393715784 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.393914782 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393688982 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.393483706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.394059348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393652585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.394057084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.39499753 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.393577044 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.394369649 seconds)
  done (took 32.047739768 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393687458 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.394659727 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.393374468 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395072088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.395357503 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.395628721 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.394454267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39451648 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394633772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394685195 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395059899 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394996977 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.396070662 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394162634 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393566483 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.397457125 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394202222 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.394667145 seconds)
  done (took 26.485846955 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.393692399 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.393459533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.393122907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.392936246 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.393941357 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.393671113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393683161 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.393736555 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.3933023 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.394068879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.394402307 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393726196 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.394059724 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393704337 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39362204 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.39409243 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.394166381 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393636635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.394356874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394127961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.394341506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394092523 seconds)
  done (took 32.043297638 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393849494 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.393557892 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.394296438 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.39379902 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.39394138 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.393786322 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.396280981 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.394291845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.394998054 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.394085587 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393892802 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.393734597 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.395556411 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.39412383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.39390157 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393606353 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.39351951 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.393763964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393551631 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394039808 seconds)
  done (took 29.261917276 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3957971 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395826987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395617248 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395345017 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39569712 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.395436765 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395721069 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.395596167 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.395145381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.397112176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395704568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396244142 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395923754 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395673891 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.395427554 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395967641 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.398015082 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.396183957 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395721927 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396175128 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.398510255 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.395861342 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.395641238 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.395625783 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396089432 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.395765346 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395624534 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395132732 seconds)
  done (took 40.466622206 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394352082 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.39477211 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.393903351 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.39403705 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.395106672 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.394415524 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.394385501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.394008207 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.393711458 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.394614758 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.394629618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.393931366 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.394588969 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.394153902 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.393675426 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.394821161 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39444548 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.395022642 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39419651 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395845003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.39401765 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393943435 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.393872293 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.393614858 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39369784 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.393944978 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394299138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.393764979 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394372473 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.393977343 seconds)
  done (took 43.208510427 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.452134765 seconds)
    (2/2) benchmarking "in"...
    done (took 1.451427779 seconds)
  done (took 4.282535054 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.394308706 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.394109149 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.39403363 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.394103669 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.395283406 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.394302943 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.39416237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.394074724 seconds)
  done (took 12.533961373 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.398138497 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.395355341 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.394918104 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.394275204 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.394423068 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.396783876 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.404447094 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.399137733 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.398087627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.398676725 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.399723202 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.399641236 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.399373908 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.398635907 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.397004727 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.402199357 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.396740985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.395135238 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.394916873 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.394070575 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394556835 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.398370946 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.400551056 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.398685023 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.395733157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.405246682 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.403944749 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.397158125 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.395897342 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.401052408 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.397441181 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.395567144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.394411628 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.394207648 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.394242457 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.394357426 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.405087184 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.40160911 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.403770182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39822734 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.396280233 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.394292476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.397538983 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.398708517 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.398396583 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.396791886 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.39402774 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.393766737 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.395122804 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.399490989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.397324408 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.395579522 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.394962714 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.400709663 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.399910337 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.405518391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.400323738 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.397523576 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.400404198 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.403129499 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.412838454 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.40658457 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402112867 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.396751657 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.404089589 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.40733698 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.405219754 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.399105837 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.395374085 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.394564893 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.405015657 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.417345439 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.414246627 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.396664352 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.394665875 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.394631218 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.395950024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395346751 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.404594567 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.403643214 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.397195452 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.39497505 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.404912963 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406185745 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.396207844 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.396191059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.394594487 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.395146844 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.395833254 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404030537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.400129269 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.394635821 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.396254469 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.397280771 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.398495907 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.395491592 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.396620204 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.398252293 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.395610423 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.394549079 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394809549 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400905614 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.400769122 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396476622 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394681266 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.404731429 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.398112728 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.395716648 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.404673175 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.398238505 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.394510874 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.397273357 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.401086306 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.396480767 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.39808733 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.40029522 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.396421812 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.397663775 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.397439595 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.394366053 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404444879 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.409647446 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.397243213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.394480889 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.400006629 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.400154067 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394965405 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.399065109 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.396957529 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.394362138 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.394555256 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.399780011 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.397380917 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.397116539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.396208516 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.397813226 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.395716626 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.394348431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.39513077 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.397424241 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.399015108 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.398704064 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.398751142 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.400644828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.396547018 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.399004568 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.407151057 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.400374954 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.398508595 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.399185149 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.396178045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395038754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.397772157 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.396699444 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.396717403 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395999855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.396193942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.395930959 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394860819 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.394285881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395348201 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.3970643 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.400452604 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.396671034 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.401228536 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.398494097 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.396217473 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.394731481 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.394924221 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.397174901 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.394849475 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.395221889 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.399790145 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.397837348 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.394673786 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.394831226 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.398948134 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397336828 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.395233269 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394646189 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.398592699 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.400029225 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.396123191 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.403379317 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.398967362 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395241208 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.394264483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.396111967 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.397254035 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.39559352 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.398737407 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.39916836 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.41369466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.416081748 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.397044008 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.394919552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.395769599 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.395557306 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.40034198 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.3976011 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.39455962 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395108938 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396280917 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3959401 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.397576042 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.396595311 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.395334422 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.396124648 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.395961523 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.395665992 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395147642 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.397572174 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39908635 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.396139718 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394481082 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395885964 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.396191621 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.395933826 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.396175232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.396856837 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.395925894 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.395127127 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.403752674 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.400225015 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.398768241 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401107443 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.399538651 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.396736673 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.395998371 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39908585 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.399113127 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.405228165 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.402382177 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.398315762 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.405099857 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.401169782 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.397006558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.400305351 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.397313696 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.395495137 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.398691684 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.399807744 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.395227939 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.394973704 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.394810382 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.396559519 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395894721 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.403444567 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.3983419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.395927729 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.395805438 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.39741729 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.396263415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.397531233 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.401480988 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.39865647 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.400701437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.397061687 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.395391784 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.398289778 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.396421791 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.394988628 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.394819812 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398400066 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.399714563 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.401333061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.40013867 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.398993228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.397638414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.395242825 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.396845114 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.395992742 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.39793966 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.414639784 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.411789163 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.411624016 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.41035204 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.396657376 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.402836959 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.400139004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.397820366 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.397565383 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.39870575 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.397505816 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.398993356 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.395865751 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.398489405 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.396529368 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.399327769 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.398998586 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.395639535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.396043721 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.397069129 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.396257567 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.395459703 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.395232585 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.395859086 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.396231776 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.399763349 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400775304 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.39917838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.398220932 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40525849 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.402916749 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.399464947 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.400036376 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.397922043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.397118382 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.39826934 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.39687991 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.399415709 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.399377084 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.399382124 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.401186937 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.397992583 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.405706781 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.398237966 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.39912598 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.398735999 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.394868701 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.395382101 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.398088977 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.396059446 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.404832231 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.400062179 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.397752275 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.398228985 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395266836 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.395387983 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.394894446 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.395274138 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395128188 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.395304519 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.405932778 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.402127056 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.397561924 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.400286441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.397524386 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.395613391 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.394907201 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.396225089 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.402791369 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.397957947 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.397682039 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.399750818 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.400120039 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.395977191 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.395388773 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.395089274 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.3957776 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.395116668 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.404820642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.40344796 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397483446 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.395775754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.406513358 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.399338844 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.405090434 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.400614377 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.397473373 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.397189649 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.394733255 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.398046972 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.397379432 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.399917583 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.396570631 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.396820318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.397273246 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.395671127 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.399127405 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.399582067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.398231479 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.396592185 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405694998 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40668522 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.396972402 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.397783654 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.395639491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.397017334 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.396907209 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.395711581 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.396773715 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.40039833 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404299948 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399076625 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.397142147 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.396716765 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.397618126 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.396361456 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.395087466 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.394735472 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.395407273 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.395049338 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.397165299 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.395773072 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401980222 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.397557298 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.397779063 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.399524011 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.397359254 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.404701404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.399372018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.398220286 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.396983001 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.396708153 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.397621125 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.400244443 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.397183912 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39812167 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.396928543 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.396946305 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400271979 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.399315526 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.400542681 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.401443713 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.39653922 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.397606015 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.398285941 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396351412 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.395981136 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395567612 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.398391555 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.397484709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.39774605 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.396801515 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.396287501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.397596251 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.396550362 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.399477872 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.401591579 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.398954693 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.39730463 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.395985282 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.395244598 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.397722121 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.398886787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.40710838 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405918769 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.402985095 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.399977385 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.396812399 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.398095131 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405925898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.405113027 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.398507697 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.399099608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.397004436 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.399906965 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.398616012 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.40000281 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.396438055 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.404961226 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.402128155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.398293692 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.407613842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.404347168 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.398091349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.39745622 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.398272767 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.398530809 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.396323877 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.395120656 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.396896468 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.406183329 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.404075682 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397155681 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399794737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.402070225 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.396689204 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396377844 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395000896 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.398719778 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.39755149 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.398162455 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.397628128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39580301 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.39551742 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.396558372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.399001691 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.400295395 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.399398444 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.396398188 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399342761 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.39998393 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.399528326 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.397306914 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395669263 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.395337499 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.395621785 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.397286786 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39615822 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.397690657 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.401346491 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.399296795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.397933785 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.396123243 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395842339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.399518891 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.404939037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.400264946 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.395384876 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.396727184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.399136317 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.401914959 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.398927173 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.396627426 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397333278 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.40074398 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.397258297 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.396574158 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.395331613 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.399869707 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.410740961 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.401210873 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398132853 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.400421422 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.403419669 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.398658494 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.395547012 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.396050348 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.399245162 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.401611926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.399314918 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.39624318 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405638331 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.40251165 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.398606077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.396746563 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.401795452 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.401020322 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.402457414 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398605619 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.395864828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.40103896 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.410557394 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.399557054 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.40535048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415110062 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.40349723 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.400090343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.397377559 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396467529 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.396835922 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.399345408 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.397374736 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.395367987 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395353068 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.39591557 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.397130551 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.400274952 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.402610136 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.404062124 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.400611722 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.397240356 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.399376567 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.396533457 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.396002376 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.397067969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.396197796 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.39760456 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.395646107 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.398319366 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.41654663 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.416194493 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.397069306 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.396049585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.395827288 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.40100837 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.403210222 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.40357862 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.398774686 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.395963618 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.396034284 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.399298976 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.398545573 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.396106969 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.398206044 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.398435967 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398533641 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.397450425 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.410898308 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.407950915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.403402301 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.401684054 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397227841 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.396255524 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399043328 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397920488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396130394 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.40198929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.400570655 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399867151 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.397079166 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.395799866 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.400539686 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.398954886 seconds)
  done (took 835.01569403 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.398278745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395749609 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395516386 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395746355 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.397249064 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396058721 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395763777 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395906389 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.395852354 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39707414 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.396257625 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395305318 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.396819513 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.398065482 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396611462 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.396676446 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395625805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396080843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395739285 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395360642 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.39685443 seconds)
  done (took 30.704455156 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.395882137 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.395972378 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396557843 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398070481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395340382 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.395746675 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.39598223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395526407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396328183 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395554146 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.396333743 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395486095 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.395528759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.395611976 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395495321 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396286803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.395935094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395099525 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.398335225 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395862127 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.395555774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.395709556 seconds)
  done (took 32.093718427 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.395934317 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.395763499 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.397382787 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.396831707 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.395809079 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.39532825 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.396307349 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.395914237 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.396421402 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.398110297 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.398174535 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.40009467 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.400914505 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.39967697 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.400103143 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.397611899 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.396224465 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.396634122 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.397004824 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.395981165 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.40371678 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.400356383 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.396249578 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.397172606 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.397034509 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.396321364 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.396011483 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.396176894 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.39756862 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.398024327 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.3969866 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.401012518 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.400615687 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.399550417 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.397656192 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.396468125 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.396599164 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.395951503 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.39630894 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.405868903 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.406330652 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.39665214 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.414881235 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.408036637 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.396015678 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.400112358 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.399892181 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.395322301 seconds)
  done (took 68.51193574 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.397603021 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.398339489 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.394757831 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.395516922 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.394816748 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.394806245 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.39458591 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.394865807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.397485801 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.394641861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.394924926 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.395447204 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.394581569 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.395081351 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.394661463 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.396960709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.394248 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39441423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.394477206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.394393788 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.394227511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.394400001 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.396266303 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.394290351 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.394266795 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.395810462 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39420828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.394372546 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.394261248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.394211343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.394588962 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.394023726 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.395374428 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.395506528 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.394798795 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.394226124 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.394927549 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.395502896 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.394351998 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.394672997 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.394644344 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.394418878 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.394071642 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394472377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.394396119 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.395090676 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39441198 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.39443377 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.394361208 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.3943683 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.39473859 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.394388802 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.394834642 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.39378613 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.395513197 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.396968339 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.394266739 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.395018701 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.394437773 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.394245462 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.394345943 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.394147313 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.394350563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.394164736 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.393868194 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.394542978 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.394202238 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39399922 seconds)
  done (took 96.232013531 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394376369 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.393930373 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.394389413 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.394240662 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.39458498 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.394625075 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.394368275 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.394208663 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.394107781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.394111289 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394877257 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39426758 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395736052 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394741034 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.394382702 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395387594 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394466011 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.39513838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396590942 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.394292418 seconds)
  done (took 29.272699625 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.39429629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39472159 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.39381864 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.394894742 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.394321736 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.394840311 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.394304799 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394247538 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394317848 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394108184 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395206544 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.395119859 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394538637 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394833247 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.395000233 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.39497318 seconds)
  done (took 23.693312318 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394863597 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39578685 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.394724441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.394622444 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.394553496 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.395133269 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.395360424 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.394727022 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.396188625 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.395186297 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.394344967 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.395671625 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.396417932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.394471101 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.394186531 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.395150548 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.393757049 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.393973778 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.395113185 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.394671953 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.395628186 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.394060853 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.394463693 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.394499854 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.39507443 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.394882675 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.394097169 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.394826604 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.394871348 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.394327139 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.394675291 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.394527742 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.394119782 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.394310167 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394548506 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.394257753 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.394381058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.394244608 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.394307907 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.394677355 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.39434175 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.395065333 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.394197154 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.395837304 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.396563987 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.393958391 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.393842727 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.395030606 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.393850522 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.393886838 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.393704334 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.394085674 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.395539884 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.394203454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.393979845 seconds)
  done (took 78.089773648 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393918396 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.393912671 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.393870268 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.395533899 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394278083 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.39422056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.39428391 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.395247004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39381273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.394025949 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395350198 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.394710221 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393725901 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.393749435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.394255795 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393509242 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394355594 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.395089535 seconds)
  done (took 26.477590306 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.395961954 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394194334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.394348092 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.393968616 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.39434235 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.395221174 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393736688 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.393743622 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393890079 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.394338999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39393946 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.394191279 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395310742 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.393263661 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.393596934 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39339041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.393525031 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393468412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.393813139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.392823192 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.393568903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.392131106 seconds)
  done (took 32.047174681 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.39409267 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.392705743 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.392967492 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.402867159 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.396005103 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.392773831 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.392774888 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.392900297 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.405689558 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.412058724 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.40750794 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.397098179 seconds)
  done (took 18.156734031 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392098943 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391744267 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.392501197 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391935871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392829551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394040179 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391130727 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391664445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391733966 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392870994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391827719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391323843 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392476769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392282746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391677464 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391889299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39185336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391718238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391346631 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39182859 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391485922 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391338239 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391136477 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391353836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391847398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391740947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391431492 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395614871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391320458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392324484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390976176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391741404 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391257345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392830962 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392450548 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392000314 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391181553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39130678 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392080048 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391385409 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.391183024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392492216 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390455156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391402499 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390706788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391197105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390980323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39170472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39350773 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391655829 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390677437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390491724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390660769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390797669 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389656287 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393435293 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391435813 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390192448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391749966 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39137614 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391018366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390116635 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390072952 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390916936 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390493052 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390614309 seconds)
  done (took 93.226334569 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389771188 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389888134 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390016181 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391177517 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391057023 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390560067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39000356 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390515552 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390221035 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390137663 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390082378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390254881 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390386437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38990854 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391179648 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390161359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389880968 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390403129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390077073 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390768771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390068781 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390357588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391914697 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390355071 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391799674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390803943 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389769518 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391183165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389934565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390309205 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390141479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390362304 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390386078 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.390219819 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390178091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390441375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390543862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391295186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390202919 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391736228 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389974448 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389899295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389897817 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390014812 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39132499 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390371193 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39165073 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389969047 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389453705 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389741869 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390946887 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390828303 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390650726 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392127552 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389270698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38943903 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389552249 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389358186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389750533 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389033829 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390600511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389036682 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389854437 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388950102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389130071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388872012 seconds)
  done (took 93.135993011 seconds)
done (took 1858.139270377 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.551959585 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.576267745 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.422280889 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.39654127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.416410538 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.401162332 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.876653378 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.575012209 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.831167184 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.040001619 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.704854519 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.509112816 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.382902059 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.58438603 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.484502461 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.388079662 seconds)
  done (took 34.515603441 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.414188077 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.397459819 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.487026654 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.393964355 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.414439526 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.544911488 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.439795351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.399069984 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.383783966 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.417491842 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.39021227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.412041923 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.393359517 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.258873636 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.73525749 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.547265491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.606227142 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.389736768 seconds)
  done (took 31.398988727 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724289036 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.587832363 seconds)
  done (took 5.685495455 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.407706557 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.393277425 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.39354683 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.390828038 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.38386465 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.384925861 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.389909401 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.390644144 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.382804385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.490391198 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.393365968 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.402683835 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.39264168 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.39249239 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.388582872 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.432313001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.524212689 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.390017143 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.388342628 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.396681224 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.390582496 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.487015207 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.427052505 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.388479234 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.488991193 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.382966447 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.393809617 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.39926931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.518668735 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.38919963 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.389046234 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.394054756 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.392070117 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.179987984 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.856342197 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.383370079 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.400448092 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.401302207 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.388776097 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.541699745 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.391788849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.396965593 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.384590782 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.831309933 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.518042313 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.497134714 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.382880112 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.391611398 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.392316256 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.457160713 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.390257833 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.39262175 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.427811999 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.20013686 seconds)
  done (took 88.133163266 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.457257202 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.383046344 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579553391 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.384386436 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.383122316 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.383430848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.385359809 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.597291806 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.443150107 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.385981186 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.644085884 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861748039 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.388588756 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.459654812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.448227759 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.441129732 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.382374078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.3826174 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.386080328 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.388847693 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859110869 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383386602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.38296554 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.580093378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.416973799 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876621043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.381716531 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.39072816 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.381968478 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.383246529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840744385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.393979586 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383096141 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.387369204 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.626745266 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.70430168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6797365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.389080232 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.382577731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.382236527 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.387356044 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865724864 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704658417 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.382371138 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.382122702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866618631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383155161 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.392047195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.383656792 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.64893464 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.382432875 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.382417583 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.382615213 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.383502032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.382328033 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.485440585 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.462583741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.875945774 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383025914 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.382785694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.461109931 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.381617484 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386711554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.389167141 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.39080388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.706880172 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.286479878 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.381790887 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700724107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828401123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.382936351 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901405714 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.382397111 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.400440715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.53749865 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.381700895 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.382326146 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879546779 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421674144 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382149548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683778866 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.383485804 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.642108029 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.382961132 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381962881 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878067806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.383783896 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.445666764 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.382028302 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.382316094 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.382444082 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.388412767 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.629351579 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.432436843 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.382651394 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.382286591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.419516289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.38354657 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.38303033 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.389895066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905216097 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.382483073 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.3822125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.383050952 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.381932443 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.383403057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.383993948 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.38550577 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676381969 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.382793393 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.383456089 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.387057821 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.38166271 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.391197213 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.580743782 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.384478024 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.622030143 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.387439727 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391732376 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383651697 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.383364271 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.393484274 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.38149513 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.388873525 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.38154288 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.717202926 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.382400749 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.382398949 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.381823819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.381421786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.382235559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.383675059 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.442269041 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.386727353 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059711375 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427299534 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.438713429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.382114385 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.396172382 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.382403275 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.393234768 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.386742856 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739549641 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.624418043 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.282060439 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.382337726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.382890047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.12903755 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.4669019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582662859 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.386161158 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382090029 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.687208065 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.287636734 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.383044718 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.382181265 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.38478417 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.659918151 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.382874083 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744340228 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.856953702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383749489 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.386989244 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.119937842 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.382543 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.383970553 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.384644527 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637590211 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.382005414 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.382226803 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.381966639 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.383179766 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.383714374 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.384896904 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.390443041 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.382973657 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.382898634 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.930459399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.590773556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.38324031 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.385180264 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877923329 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.394969984 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382538295 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.387580256 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.382949255 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.382168594 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.438574633 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.385897861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.461459079 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.385501183 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.390149467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895158383 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.382112807 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.384690316 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.588228866 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98002028 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.383247395 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.381515917 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.382265821 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.444360618 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908631834 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.447565159 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.618716392 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.389947342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.41642758 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.382301047 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.400900765 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903034858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.385954068 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382954847 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052752619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.383343939 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.151236315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.382081599 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.384718916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969599131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.383238851 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.388852408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.382268872 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382843446 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.689127883 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.382867017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.425466038 seconds)
  done (took 513.153962528 seconds)
done (took 674.260192491 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.378259467 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.378892466 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.379743823 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.377475607 seconds)
  done (took 10.882134114 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.383411097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.384015763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.383859423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.382293235 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.383470542 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.385833137 seconds)
  done (took 9.672603361 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.378898122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.379759586 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.380299498 seconds)
  done (took 8.505986314 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.543648631 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.382296229 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.668744975 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.381696371 seconds)
  done (took 9.347027339 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.384839056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.384102852 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.38460791 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.383539236 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.384218016 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.384965314 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.383384984 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.383281282 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.384722209 seconds)
  done (took 13.827385948 seconds)
done (took 53.602119634 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.378937265 seconds)
    (2/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.380229185 seconds)
    (3/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.946729136 seconds)
    (4/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.916442789 seconds)
    (5/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.834993127 seconds)
    (6/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.380500668 seconds)
    (7/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.400380011 seconds)
    (8/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.770992124 seconds)
    (9/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.408526682 seconds)
    (10/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.836249935 seconds)
    (11/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.605868268 seconds)
    (12/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.983654763 seconds)
    (13/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.29309136 seconds)
    (14/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.39741002 seconds)
    (15/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.378943144 seconds)
    (16/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.392057828 seconds)
    (17/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.593835695 seconds)
    (18/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.690067826 seconds)
    (19/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.728917508 seconds)
    (20/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.380714991 seconds)
    (21/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.384540561 seconds)
    (22/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.906692943 seconds)
    (23/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.381036103 seconds)
    (24/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.384620461 seconds)
    (25/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.87872519 seconds)
    (26/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.0669794 seconds)
    (27/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.690457757 seconds)
    (28/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.380316726 seconds)
    (29/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.383226322 seconds)
    (30/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.71202639 seconds)
    (31/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.306763613 seconds)
    (32/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.381497917 seconds)
    (33/240) benchmarking ("perf_sum", Float64, false)...
    done (took 1.820464904 seconds)
    (34/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.380996255 seconds)
    (35/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.382266697 seconds)
    (36/240) benchmarking ("perf_sum", Bool, true)...
    done (took 1.650047546 seconds)
    (37/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.39534855 seconds)
    (38/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.390328352 seconds)
    (39/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.303845308 seconds)
    (40/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068094502 seconds)
    (41/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.971809903 seconds)
    (42/240) benchmarking ("map", abs, Int64, false)...
    done (took 1.657540477 seconds)
    (43/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.387802742 seconds)
    (44/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.311998441 seconds)
    (45/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.985948681 seconds)
    (46/240) benchmarking ("map", abs, Int8, false)...
    done (took 1.501530681 seconds)
    (47/240) benchmarking ("perf_countequals", "Int8")...
    done (took 1.466836466 seconds)
    (48/240) benchmarking ("map", abs, BigInt, false)...
    done (took 2.379773607 seconds)
    (49/240) benchmarking ("perf_sum", Bool, false)...
    done (took 1.676880055 seconds)
    (50/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.202469366 seconds)
    (51/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.602057114 seconds)
    (52/240) benchmarking ("map", identity, Bool, true)...
    done (took 1.769566094 seconds)
    (53/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.842601297 seconds)
    (54/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.38099734 seconds)
    (55/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.124598654 seconds)
    (56/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.389022959 seconds)
    (57/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.381238321 seconds)
    (58/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.863680327 seconds)
    (59/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.380395301 seconds)
    (60/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.394932268 seconds)
    (61/240) benchmarking ("map", abs, Float64, false)...
    done (took 1.64242967 seconds)
    (62/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.245807511 seconds)
    (63/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392930865 seconds)
    (64/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.3783237 seconds)
    (65/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.929397184 seconds)
    (66/240) benchmarking ("perf_sum", Int8, true)...
    done (took 1.656265728 seconds)
    (67/240) benchmarking ("map", abs, Bool, true)...
    done (took 1.766599453 seconds)
    (68/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.393034001 seconds)
    (69/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.866043615 seconds)
    (70/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.386946684 seconds)
    (71/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699667257 seconds)
    (72/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.355520765 seconds)
    (73/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.390557774 seconds)
    (74/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.120412265 seconds)
    (75/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.932464415 seconds)
    (76/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.380391453 seconds)
    (77/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.780850478 seconds)
    (78/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.708940204 seconds)
    (79/240) benchmarking ("map", abs, Bool, false)...
    done (took 1.49907822 seconds)
    (80/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.392554871 seconds)
    (81/240) benchmarking ("map", identity, Int64, true)...
    done (took 2.076497708 seconds)
    (82/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.381008576 seconds)
    (83/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.386983597 seconds)
    (84/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.385497793 seconds)
    (85/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.349945726 seconds)
    (86/240) benchmarking ("perf_countequals", "Float32")...
    done (took 1.473075418 seconds)
    (87/240) benchmarking ("map", identity, Float32, true)...
    done (took 2.057106538 seconds)
    (88/240) benchmarking ("perf_sum", Int8, false)...
    done (took 1.675457807 seconds)
    (89/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.380674123 seconds)
    (90/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.071291771 seconds)
    (91/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.535676473 seconds)
    (92/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.380070192 seconds)
    (93/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.383551236 seconds)
    (94/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.381008355 seconds)
    (95/240) benchmarking ("map", abs, Float32, true)...
    done (took 2.053767671 seconds)
    (96/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.025290829 seconds)
    (97/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.377958184 seconds)
    (98/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.849084308 seconds)
    (99/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.386961452 seconds)
    (100/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.996064756 seconds)
    (101/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.196814411 seconds)
    (102/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.382903373 seconds)
    (103/240) benchmarking ("perf_countequals", "Int64")...
    done (took 1.452167737 seconds)
    (104/240) benchmarking ("perf_sum", Float32, false)...
    done (took 1.839180956 seconds)
    (105/240) benchmarking ("map", identity, Int8, false)...
    done (took 1.487336308 seconds)
    (106/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.371447951 seconds)
    (107/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.720505118 seconds)
    (108/240) benchmarking ("perf_countequals", "Bool")...
    done (took 1.456170128 seconds)
    (109/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.378279856 seconds)
    (110/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.365864911 seconds)
    (111/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.368106022 seconds)
    (112/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.582942909 seconds)
    (113/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.36710167 seconds)
    (114/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.366985967 seconds)
    (115/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.527802655 seconds)
    (116/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.373629218 seconds)
    (117/240) benchmarking ("map", abs, Float64, true)...
    done (took 2.03325489 seconds)
    (118/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.790262211 seconds)
    (119/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.370328189 seconds)
    (120/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.356903778 seconds)
    (121/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.775547853 seconds)
    (122/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.683123304 seconds)
    (123/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.676876362 seconds)
    (124/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.697289127 seconds)
    (125/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.331962624 seconds)
    (126/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365682818 seconds)
    (127/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.349498421 seconds)
    (128/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.362498048 seconds)
    (129/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.09443219 seconds)
    (130/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.363620685 seconds)
    (131/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.350965307 seconds)
    (132/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.891639489 seconds)
    (133/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.356637974 seconds)
    (134/240) benchmarking ("perf_sum", Int64, true)...
    done (took 1.846434814 seconds)
    (135/240) benchmarking ("map", identity, Float64, false)...
    done (took 1.615717547 seconds)
    (136/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.889018987 seconds)
    (137/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.987896106 seconds)
    (138/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.247394456 seconds)
    (139/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.345841003 seconds)
    (140/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.356085056 seconds)
    (141/240) benchmarking ("map", identity, Float64, true)...
    done (took 2.016534461 seconds)
    (142/240) benchmarking ("map", identity, Int64, false)...
    done (took 1.617968515 seconds)
    (143/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.357122867 seconds)
    (144/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.501390526 seconds)
    (145/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.356385078 seconds)
    (146/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.350206239 seconds)
    (147/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.34381322 seconds)
    (148/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.359024452 seconds)
    (149/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.027346761 seconds)
    (150/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358587051 seconds)
    (151/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356933064 seconds)
    (152/240) benchmarking ("map", abs, BigInt, true)...
    done (took 2.353062965 seconds)
    (153/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.357358236 seconds)
    (154/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.56374894 seconds)
    (155/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.343794271 seconds)
    (156/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343104545 seconds)
    (157/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.037469448 seconds)
    (158/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.688521034 seconds)
    (159/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.345668571 seconds)
    (160/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.982806548 seconds)
    (161/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.297206608 seconds)
    (162/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.50205462 seconds)
    (163/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.768611082 seconds)
    (164/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.345615934 seconds)
    (165/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.345574892 seconds)
    (166/240) benchmarking ("map", abs, Int64, true)...
    done (took 2.048064951 seconds)
    (167/240) benchmarking ("map", abs, Int8, true)...
    done (took 1.752462352 seconds)
    (168/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.570802859 seconds)
    (169/240) benchmarking ("map", abs, Float32, false)...
    done (took 1.607318215 seconds)
    (170/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.486161392 seconds)
    (171/240) benchmarking ("perf_countequals", "Float64")...
    done (took 1.435874148 seconds)
    (172/240) benchmarking ("perf_sum", Float64, true)...
    done (took 1.753518305 seconds)
    (173/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.91152862 seconds)
    (174/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.344650959 seconds)
    (175/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.344829464 seconds)
    (176/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.351162538 seconds)
    (177/240) benchmarking ("perf_sum", Int64, false)...
    done (took 1.873029977 seconds)
    (178/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.355112667 seconds)
    (179/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.834002794 seconds)
    (180/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.993805135 seconds)
    (181/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.349542096 seconds)
    (182/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.334783937 seconds)
    (183/240) benchmarking ("map", identity, Bool, false)...
    done (took 1.457054516 seconds)
    (184/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.776057252 seconds)
    (185/240) benchmarking ("map", identity, BigInt, true)...
    done (took 1.74740816 seconds)
    (186/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.562109362 seconds)
    (187/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.330420625 seconds)
    (188/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.807206971 seconds)
    (189/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.122236662 seconds)
    (190/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.336357817 seconds)
    (191/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.660889851 seconds)
    (192/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.326949938 seconds)
    (193/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.933313654 seconds)
    (194/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.542854651 seconds)
    (195/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.33060117 seconds)
    (196/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.339157247 seconds)
    (197/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.338991758 seconds)
    (198/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.774444504 seconds)
    (199/240) benchmarking ("map", identity, Int8, true)...
    done (took 1.740960543 seconds)
    (200/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.33919811 seconds)
    (201/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.335991512 seconds)
    (202/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.042041816 seconds)
    (203/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.322562415 seconds)
    (204/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.435180529 seconds)
    (205/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.321574859 seconds)
    (206/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.341930646 seconds)
    (207/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.336278247 seconds)
    (208/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.307020958 seconds)
    (209/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.321056389 seconds)
    (210/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.324785068 seconds)
    (211/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.556067122 seconds)
    (212/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.550545821 seconds)
    (213/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.563169659 seconds)
    (214/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.334696718 seconds)
    (215/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.471864402 seconds)
    (216/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.322438063 seconds)
    (217/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.477676452 seconds)
    (218/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.321017951 seconds)
    (219/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.973514683 seconds)
    (220/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.216401815 seconds)
    (221/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.470941122 seconds)
    (222/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.332921938 seconds)
    (223/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.478311717 seconds)
    (224/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.132168031 seconds)
    (225/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338333631 seconds)
    (226/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.458340099 seconds)
    (227/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.517202725 seconds)
    (228/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.930527344 seconds)
    (229/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.295101509 seconds)
    (230/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.321298806 seconds)
    (231/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.909634326 seconds)
    (232/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.526938094 seconds)
    (233/240) benchmarking ("perf_sum", Float32, true)...
    done (took 1.763112868 seconds)
    (234/240) benchmarking ("map", identity, BigInt, false)...
    done (took 1.463335774 seconds)
    (235/240) benchmarking ("map", identity, Float32, false)...
    done (took 1.580672754 seconds)
    (236/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.32204955 seconds)
    (237/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.62379154 seconds)
    (238/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.181231236 seconds)
    (239/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.121413579 seconds)
    (240/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.340489424 seconds)
  done (took 477.619291259 seconds)
done (took 478.987316743 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.34013943 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348731998 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.328368688 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.328602148 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.344987123 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.330218479 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347544938 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.333754144 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.335342804 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.330228859 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.329792874 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.008323663 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.332387368 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.330194329 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.329551834 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329560275 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320743376 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.333376905 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.329349403 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.342173288 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.329291834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32981594 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.330123415 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.005757688 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.333983008 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334834463 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.333878313 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.334308162 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.344750353 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.334905572 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.33437491 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.345561766 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.320143127 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.32794235 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.326471436 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.334396683 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344439994 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.346371742 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.327462414 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.33136309 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322935652 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324498989 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.326883311 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.324688064 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325094983 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327588198 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.323305078 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33055814 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323042608 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322602689 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.312229198 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.356834363 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.322821723 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.319205811 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334829129 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319190166 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.327646487 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325411613 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.333982706 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323814601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.307010335 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.323138884 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.320931099 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.316187899 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.325218245 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.307047856 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.314751674 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.322354723 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307211861 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.323785712 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.307396013 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.326049182 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.319680666 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.318116297 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.323363129 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.3168796 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.313782634 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.315140384 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.326808639 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.316277197 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328156143 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317092574 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320830501 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.316751617 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317614092 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.307539206 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.335190852 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.31903823 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.32953722 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.331048757 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.325135557 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.331156379 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.319642828 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.314088447 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.328022434 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.325998341 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.321228524 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.320911823 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.321012149 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.333363741 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.307327413 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324736251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.313394601 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.313135909 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.316000689 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.317410633 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307620108 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.319654624 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.328753648 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.325578692 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.320498095 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.309225364 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.334726762 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336483281 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.328770194 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.320026727 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.314714029 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.307555214 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31346087 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.317837082 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.316832704 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.315240766 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334326749 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.31874672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.311858281 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.305753484 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.318616829 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315667547 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.328444627 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.332076833 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.323184089 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.315474569 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.319045933 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.315294544 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334109698 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.320792425 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.318066481 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321025825 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.31322416 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.312167068 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.331125954 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.330575245 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.314801798 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.322911727 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.310378376 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.314020902 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31653265 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314055466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.313888925 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.327677389 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.311608837 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.304327451 seconds)
done (took 223.944403012 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.310649715 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.310992155 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.443463208 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.311813282 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.45428471 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.310397369 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.311173859 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.321188059 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.312764517 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.310493375 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445892009 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.310953127 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.444612242 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455189073 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.443461732 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.311609654 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.310457859 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.311820586 seconds)
  done (took 28.726984177 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.387375445 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.383117929 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.415525055 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.311687143 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.362287514 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.417528782 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.312102117 seconds)
  done (took 10.885457551 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.31910424 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310343652 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374606223 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375179545 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.31100115 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502526032 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.324688107 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.310681165 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.374331945 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.311792541 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311460454 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.320295939 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.309885208 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374866828 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.325002307 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.430328558 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.314144324 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.311342055 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486167726 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311433818 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.320562338 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.36952852 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.324848273 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.311816889 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.319858277 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310986587 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.311495958 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310781982 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.388007588 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310559396 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.309921797 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310344812 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.311097401 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310547757 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.310502479 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.314287121 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.310529834 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.310902504 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311790667 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.312069461 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.311622608 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.336011756 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.31206173 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.311365031 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.311618482 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.311341493 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.369937603 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311666282 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.311570957 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.311203953 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.373853312 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3198982 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.311254711 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.310433118 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312432225 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311583489 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487076869 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374316015 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.311081236 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374584581 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.310841981 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310365263 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.310361316 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.310302072 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382219658 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.311380583 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374234238 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.310890054 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.504171438 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.335194769 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310941692 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.316936676 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.31679495 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.314386121 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.318864945 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.311485259 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314514009 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.31956587 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310864372 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.31123384 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503821913 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.310755476 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.333229508 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320725584 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310968064 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.373288079 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31101246 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.311070434 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397681487 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428775355 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.37539277 seconds)
  done (took 126.966786995 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.329871015 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.315966839 seconds)
  done (took 3.942216871 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315204356 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3119085 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.31159091 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.311481024 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.311289612 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.311368819 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.310933919 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313612299 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31214798 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.310196999 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.311329353 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.311499424 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.311034104 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.311454688 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.31081162 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.310674295 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.310911688 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310685822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310902644 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311265393 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.927792589 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.311799072 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313159362 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.311906259 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.31260301 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.31107029 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337495489 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.310575336 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.310716608 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.322080323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.313138865 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.311611756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.311907958 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.315750911 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.312165185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.31190048 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311420311 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.311656059 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310716705 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.311555619 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.311874532 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311166978 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.311102383 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.311748363 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.313258738 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.312554754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.312105053 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337857565 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.311385723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.312014113 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.311771269 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.311245515 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.311930691 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.313738244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.314257697 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315174877 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.312874178 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.310989394 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.311461778 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.312774484 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.311618468 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.312141683 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.31402251 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.312085918 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.311563058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.312425269 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.312878373 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.312512333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311233538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.310996491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.312224813 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.311198634 seconds)
  done (took 96.436976651 seconds)
done (took 268.255013451 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.200394884 seconds)
  done (took 4.495896068 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.59936181 seconds)
  done (took 3.895784798 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.078500231 seconds)
  done (took 10.374845622 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.375422565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.32913597 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.307835817 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.313417724 seconds)
  done (took 10.622168737 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.946166236 seconds)
  done (took 4.242199286 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.305656914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.312492591 seconds)
  done (took 5.915455585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.492994852 seconds)
  done (took 3.789476483 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.458888547 seconds)
  done (took 3.755321589 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.326028152 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.329399128 seconds)
  done (took 5.960018064 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.305575516 seconds)
  done (took 3.601695901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.789089005 seconds)
  done (took 9.086540548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.305812223 seconds)
  done (took 3.604006312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.366616049 seconds)
  done (took 3.662533995 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.036105469 seconds)
  done (took 4.332112141 seconds)
done (took 78.634610132 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.306152601 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.308305764 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.307803093 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.307000247 seconds)
  done (took 10.525296006 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.376818674 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.369644885 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382958589 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36400629 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.369538534 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370589695 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.337288245 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.336753296 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.371954649 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.367043505 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.369621649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.362623952 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.379200756 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.336687099 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.366416032 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.381673902 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.36927423 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.375223998 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.336697874 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.366254253 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.312243874 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.369868511 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.363479326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.311772021 seconds)
  done (took 33.945401102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.705373414 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.382910396 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.492796291 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.364384959 seconds)
  done (took 7.24190245 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404947844 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414400139 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.414664317 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.457273108 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.484849943 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414615173 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.337853372 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.332915625 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.319676822 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.41536398 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.487751336 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.310934992 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.587187303 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.311197805 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.603404082 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.310873171 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.311042893 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403851107 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455170862 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.469975542 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.31141511 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.402392094 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.40794899 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.311587931 seconds)
  done (took 34.978605216 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.319320642 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.328872473 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.313083803 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.313195147 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.313020022 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.314253269 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.327602379 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.31381434 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.319243148 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.312410732 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.311779769 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.312853895 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.326229517 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.312165558 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.313330316 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.319415277 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.315652314 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.319299055 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.312244683 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.312718949 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.322380461 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.318795024 seconds)
  done (took 30.269643885 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.307511956 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.306540865 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.657689714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.562569161 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.307761498 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.306135702 seconds)
  done (took 13.745520555 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.366235461 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.38790547 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.312971565 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.567557734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.628458746 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.31311405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.313469517 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.417500882 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.625975932 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.697812059 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.344365941 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.352716629 seconds)
  done (took 18.625670821 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.312190974 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.306690452 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.30868707 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.321917261 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.352806457 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.315666225 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.319220115 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.306109676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35269651 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.356596306 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.31584202 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.35401866 seconds)
  done (took 21.219771747 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016052998 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195615706 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320856479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417475124 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30569353 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306808385 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436689024 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.729777764 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.311215452 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58217286 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310192823 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901722929 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311564683 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312914224 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305596716 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.314143747 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315050339 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029476927 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30626101 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30677072 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314448252 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310473407 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305613147 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.476787265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30690384 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30598142 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.568466134 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306260411 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546597549 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.514908742 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519111032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308211036 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582200989 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658233972 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444704211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477635131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320152244 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308835719 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.344569633 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.306834953 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311637367 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308082158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515500808 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307583703 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306363266 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315196628 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730490723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.31333427 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.306228883 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307918533 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519348287 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907794806 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.313062486 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306247081 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466383327 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3054841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.311219481 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500376024 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312444433 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306476902 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310116398 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.30631268 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3079103 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313576398 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902921183 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313631661 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.311366324 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314453348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310992975 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312687364 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328853539 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306590112 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.326293781 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30664333 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968059707 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312980136 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316987909 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970713234 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305840806 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.306539005 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313665239 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306757329 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31064269 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.306665719 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306221559 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065785816 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3133529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.306878738 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322886496 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.731171559 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.475298756 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113974155 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311790243 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314789957 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.310733361 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3081521 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.31491067 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321467889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330301746 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.7309329 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3107666 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.31149688 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309260471 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.516829615 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308925635 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.306347822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733489859 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308276288 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.326890993 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306457681 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.471179545 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.801320184 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518559687 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314595806 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336450455 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306511075 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124858461 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309264113 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.311300124 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311816726 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549299081 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.307179184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306551258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427590548 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322906268 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.306508795 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314737051 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308762553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307911697 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.543437362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313000136 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514450394 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.309422711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306390416 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.308279536 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306032131 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.308059849 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319053808 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308254736 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580077059 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30678341 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32354168 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306009107 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.315991074 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.307048173 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.312093916 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308034213 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306521659 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314766449 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516411402 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334054813 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448933278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333963146 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.313730052 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313450254 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.312388002 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.31215974 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306141979 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308175066 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322745291 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.314794556 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317164049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803171206 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2831119 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320199578 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194830849 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.322520148 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427862413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315453168 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473195624 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.307218712 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308299935 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.313970397 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.30823808 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306990194 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516339556 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.307942815 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479353551 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.731267638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80539781 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729679419 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.307835588 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.306419993 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.306363994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306287479 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306391106 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307707783 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474302451 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52375491 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31991054 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.809608742 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309978931 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312589509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.313517308 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517266274 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.315470723 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307365846 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.310774309 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313488476 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317861976 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515522094 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584863611 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.32222911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306806289 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825289574 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314584256 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307644289 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306668146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336755466 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306197739 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793863692 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307215375 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322506078 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519032589 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308096299 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.324474632 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.30738259 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313046353 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30893544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.321391144 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315250171 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.474686177 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314518793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308068005 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313378141 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964963346 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75966923 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315165998 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.316644567 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305988088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.731424835 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324221735 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306570761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507282395 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.730541723 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306163588 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730460102 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.311376163 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907508043 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516577005 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314725735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307501293 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.312999464 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52015373 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518497934 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338529756 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306683422 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314382529 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.308923326 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797593636 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310503224 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486392204 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72962371 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312661484 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308262636 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.382161652 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320679394 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62697926 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306485618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306149906 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315437614 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310426349 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798814804 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314369983 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308346803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061491804 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315233639 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.730990579 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306171016 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.474347885 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516017068 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.587980182 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.313530643 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.31060079 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.312256505 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51960693 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327149709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306605034 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78151671 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.15722691 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.314160809 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308983709 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126350374 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306739672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542801719 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.308094675 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.309541247 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313152839 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306829192 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306773279 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.30624978 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316050393 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281847877 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871581553 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.313896024 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314845724 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317493981 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322943732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312347086 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.322519567 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801896836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31951839 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313353834 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33578064 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.312363504 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306615059 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.323840956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307429719 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31061138 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4557027 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307205334 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314328303 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.311391772 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42185361 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519151796 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30724179 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312170208 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507649474 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.307802534 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.321401033 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98778354 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321264696 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31417779 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308629415 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324964855 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324384397 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430506526 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473562487 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.517353573 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522297974 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627827621 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313205773 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30912534 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.046048696 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024531096 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307576344 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.312807107 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.30699578 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809614986 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986800728 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.813838951 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521227085 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310319198 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346523942 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307400214 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620534669 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306735559 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583067762 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310301288 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.322148555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329043105 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30669659 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313738921 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516664758 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580790769 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306813921 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314179342 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306100656 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.306350391 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517906393 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.518524884 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001315826 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968035555 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306717983 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31509421 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.731596414 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582367462 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306965658 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30788981 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307268842 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.325965307 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307600597 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.314655143 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308717176 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594946432 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515268441 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663327473 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.512198256 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.189414314 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.181093541 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314917455 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313095447 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309958072 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472521575 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798218123 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912918231 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32067753 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431124378 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476757591 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.307608123 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6196194 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.314246255 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307076282 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307408889 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324809812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.306771321 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.512383189 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816159021 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312187401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.312669318 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.313529006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306910764 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.471520539 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322859091 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05984977 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310298158 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517654386 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310708445 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307884998 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802208143 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520903325 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308791939 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.31292857 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505618345 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320524173 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34458775 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.181757001 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.307324523 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118247756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.517180331 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122033734 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314545508 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.914655943 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809522366 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.316844856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876293481 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306869482 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308572984 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583478589 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.314384397 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309189366 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594217675 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.312415768 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31587317 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477993265 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.799154568 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912118051 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.327258966 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307595839 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.308988834 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307067428 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434762888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307847343 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336010946 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.710109801 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306866679 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314528444 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878827884 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.315438417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308430413 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.306889682 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306630274 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314970862 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.353815785 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.315090104 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310773425 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49947938 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793012476 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342243836 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.931030108 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.642342949 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318904201 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307967273 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.307954183 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.316240929 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307522985 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307287262 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307530831 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31622795 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119662653 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.306835474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.51463297 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31532308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.517276252 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517215968 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314333978 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474800591 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307590716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326770522 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.307545989 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308096726 seconds)
  done (took 984.692727531 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.327196591 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.324381192 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.315723588 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.343467499 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.309744031 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.350961682 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.364161553 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.334854609 seconds)
  done (took 19.968947707 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.30899536 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.318120877 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.308346596 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.318556626 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.308250302 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.55418888 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.314279339 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.318250396 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.324081064 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.316775671 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.313983406 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.692928211 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.318196995 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.314528008 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.31820904 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.318456133 seconds)
  done (took 30.964720355 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.030568183 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.363306015 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.429591511 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.333419667 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.322256068 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.311313264 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.470283477 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.313754079 seconds)
  done (took 22.873460919 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.324572868 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.329559373 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.325569894 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.325311703 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.325892293 seconds)
  done (took 7.929061529 seconds)
done (took 1238.278899317 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.313261003 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.31328511 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.313581907 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.315887519 seconds)
  done (took 6.553419608 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.30781844 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.308501963 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.308764744 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.727480834 seconds)
  done (took 9.950929637 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.627308138 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.765639733 seconds)
  done (took 4.690387497 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.683870074 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.362527787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.492397174 seconds)
  done (took 5.837088811 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.722825171 seconds)
  done (took 3.022454572 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.793033601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.765823747 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.469677968 seconds)
  done (took 6.3267639 seconds)
done (took 37.678881198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.314230842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.079483704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.462377923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.306998755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.467188983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.462694183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.536071827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.316939623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.311316914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.31338516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.30745842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.468916279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.523098132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.078215923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.521008619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.080191603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.468114015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.307233188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.307223735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.307914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.535115313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.307332868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.307009927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.315180394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.469870211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.452328476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.31509945 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.07987143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.312959968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.308097585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.451581831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.312020708 seconds)
  done (took 80.405082602 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.306990544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.307033916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.307830295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.31550806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.306819025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.307872377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.308920546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.307328141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.307494302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.307029343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.308923834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.307225347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.30901084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.308878562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.307555207 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.307099687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.307476321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.307489128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.30742792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.30779894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.307684048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.307434561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.307223312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.307610671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.30734757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.30729024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.308013032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.307359163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.311124425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.307577099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.309223949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307759303 seconds)
  done (took 75.156286916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.307511026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.307786683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.309629969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.307831732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.307338525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.308761921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.308953076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.307122683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.318035789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.313147019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.307293341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.315568933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.30937464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.307702849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.309334163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.307503333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.307194038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.309195163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.307280928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.313858581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.307890388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.317039338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.308081093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.307283587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.307690582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.307982496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.316038228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.307856285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.309399977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.310915641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.30742836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.307063254 seconds)
  done (took 75.204406277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.537972524 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.313516398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.315834323 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.307765506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.315358789 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.314374454 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.308138008 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.545717913 seconds)
  done (took 14.257671393 seconds)
done (took 246.32220633 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.312001041 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.796896107 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.335377437 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.307795694 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.337719822 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.338568836 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.473672606 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.335888669 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.458027621 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.308378799 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.334887226 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.308049004 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.037453574 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.419816007 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.192339837 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.308725359 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.107047319 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.307377046 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.857825005 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.48015792 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.335417567 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.308102984 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.196808795 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.111622179 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.308005441 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.318748356 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.3188313 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.426892093 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.397244369 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.320819218 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.79469654 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.308023991 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.307748186 seconds)
  done (took 61.110318456 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.313053884 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.313724159 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.313838879 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.312815285 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.312994416 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.313381877 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.313400352 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.31282854 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.312464845 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.313071237 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.313101743 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.313215304 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.312965656 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.313511878 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.313513996 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.313092849 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.313287178 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.318121234 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.313689848 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.313612147 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.312933873 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.317575313 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.313194114 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.312842004 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.313879834 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.313219532 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.313323252 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.314859879 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.312712114 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.313323499 seconds)
  done (took 40.70685155 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.313432526 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.000360255 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.308762605 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.318596921 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.63572474 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.612958046 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.155495092 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.53134547 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.319362091 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.393788662 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.309498765 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.313786965 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.313288939 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.994114265 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.346924039 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 1.944529888 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.385133178 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.666041716 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.468802718 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.308974904 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453903016 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.439679881 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.318296741 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.322350166 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.346958856 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.319145264 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.711647764 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.319535214 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.322069811 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.322620709 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.318897795 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.605356308 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.308248172 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.308267077 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.711757629 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.313850242 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.916099235 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.313305449 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.554459702 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.320267031 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.313870954 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.321182033 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.314736693 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.321717483 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.700238238 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.313193561 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.347494683 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.616593398 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.317493463 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.31696393 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.307588432 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.699255673 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.318857622 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.308628756 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.319189572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.70020062 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.319985305 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.165069277 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.614184851 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.320157255 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.321042803 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.308501754 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.308306632 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.38736037 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.308137845 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.308283569 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.307938824 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.318754673 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.327216477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.699720913 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.308594175 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.313519829 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.512828264 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.314733151 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.308139559 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.313047772 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.319412998 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.324121352 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.314625235 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.313761727 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.410063266 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.435898384 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.613415893 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.613135673 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.319585899 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.442339668 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.317723489 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.60624271 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.313402766 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.319503972 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.317515745 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.313785547 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.113327066 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.307783163 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.31349987 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.313884789 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.451236517 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.711802907 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.323175755 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.321776838 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.469726615 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.308950904 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.308160533 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.62983711 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.313576739 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.308783732 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.307647088 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.447233243 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.313134576 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.324997761 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.318573919 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.317866799 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.547540396 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.610816039 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.319955162 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.309146005 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.644812362 seconds)
  done (took 192.065746067 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.31574434 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.311716909 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.310981469 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.319713015 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.309680745 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.309119081 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.308329387 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.309573348 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.308527678 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.30834374 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.308372811 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.310285256 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.308447562 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.307742553 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.308487029 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.311232797 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.314468744 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.313187982 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.308844752 seconds)
  done (took 43.202880083 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.313593831 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.683144307 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.313721415 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.31317372 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.355339853 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.31368465 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.310015534 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.435672555 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.31323191 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.313446093 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.313547887 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.307823782 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.31736586 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.712943038 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.316006406 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.71273492 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.313648387 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.313656746 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.313463425 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.71303984 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.30784418 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.609777553 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.356819114 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.712464424 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.313884981 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.31320179 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.313385529 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.712440367 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.314089961 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.730458242 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.314644135 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.313950369 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.357056337 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.356755898 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.308737514 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.608238328 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.333444747 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.424076775 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.314121011 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.31644306 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.717746906 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.315448032 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.316375274 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.318933472 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.69195794 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.690037142 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.313517018 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.31395253 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.713113267 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.689650832 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.685087927 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.434013709 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.313428306 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.313100099 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.605553103 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.312737091 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.723862433 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.317125862 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.314204533 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.31371344 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.313203913 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.317300174 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.437350321 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.717693054 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.610927489 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.317740405 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.308922957 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.309647874 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.313869083 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.357427533 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.313724691 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.308037385 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.313842645 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.355838952 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.630814735 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.315538174 seconds)
  done (took 117.287992661 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.406977708 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.739624872 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.308552728 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.307963516 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.423326664 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.407453701 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.514177911 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.374365248 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.365721855 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.407495104 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.432275302 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.722181048 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.307662583 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.385024233 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.882418258 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.530910076 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.122240383 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.308781151 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.446464147 seconds)
  done (took 33.693222808 seconds)
done (took 489.365766507 seconds)
SAVING RESULT...
DONE!
